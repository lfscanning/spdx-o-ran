{
    "SPDXID": "SPDXRef-DOCUMENT",
    "creationInfo": {
        "created": "2024-12-06T08:21:19Z",
        "creators": [
            "Organization: aquasecurity",
            "Tool: trivy-dev",
            "Organization: Linux Foundation",
            "Tool: Scaffold",
            "Tool: Parlay"
        ]
    },
    "dataLicense": "CC0-1.0",
    "hasExtractedLicensingInfos": [
        {
            "comment": "This license text represents a string found in licensing metadata - the actual text is not known",
            "extractedText": "Other",
            "licenseId": "LicenseRef-Other"
        },
        {
            "comment": "This license text represents a string found in licensing metadata - the actual text is not known",
            "extractedText": "Apache-Software-License",
            "licenseId": "LicenseRef-Apache-Software-License"
        },
        {
            "comment": "This license text represents a string found in licensing metadata - the actual text is not known",
            "extractedText": "MIT-License",
            "licenseId": "LicenseRef-MIT-License"
        }
    ],
    "name": "/tmp/tmpw3453qbb/code",
    "spdxVersion": "SPDX-2.3",
    "documentNamespace": "http://aquasecurity.github.io/trivy/filesystem//tmp/tmpw3453qbb/code-9ecb9434-94ed-41a0-aadf-7580cf3c7f4d",
    "packages": [
        {
            "SPDXID": "SPDXRef-Application-9a45e6d3495347b6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "com-golog/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-57cbccda3269f4f3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-a1/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-bb699b67b6da548d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-a1/integration_tests/testxappcode/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-156055bcefa62388",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-alarm-go/alarm/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-cf6308505e858f84",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-alarm-go/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-123a95513fed0e02",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-appmgr/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-3d12d798da602d2c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: pip"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-b59753c6fce88cbf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-conflictmgr/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-b820b5db92e2ac01",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-dbaas/testapplication/go/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-3986f90e7c86f2e1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-e2mgr/E2Manager/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-7fa04d705f5f0761",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-d607a489c05baf31",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-709382bb26085183",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-e2mgr/tools/xappmock/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-6273b17b3724091d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-nodeb-rnib/common/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-ef2e124b6093d9ad",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-nodeb-rnib/creader/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-312f5d2c23b2bc27",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-nodeb-rnib/entities/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-9bb47ff11fca68c5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-nodeb-rnib/reader/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-128d5521d2ea5113",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-o1/agent/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-cdd49db64ed8c59e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-23d78e11a14f7d81",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-ricdms/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-ee086b892cdf21dd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-87b2f151a8374124",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-rtmgr/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-ac80a2a835aa77b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-sdlgo/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-c381a46e1b6d43f1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: pom"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-sdlpy/ricsdl-package/pom.xml",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-89138306e64ce826",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-streaming-protobufs/protogen/go/streaming_protobufs/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-b3bc8c237a6e2a7a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-stslgo/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-51e8a620d03275bb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-submgr/e2ap/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-993da5a824ece4d0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-submgr/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-973ba71e71b39adb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-tracelibgo/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-e79e81f2ce960dbc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-vespamgr/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-83ab268f57e671bd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-xapp-frame/examples/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Application-ce08c2a1cea8932b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "ric-plt-xapp-frame/go.mod",
            "primaryPackagePurpose": "APPLICATION"
        },
        {
            "SPDXID": "SPDXRef-Package-86771c8010617191",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Composable command line interface toolkit",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/click@7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://palletsprojects.com/p/click/",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "Click",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Pallets",
            "versionInfo": "7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d25609a10a205c55",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "A simple framework for building complex web applications.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/flask@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "Flask",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Pallets",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-96b1b589cf5784c8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "A very fast and expressive template engine.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/jinja2@2.11.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "Jinja2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Pallets",
            "versionInfo": "2.11.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c646d304796bdd7f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Safely add untrusted strings to HTML/XML markup.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/markupsafe@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "LicenseRef-Other",
            "licenseDeclared": "LicenseRef-Other",
            "name": "MarkupSafe",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Pallets",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-184bfe68737837c8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "YAML parser and emitter for Python",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/pyyaml@5.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://pyyaml.org/",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "PyYAML",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: The YAML Project",
            "versionInfo": "5.3"
        },
        {
            "SPDXID": "SPDXRef-Package-b65560d6a5e9ab06",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "The comprehensive WSGI web application library.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/werkzeug@0.16.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "Werkzeug",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Pallets",
            "versionInfo": "0.16.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c6a046cd25f4472",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "A library for parsing ISO 8601 strings.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/aniso8601@8.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://bitbucket.org/nielsenb/aniso8601",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "aniso8601",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "NOASSERTION",
            "versionInfo": "8.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8f94cf439733dbad",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Classes Without Boilerplate",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/attrs@19.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "attrs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: The attrs Cabal",
            "versionInfo": "19.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3ac47448994e59d4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Python package for providing Mozilla's CA Bundle.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/certifi@2019.11.28",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/certifi/python-certifi",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "certifi",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Certifi",
            "versionInfo": "2019.11.28"
        },
        {
            "SPDXID": "SPDXRef-Package-563e0b48f3ffcc47",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Universal encoding detector for Python 3",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/chardet@3.0.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/chardet/chardet",
            "licenseConcluded": "LicenseRef-Other",
            "licenseDeclared": "LicenseRef-Other",
            "name": "chardet",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Character Encoding Detector",
            "versionInfo": "3.0.4"
        },
        {
            "SPDXID": "SPDXRef-Package-14d81c3fc2f3d6e9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: cloud.google.com/go@v0.26.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cloud is the root of the packages used to access Google Cloud\nServices. See https://pkg.go.dev/cloud.google.com/go for a full list\nof sub-modules.\n\nAll clients in sub-packages are configurable via client options. These options\nare described here: https://pkg.go.dev/google.golang.org/api/option.\n\nEndpoint configuration is used to specify the URL to which requests are\nsent. It is used for services that support or require regional endpoints, as\nwell as for other use cases such as testing against fake servers.\n\nFor example, the Vertex AI service recommends that you configure the endpoint to\nthe location with the features you want that is closest to your physical\nlocation or the location of your users. There is no global endpoint for Vertex\nAI. See Vertex AI - Locations for more details. The following example\ndemonstrates configuring a Vertex AI client with a regional endpoint:\n\nAll of the clients support authentication via Google Application Default Credentials,\nor by providing a JSON key file for a Service Account. See examples below.\n\nGoogle Application Default Credentials (ADC) is the recommended way to authorize\nand authenticate clients. For information on how to create and obtain\nApplication Default Credentials, see\nhttps://cloud.google.com/docs/authentication/production. If you have your\nenvironment configured correctly you will not need to pass any extra information\nto the client libraries. Here is an example of a client using ADC to\nauthenticate:\n\nYou can use a file with credentials to authenticate and authorize, such as a\nJSON key file associated with a Google service account. Service Account keys can\nbe created and downloaded from https://console.cloud.google.com/iam-admin/serviceaccounts.\nThis example uses the Secret Manger client, but the same steps apply to the\nall other client libraries this package as well. Example:\n\nIn some cases (for instance, you don't want to store secrets on disk), you can\ncreate credentials from in-memory JSON and use the WithCredentials option.\nThis example uses the Secret Manager client, but the same steps apply to\nall other client libraries as well. Note that scopes can be\nfound at https://developers.google.com/identity/protocols/oauth2/scopes, and\nare also provided in all auto-generated libraries: for example,\ncloud.google.com/go/secretmanager/apiv1 provides DefaultAuthScopes. Example:\n\nBy default, non-streaming methods, like Create or Get, will have a default\ndeadline applied to the context provided at call time, unless a context deadline\nis already set. Streaming methods have no default deadline and will run\nindefinitely. To set timeouts or arrange for cancellation, use\ncontext. Transient errors will be retried when correctness allows.\n\nHere is an example of setting a timeout for an RPC using\ncontext.WithTimeout:\n\nHere is an example of setting a timeout for an RPC using\ngithub.com/googleapis/gax-go/v2.WithTimeout:\n\nHere is an example of how to arrange for an RPC to be canceled, use\ncontext.WithCancel:\n\nDo not attempt to control the initial connection (dialing) of a service by\nsetting a timeout on the context passed to NewClient. Dialing is non-blocking,\nso timeouts would be ineffective and would only interfere with credential\nrefreshing, which uses the same context.\n\nRegardless of which transport is used, request headers can be set in the same\nway using [`callctx.SetHeaders`]setheaders.\n\nHere is a generic example:\n\n## Google-reserved headers\n\nThere are a some header keys that Google reserves for internal use that must\nnot be ovewritten. The following header keys are broadly considered reserved\nand should not be conveyed by client library users unless instructed to do so:\n\n* `x-goog-api-client`\n* `x-goog-request-params`\n\nBe sure to check the individual package documentation for other service-specific\nreserved headers. For example, Storage supports a specific auditing header that\nis mentioned in that [module's documentation]storagedocs.\n\n## Google Cloud system parameters\n\nGoogle Cloud services respect system parameterssystem parameters that can be\nused to augment request and/or response behavior. For the most part, they are\nnot needed when using one of the enclosed client libraries. However, those that\nmay be necessary are made available via the [`callctx`]callctx package. If not\npresent there, consider opening an issue on that repo to request a new constant.\n\nConnection pooling differs in clients based on their transport. Cloud\nclients either rely on HTTP or gRPC transports to communicate\nwith Google Cloud.\n\nCloud clients that use HTTP rely on the underlying HTTP transport to cache\nconnections for later re-use. These are cached to the http.MaxIdleConns\nand http.MaxIdleConnsPerHost settings in http.DefaultTransport by default.\n\nFor gRPC clients, connection pooling is configurable. Users of Cloud Client\nLibraries may specify option.WithGRPCConnectionPool(n) as a client option to\nNewClient calls. This configures the underlying gRPC connections to be pooled\nand accessed in a round robin fashion.\n\nMinimal container images like Alpine lack CA certificates. This causes RPCs to\nappear to hang, because gRPC retries indefinitely. See\nhttps://github.com/googleapis/google-cloud-go/issues/928 for more information.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Debugging Guide.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Testing Guide.\n\nMost of the errors returned by the generated clients are wrapped in an\ngithub.com/googleapis/gax-go/v2/apierror.APIError and can be further unwrapped\ninto a google.golang.org/grpc/status.Status or\ngoogle.golang.org/api/googleapi.Error depending on the transport used to make\nthe call (gRPC or REST). Converting your errors to these types can be a useful\nway to get more information about what went wrong while debugging.\n\nAPIError gives access to specific details in the error. The transport-specific\nerrors can still be unwrapped using the APIError.\n\nIf the gRPC transport was used, the google.golang.org/grpc/status.Status can\nstill be parsed using the google.golang.org/grpc/status.FromError function.\n\nSemver is used to communicate stability of the sub-modules of this package.\nNote, some stable sub-modules do contain packages, and sometimes features, that\nare considered unstable. If something is unstable it will be explicitly labeled\nas such. Example of package does in an unstable package:\n\nClients that contain alpha and beta in their import path may change or go away\nwithout notice.\n\nClients marked stable will maintain compatibility with future versions for as\nlong as we can reasonably sustain. Incompatible changes might be made in some\nsituations, including:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/cloud.google.com/go@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/google-cloud-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "cloud.google.com/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-38d9959e7078fbd1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: cloud.google.com/go@v0.26.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cloud is the root of the packages used to access Google Cloud\nServices. See https://pkg.go.dev/cloud.google.com/go for a full list\nof sub-modules.\n\nAll clients in sub-packages are configurable via client options. These options\nare described here: https://pkg.go.dev/google.golang.org/api/option.\n\nEndpoint configuration is used to specify the URL to which requests are\nsent. It is used for services that support or require regional endpoints, as\nwell as for other use cases such as testing against fake servers.\n\nFor example, the Vertex AI service recommends that you configure the endpoint to\nthe location with the features you want that is closest to your physical\nlocation or the location of your users. There is no global endpoint for Vertex\nAI. See Vertex AI - Locations for more details. The following example\ndemonstrates configuring a Vertex AI client with a regional endpoint:\n\nAll of the clients support authentication via Google Application Default Credentials,\nor by providing a JSON key file for a Service Account. See examples below.\n\nGoogle Application Default Credentials (ADC) is the recommended way to authorize\nand authenticate clients. For information on how to create and obtain\nApplication Default Credentials, see\nhttps://cloud.google.com/docs/authentication/production. If you have your\nenvironment configured correctly you will not need to pass any extra information\nto the client libraries. Here is an example of a client using ADC to\nauthenticate:\n\nYou can use a file with credentials to authenticate and authorize, such as a\nJSON key file associated with a Google service account. Service Account keys can\nbe created and downloaded from https://console.cloud.google.com/iam-admin/serviceaccounts.\nThis example uses the Secret Manger client, but the same steps apply to the\nall other client libraries this package as well. Example:\n\nIn some cases (for instance, you don't want to store secrets on disk), you can\ncreate credentials from in-memory JSON and use the WithCredentials option.\nThis example uses the Secret Manager client, but the same steps apply to\nall other client libraries as well. Note that scopes can be\nfound at https://developers.google.com/identity/protocols/oauth2/scopes, and\nare also provided in all auto-generated libraries: for example,\ncloud.google.com/go/secretmanager/apiv1 provides DefaultAuthScopes. Example:\n\nBy default, non-streaming methods, like Create or Get, will have a default\ndeadline applied to the context provided at call time, unless a context deadline\nis already set. Streaming methods have no default deadline and will run\nindefinitely. To set timeouts or arrange for cancellation, use\ncontext. Transient errors will be retried when correctness allows.\n\nHere is an example of setting a timeout for an RPC using\ncontext.WithTimeout:\n\nHere is an example of setting a timeout for an RPC using\ngithub.com/googleapis/gax-go/v2.WithTimeout:\n\nHere is an example of how to arrange for an RPC to be canceled, use\ncontext.WithCancel:\n\nDo not attempt to control the initial connection (dialing) of a service by\nsetting a timeout on the context passed to NewClient. Dialing is non-blocking,\nso timeouts would be ineffective and would only interfere with credential\nrefreshing, which uses the same context.\n\nRegardless of which transport is used, request headers can be set in the same\nway using [`callctx.SetHeaders`]setheaders.\n\nHere is a generic example:\n\n## Google-reserved headers\n\nThere are a some header keys that Google reserves for internal use that must\nnot be ovewritten. The following header keys are broadly considered reserved\nand should not be conveyed by client library users unless instructed to do so:\n\n* `x-goog-api-client`\n* `x-goog-request-params`\n\nBe sure to check the individual package documentation for other service-specific\nreserved headers. For example, Storage supports a specific auditing header that\nis mentioned in that [module's documentation]storagedocs.\n\n## Google Cloud system parameters\n\nGoogle Cloud services respect system parameterssystem parameters that can be\nused to augment request and/or response behavior. For the most part, they are\nnot needed when using one of the enclosed client libraries. However, those that\nmay be necessary are made available via the [`callctx`]callctx package. If not\npresent there, consider opening an issue on that repo to request a new constant.\n\nConnection pooling differs in clients based on their transport. Cloud\nclients either rely on HTTP or gRPC transports to communicate\nwith Google Cloud.\n\nCloud clients that use HTTP rely on the underlying HTTP transport to cache\nconnections for later re-use. These are cached to the http.MaxIdleConns\nand http.MaxIdleConnsPerHost settings in http.DefaultTransport by default.\n\nFor gRPC clients, connection pooling is configurable. Users of Cloud Client\nLibraries may specify option.WithGRPCConnectionPool(n) as a client option to\nNewClient calls. This configures the underlying gRPC connections to be pooled\nand accessed in a round robin fashion.\n\nMinimal container images like Alpine lack CA certificates. This causes RPCs to\nappear to hang, because gRPC retries indefinitely. See\nhttps://github.com/googleapis/google-cloud-go/issues/928 for more information.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Debugging Guide.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Testing Guide.\n\nMost of the errors returned by the generated clients are wrapped in an\ngithub.com/googleapis/gax-go/v2/apierror.APIError and can be further unwrapped\ninto a google.golang.org/grpc/status.Status or\ngoogle.golang.org/api/googleapi.Error depending on the transport used to make\nthe call (gRPC or REST). Converting your errors to these types can be a useful\nway to get more information about what went wrong while debugging.\n\nAPIError gives access to specific details in the error. The transport-specific\nerrors can still be unwrapped using the APIError.\n\nIf the gRPC transport was used, the google.golang.org/grpc/status.Status can\nstill be parsed using the google.golang.org/grpc/status.FromError function.\n\nSemver is used to communicate stability of the sub-modules of this package.\nNote, some stable sub-modules do contain packages, and sometimes features, that\nare considered unstable. If something is unstable it will be explicitly labeled\nas such. Example of package does in an unstable package:\n\nClients that contain alpha and beta in their import path may change or go away\nwithout notice.\n\nClients marked stable will maintain compatibility with future versions for as\nlong as we can reasonably sustain. Incompatible changes might be made in some\nsituations, including:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/cloud.google.com/go@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/google-cloud-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "cloud.google.com/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-397265596f6a6dfa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: cloud.google.com/go@v0.26.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cloud is the root of the packages used to access Google Cloud\nServices. See https://pkg.go.dev/cloud.google.com/go for a full list\nof sub-modules.\n\nAll clients in sub-packages are configurable via client options. These options\nare described here: https://pkg.go.dev/google.golang.org/api/option.\n\nEndpoint configuration is used to specify the URL to which requests are\nsent. It is used for services that support or require regional endpoints, as\nwell as for other use cases such as testing against fake servers.\n\nFor example, the Vertex AI service recommends that you configure the endpoint to\nthe location with the features you want that is closest to your physical\nlocation or the location of your users. There is no global endpoint for Vertex\nAI. See Vertex AI - Locations for more details. The following example\ndemonstrates configuring a Vertex AI client with a regional endpoint:\n\nAll of the clients support authentication via Google Application Default Credentials,\nor by providing a JSON key file for a Service Account. See examples below.\n\nGoogle Application Default Credentials (ADC) is the recommended way to authorize\nand authenticate clients. For information on how to create and obtain\nApplication Default Credentials, see\nhttps://cloud.google.com/docs/authentication/production. If you have your\nenvironment configured correctly you will not need to pass any extra information\nto the client libraries. Here is an example of a client using ADC to\nauthenticate:\n\nYou can use a file with credentials to authenticate and authorize, such as a\nJSON key file associated with a Google service account. Service Account keys can\nbe created and downloaded from https://console.cloud.google.com/iam-admin/serviceaccounts.\nThis example uses the Secret Manger client, but the same steps apply to the\nall other client libraries this package as well. Example:\n\nIn some cases (for instance, you don't want to store secrets on disk), you can\ncreate credentials from in-memory JSON and use the WithCredentials option.\nThis example uses the Secret Manager client, but the same steps apply to\nall other client libraries as well. Note that scopes can be\nfound at https://developers.google.com/identity/protocols/oauth2/scopes, and\nare also provided in all auto-generated libraries: for example,\ncloud.google.com/go/secretmanager/apiv1 provides DefaultAuthScopes. Example:\n\nBy default, non-streaming methods, like Create or Get, will have a default\ndeadline applied to the context provided at call time, unless a context deadline\nis already set. Streaming methods have no default deadline and will run\nindefinitely. To set timeouts or arrange for cancellation, use\ncontext. Transient errors will be retried when correctness allows.\n\nHere is an example of setting a timeout for an RPC using\ncontext.WithTimeout:\n\nHere is an example of setting a timeout for an RPC using\ngithub.com/googleapis/gax-go/v2.WithTimeout:\n\nHere is an example of how to arrange for an RPC to be canceled, use\ncontext.WithCancel:\n\nDo not attempt to control the initial connection (dialing) of a service by\nsetting a timeout on the context passed to NewClient. Dialing is non-blocking,\nso timeouts would be ineffective and would only interfere with credential\nrefreshing, which uses the same context.\n\nRegardless of which transport is used, request headers can be set in the same\nway using [`callctx.SetHeaders`]setheaders.\n\nHere is a generic example:\n\n## Google-reserved headers\n\nThere are a some header keys that Google reserves for internal use that must\nnot be ovewritten. The following header keys are broadly considered reserved\nand should not be conveyed by client library users unless instructed to do so:\n\n* `x-goog-api-client`\n* `x-goog-request-params`\n\nBe sure to check the individual package documentation for other service-specific\nreserved headers. For example, Storage supports a specific auditing header that\nis mentioned in that [module's documentation]storagedocs.\n\n## Google Cloud system parameters\n\nGoogle Cloud services respect system parameterssystem parameters that can be\nused to augment request and/or response behavior. For the most part, they are\nnot needed when using one of the enclosed client libraries. However, those that\nmay be necessary are made available via the [`callctx`]callctx package. If not\npresent there, consider opening an issue on that repo to request a new constant.\n\nConnection pooling differs in clients based on their transport. Cloud\nclients either rely on HTTP or gRPC transports to communicate\nwith Google Cloud.\n\nCloud clients that use HTTP rely on the underlying HTTP transport to cache\nconnections for later re-use. These are cached to the http.MaxIdleConns\nand http.MaxIdleConnsPerHost settings in http.DefaultTransport by default.\n\nFor gRPC clients, connection pooling is configurable. Users of Cloud Client\nLibraries may specify option.WithGRPCConnectionPool(n) as a client option to\nNewClient calls. This configures the underlying gRPC connections to be pooled\nand accessed in a round robin fashion.\n\nMinimal container images like Alpine lack CA certificates. This causes RPCs to\nappear to hang, because gRPC retries indefinitely. See\nhttps://github.com/googleapis/google-cloud-go/issues/928 for more information.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Debugging Guide.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Testing Guide.\n\nMost of the errors returned by the generated clients are wrapped in an\ngithub.com/googleapis/gax-go/v2/apierror.APIError and can be further unwrapped\ninto a google.golang.org/grpc/status.Status or\ngoogle.golang.org/api/googleapi.Error depending on the transport used to make\nthe call (gRPC or REST). Converting your errors to these types can be a useful\nway to get more information about what went wrong while debugging.\n\nAPIError gives access to specific details in the error. The transport-specific\nerrors can still be unwrapped using the APIError.\n\nIf the gRPC transport was used, the google.golang.org/grpc/status.Status can\nstill be parsed using the google.golang.org/grpc/status.FromError function.\n\nSemver is used to communicate stability of the sub-modules of this package.\nNote, some stable sub-modules do contain packages, and sometimes features, that\nare considered unstable. If something is unstable it will be explicitly labeled\nas such. Example of package does in an unstable package:\n\nClients that contain alpha and beta in their import path may change or go away\nwithout notice.\n\nClients marked stable will maintain compatibility with future versions for as\nlong as we can reasonably sustain. Incompatible changes might be made in some\nsituations, including:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/cloud.google.com/go@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/google-cloud-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "cloud.google.com/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8e7d4aee64d76f55",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: cloud.google.com/go@v0.26.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cloud is the root of the packages used to access Google Cloud\nServices. See https://pkg.go.dev/cloud.google.com/go for a full list\nof sub-modules.\n\nAll clients in sub-packages are configurable via client options. These options\nare described here: https://pkg.go.dev/google.golang.org/api/option.\n\nEndpoint configuration is used to specify the URL to which requests are\nsent. It is used for services that support or require regional endpoints, as\nwell as for other use cases such as testing against fake servers.\n\nFor example, the Vertex AI service recommends that you configure the endpoint to\nthe location with the features you want that is closest to your physical\nlocation or the location of your users. There is no global endpoint for Vertex\nAI. See Vertex AI - Locations for more details. The following example\ndemonstrates configuring a Vertex AI client with a regional endpoint:\n\nAll of the clients support authentication via Google Application Default Credentials,\nor by providing a JSON key file for a Service Account. See examples below.\n\nGoogle Application Default Credentials (ADC) is the recommended way to authorize\nand authenticate clients. For information on how to create and obtain\nApplication Default Credentials, see\nhttps://cloud.google.com/docs/authentication/production. If you have your\nenvironment configured correctly you will not need to pass any extra information\nto the client libraries. Here is an example of a client using ADC to\nauthenticate:\n\nYou can use a file with credentials to authenticate and authorize, such as a\nJSON key file associated with a Google service account. Service Account keys can\nbe created and downloaded from https://console.cloud.google.com/iam-admin/serviceaccounts.\nThis example uses the Secret Manger client, but the same steps apply to the\nall other client libraries this package as well. Example:\n\nIn some cases (for instance, you don't want to store secrets on disk), you can\ncreate credentials from in-memory JSON and use the WithCredentials option.\nThis example uses the Secret Manager client, but the same steps apply to\nall other client libraries as well. Note that scopes can be\nfound at https://developers.google.com/identity/protocols/oauth2/scopes, and\nare also provided in all auto-generated libraries: for example,\ncloud.google.com/go/secretmanager/apiv1 provides DefaultAuthScopes. Example:\n\nBy default, non-streaming methods, like Create or Get, will have a default\ndeadline applied to the context provided at call time, unless a context deadline\nis already set. Streaming methods have no default deadline and will run\nindefinitely. To set timeouts or arrange for cancellation, use\ncontext. Transient errors will be retried when correctness allows.\n\nHere is an example of setting a timeout for an RPC using\ncontext.WithTimeout:\n\nHere is an example of setting a timeout for an RPC using\ngithub.com/googleapis/gax-go/v2.WithTimeout:\n\nHere is an example of how to arrange for an RPC to be canceled, use\ncontext.WithCancel:\n\nDo not attempt to control the initial connection (dialing) of a service by\nsetting a timeout on the context passed to NewClient. Dialing is non-blocking,\nso timeouts would be ineffective and would only interfere with credential\nrefreshing, which uses the same context.\n\nRegardless of which transport is used, request headers can be set in the same\nway using [`callctx.SetHeaders`]setheaders.\n\nHere is a generic example:\n\n## Google-reserved headers\n\nThere are a some header keys that Google reserves for internal use that must\nnot be ovewritten. The following header keys are broadly considered reserved\nand should not be conveyed by client library users unless instructed to do so:\n\n* `x-goog-api-client`\n* `x-goog-request-params`\n\nBe sure to check the individual package documentation for other service-specific\nreserved headers. For example, Storage supports a specific auditing header that\nis mentioned in that [module's documentation]storagedocs.\n\n## Google Cloud system parameters\n\nGoogle Cloud services respect system parameterssystem parameters that can be\nused to augment request and/or response behavior. For the most part, they are\nnot needed when using one of the enclosed client libraries. However, those that\nmay be necessary are made available via the [`callctx`]callctx package. If not\npresent there, consider opening an issue on that repo to request a new constant.\n\nConnection pooling differs in clients based on their transport. Cloud\nclients either rely on HTTP or gRPC transports to communicate\nwith Google Cloud.\n\nCloud clients that use HTTP rely on the underlying HTTP transport to cache\nconnections for later re-use. These are cached to the http.MaxIdleConns\nand http.MaxIdleConnsPerHost settings in http.DefaultTransport by default.\n\nFor gRPC clients, connection pooling is configurable. Users of Cloud Client\nLibraries may specify option.WithGRPCConnectionPool(n) as a client option to\nNewClient calls. This configures the underlying gRPC connections to be pooled\nand accessed in a round robin fashion.\n\nMinimal container images like Alpine lack CA certificates. This causes RPCs to\nappear to hang, because gRPC retries indefinitely. See\nhttps://github.com/googleapis/google-cloud-go/issues/928 for more information.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Debugging Guide.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Testing Guide.\n\nMost of the errors returned by the generated clients are wrapped in an\ngithub.com/googleapis/gax-go/v2/apierror.APIError and can be further unwrapped\ninto a google.golang.org/grpc/status.Status or\ngoogle.golang.org/api/googleapi.Error depending on the transport used to make\nthe call (gRPC or REST). Converting your errors to these types can be a useful\nway to get more information about what went wrong while debugging.\n\nAPIError gives access to specific details in the error. The transport-specific\nerrors can still be unwrapped using the APIError.\n\nIf the gRPC transport was used, the google.golang.org/grpc/status.Status can\nstill be parsed using the google.golang.org/grpc/status.FromError function.\n\nSemver is used to communicate stability of the sub-modules of this package.\nNote, some stable sub-modules do contain packages, and sometimes features, that\nare considered unstable. If something is unstable it will be explicitly labeled\nas such. Example of package does in an unstable package:\n\nClients that contain alpha and beta in their import path may change or go away\nwithout notice.\n\nClients marked stable will maintain compatibility with future versions for as\nlong as we can reasonably sustain. Incompatible changes might be made in some\nsituations, including:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/cloud.google.com/go@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/google-cloud-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "cloud.google.com/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8efa432900184991",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: cloud.google.com/go@v0.26.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cloud is the root of the packages used to access Google Cloud\nServices. See https://pkg.go.dev/cloud.google.com/go for a full list\nof sub-modules.\n\nAll clients in sub-packages are configurable via client options. These options\nare described here: https://pkg.go.dev/google.golang.org/api/option.\n\nEndpoint configuration is used to specify the URL to which requests are\nsent. It is used for services that support or require regional endpoints, as\nwell as for other use cases such as testing against fake servers.\n\nFor example, the Vertex AI service recommends that you configure the endpoint to\nthe location with the features you want that is closest to your physical\nlocation or the location of your users. There is no global endpoint for Vertex\nAI. See Vertex AI - Locations for more details. The following example\ndemonstrates configuring a Vertex AI client with a regional endpoint:\n\nAll of the clients support authentication via Google Application Default Credentials,\nor by providing a JSON key file for a Service Account. See examples below.\n\nGoogle Application Default Credentials (ADC) is the recommended way to authorize\nand authenticate clients. For information on how to create and obtain\nApplication Default Credentials, see\nhttps://cloud.google.com/docs/authentication/production. If you have your\nenvironment configured correctly you will not need to pass any extra information\nto the client libraries. Here is an example of a client using ADC to\nauthenticate:\n\nYou can use a file with credentials to authenticate and authorize, such as a\nJSON key file associated with a Google service account. Service Account keys can\nbe created and downloaded from https://console.cloud.google.com/iam-admin/serviceaccounts.\nThis example uses the Secret Manger client, but the same steps apply to the\nall other client libraries this package as well. Example:\n\nIn some cases (for instance, you don't want to store secrets on disk), you can\ncreate credentials from in-memory JSON and use the WithCredentials option.\nThis example uses the Secret Manager client, but the same steps apply to\nall other client libraries as well. Note that scopes can be\nfound at https://developers.google.com/identity/protocols/oauth2/scopes, and\nare also provided in all auto-generated libraries: for example,\ncloud.google.com/go/secretmanager/apiv1 provides DefaultAuthScopes. Example:\n\nBy default, non-streaming methods, like Create or Get, will have a default\ndeadline applied to the context provided at call time, unless a context deadline\nis already set. Streaming methods have no default deadline and will run\nindefinitely. To set timeouts or arrange for cancellation, use\ncontext. Transient errors will be retried when correctness allows.\n\nHere is an example of setting a timeout for an RPC using\ncontext.WithTimeout:\n\nHere is an example of setting a timeout for an RPC using\ngithub.com/googleapis/gax-go/v2.WithTimeout:\n\nHere is an example of how to arrange for an RPC to be canceled, use\ncontext.WithCancel:\n\nDo not attempt to control the initial connection (dialing) of a service by\nsetting a timeout on the context passed to NewClient. Dialing is non-blocking,\nso timeouts would be ineffective and would only interfere with credential\nrefreshing, which uses the same context.\n\nRegardless of which transport is used, request headers can be set in the same\nway using [`callctx.SetHeaders`]setheaders.\n\nHere is a generic example:\n\n## Google-reserved headers\n\nThere are a some header keys that Google reserves for internal use that must\nnot be ovewritten. The following header keys are broadly considered reserved\nand should not be conveyed by client library users unless instructed to do so:\n\n* `x-goog-api-client`\n* `x-goog-request-params`\n\nBe sure to check the individual package documentation for other service-specific\nreserved headers. For example, Storage supports a specific auditing header that\nis mentioned in that [module's documentation]storagedocs.\n\n## Google Cloud system parameters\n\nGoogle Cloud services respect system parameterssystem parameters that can be\nused to augment request and/or response behavior. For the most part, they are\nnot needed when using one of the enclosed client libraries. However, those that\nmay be necessary are made available via the [`callctx`]callctx package. If not\npresent there, consider opening an issue on that repo to request a new constant.\n\nConnection pooling differs in clients based on their transport. Cloud\nclients either rely on HTTP or gRPC transports to communicate\nwith Google Cloud.\n\nCloud clients that use HTTP rely on the underlying HTTP transport to cache\nconnections for later re-use. These are cached to the http.MaxIdleConns\nand http.MaxIdleConnsPerHost settings in http.DefaultTransport by default.\n\nFor gRPC clients, connection pooling is configurable. Users of Cloud Client\nLibraries may specify option.WithGRPCConnectionPool(n) as a client option to\nNewClient calls. This configures the underlying gRPC connections to be pooled\nand accessed in a round robin fashion.\n\nMinimal container images like Alpine lack CA certificates. This causes RPCs to\nappear to hang, because gRPC retries indefinitely. See\nhttps://github.com/googleapis/google-cloud-go/issues/928 for more information.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Debugging Guide.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Testing Guide.\n\nMost of the errors returned by the generated clients are wrapped in an\ngithub.com/googleapis/gax-go/v2/apierror.APIError and can be further unwrapped\ninto a google.golang.org/grpc/status.Status or\ngoogle.golang.org/api/googleapi.Error depending on the transport used to make\nthe call (gRPC or REST). Converting your errors to these types can be a useful\nway to get more information about what went wrong while debugging.\n\nAPIError gives access to specific details in the error. The transport-specific\nerrors can still be unwrapped using the APIError.\n\nIf the gRPC transport was used, the google.golang.org/grpc/status.Status can\nstill be parsed using the google.golang.org/grpc/status.FromError function.\n\nSemver is used to communicate stability of the sub-modules of this package.\nNote, some stable sub-modules do contain packages, and sometimes features, that\nare considered unstable. If something is unstable it will be explicitly labeled\nas such. Example of package does in an unstable package:\n\nClients that contain alpha and beta in their import path may change or go away\nwithout notice.\n\nClients marked stable will maintain compatibility with future versions for as\nlong as we can reasonably sustain. Incompatible changes might be made in some\nsituations, including:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/cloud.google.com/go@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/google-cloud-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "cloud.google.com/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2376be91f9439ed4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: conflict-manager"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/conflict-manager",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "conflict-manager",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-7c620c1790eca44f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: depxapp"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/depxapp",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "depxapp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-6f3bae14384a6db9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: e2mgr"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/e2mgr",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "e2mgr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-1ec739c97b1b8e7b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "A library for automatically generating command line interfaces.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/fire@0.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/python-fire",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "fire",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Google",
            "versionInfo": "0.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-6cb45566cfbf21aa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Fully featured framework for fast, easy and documented API development with Flask",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/flask-restx@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/python-restx/flask-restx",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "flask-restx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: python-restx",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ef73f622c7f5b6c9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: com-golog/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-10423372fd2fbaba",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-tracelibgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-22528f00353e8f0c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-260b30aac51158f4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-2afac8a064e0ff0c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-5dec98a267c0ed2a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-7603bb6a2f57d9cd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-83e2f965974d4f6a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-b73813f360bdc796",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-cdf581fb63e0a8d6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-eee75c45ad894f82",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-f37b6d99a90a15bb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-fa40c97e3633d4f3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-ff0f223a3cd85f8b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/com/golog.git@v0.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/com/golog.git@0.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/com/golog",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/com/golog.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/a1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/a1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/a1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-f88822e63dfd7ee2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-1220674150a40597",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@v0.5.1-0.20211223104552-f7d2cf80e85c"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@0.5.1-0.20211223104552-f7d2cf80e85c",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/alarm-go",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.1-0.20211223104552-f7d2cf80e85c"
        },
        {
            "SPDXID": "SPDXRef-Package-15c2b80c07f31fc5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/alarm-go",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-271fd76b424a4504",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/alarm-go",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4a5e7f0ce2a9bda8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/alarm-go",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9e3d5feef6a1b13e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@v0.5.14"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@0.5.14",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/alarm-go",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.14"
        },
        {
            "SPDXID": "SPDXRef-Package-b23d4f24bb8391a8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/alarm-go",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/alarm/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-b30ca15ba9a1a636",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/alarm-go",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e5e3aa0d95f992c8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@v0.5.1-0.20211223104552-f7d2cf80e85c"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@0.5.1-0.20211223104552-f7d2cf80e85c",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/alarm-go",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.1-0.20211223104552-f7d2cf80e85c"
        },
        {
            "SPDXID": "SPDXRef-Package-f2a72affd91422eb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@v0.5.14"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm@0.5.14",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/alarm-go",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/alarm-go.git/alarm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.14"
        },
        {
            "SPDXID": "SPDXRef-Package-ea2cd87abc9fa562",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/appmgr"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/appmgr",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/appmgr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-8a9539292cf2a39d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/e2ap"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/e2ap",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/e2ap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/e2ap/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-2d5852e5854b17ba",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/common/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-436de61fe704c214",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-45a4a5f90bddbb01",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@v1.0.35"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@1.0.35",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.35"
        },
        {
            "SPDXID": "SPDXRef-Package-5760f2d736465ea9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-90e8203a7d4fe594",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-97e126a4eb13f31c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c13a7e87773e556f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c9f19d063c7a6112",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@v1.2.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@1.2.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.9"
        },
        {
            "SPDXID": "SPDXRef-Package-db73c8cf67c72af9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@v1.0.35"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@1.0.35",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.35"
        },
        {
            "SPDXID": "SPDXRef-Package-e460f98388cd0c6d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-f7e509aee1374891",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-fccd09f109184450",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c8c9fda8c00ee091",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/creader"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/creader",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/creader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-14c804413ee850a7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@v1.2.8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@1.2.8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.8"
        },
        {
            "SPDXID": "SPDXRef-Package-3593cd4641f97b81",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-494c711f170cd76f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@v1.2.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@1.2.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.9"
        },
        {
            "SPDXID": "SPDXRef-Package-647e3f6b741f49b8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@v1.0.35"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@1.0.35",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.35"
        },
        {
            "SPDXID": "SPDXRef-Package-65173b2aef0a5981",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/entities/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-67d6ae656829b3bd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-75a2b07065c5b1b4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b158bceeb21be17a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d2bb6ece8bfa4172",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d4499dad2109243",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@v1.0.35"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@1.0.35",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.35"
        },
        {
            "SPDXID": "SPDXRef-Package-e79bc1421cfd7c50",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-eedaa0d190e4419e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/entities",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-2fea2ab188412a63",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4ab0c13ad9b89ba5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@v1.0.35"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@1.0.35",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.35"
        },
        {
            "SPDXID": "SPDXRef-Package-6119248f52d33462",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-79352a19d21fd465",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@v1.0.35"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@1.0.35",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.35"
        },
        {
            "SPDXID": "SPDXRef-Package-7cc5cd27dc00c256",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-8df08498e43c765d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@v1.2.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@1.2.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.9"
        },
        {
            "SPDXID": "SPDXRef-Package-8e20c19e652671f6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/reader/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-9c6608aa603ee769",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-cac1d54d1ab813be",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d73d3a1da2b8d0e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-eaf7458ade1fbb9e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-fb4f48236057801d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/nodeb-rnib.git/reader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-7148b67fbbfc5116",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/ricdms"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/ricdms",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/ricdms",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-24b9e6e95293da2e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-29aaee985c81a03d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-36624e08cdffc664",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-57b8a7143d968b75",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-74f8e7ac8bd29361",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-815104e085d7ccd8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8c7f7d4485fab4ff",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a101d96365152511",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a9e24951ea45e3b8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b0728aa20ef5a549",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.10.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.10.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.10.2"
        },
        {
            "SPDXID": "SPDXRef-Package-d2b9cca04027ba50",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ee87d3299ea59ec9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@v0.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git@0.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/sdlgo.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b96db1443698f161",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/streaming-protobufs.git/protogen/go/streaming_protobufs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/streaming-protobufs.git/protogen/go/streaming_protobufs",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gerrit.o-ran-sc.org/r/ric-plt/streaming-protobufs",
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/streaming-protobufs.git/protogen/go/streaming_protobufs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-streaming-protobufs/protogen/go/streaming_protobufs/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-b813cf1e938b7a8e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/submgr"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/submgr",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/submgr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-ca399d4af3b495d3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/tracelibgo"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/tracelibgo",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/tracelibgo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-tracelibgo/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-cb1224ccf06ce876",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/vespamgr"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/vespamgr",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/vespamgr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-2b294a1e20fab097",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-14744af34905031e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@v0.9.18"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@0.9.18",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.18"
        },
        {
            "SPDXID": "SPDXRef-Package-206383f5110ac666",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@v0.9.16"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@0.9.16",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.16"
        },
        {
            "SPDXID": "SPDXRef-Package-5b0663fd54187379",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@v0.9.16"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@0.9.16",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.16"
        },
        {
            "SPDXID": "SPDXRef-Package-5f0d4fb3840d988f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@v0.9.16"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@0.9.16",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.16"
        },
        {
            "SPDXID": "SPDXRef-Package-71147429596d06b8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@v0.4.8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@0.4.8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/integration_tests/testxappcode/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.8"
        },
        {
            "SPDXID": "SPDXRef-Package-8a60d775b1670791",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@v0.9.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-97e8bb3b1dac58fd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@v0.9.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@0.9.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.3"
        },
        {
            "SPDXID": "SPDXRef-Package-c43d4dbef04dcbee",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@v0.9.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d511feaa343043b3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@v0.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git@0.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame.git",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4cf0142f6ef7ebe",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/example-xapp"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/example-xapp",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/example-xapp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-f11729830b271a80",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/example-xapp"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/example-xapp",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/example-xapp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/integration_tests/testxappcode/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-236c31d62357aec",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gerrit.oran-osc.org/r/ric-plt/o1mediator"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gerrit.oran-osc.org/r/ric-plt/o1mediator",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "gerrit.oran-osc.org/r/ric-plt/o1mediator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-d3a1cf1daadd14b6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Azure/go-ansiterm@v0.0.0-20210617225240-d185dfc1b5a1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/azure/go-ansiterm@0.0.0-20210617225240-d185dfc1b5a1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/azure/go-ansiterm",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/Azure/go-ansiterm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20210617225240-d185dfc1b5a1"
        },
        {
            "SPDXID": "SPDXRef-Package-11940ff427bf7369",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/BurntSushi/toml@v0.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml provides facilities for decoding and encoding TOML configuration\nfiles via reflection. There is also support for delaying decoding with\nthe Primitive type, and querying the set of keys in a TOML document with the\nMetaData type.\n\nThe specification implemented: https://github.com/toml-lang/toml\n\nThe sub-command github.com/BurntSushi/toml/cmd/tomlv can be used to verify\nwhether a file is a valid TOML document. It can also be used to print the\ntype of each key in a TOML document.\n\nThere are two important types of tests used for this package. The first is\ncontained inside '*_test.go' files and uses the standard Go unit testing\nframework. These tests are primarily devoted to holistically testing the\ndecoder and encoder.\n\nThe second type of testing is used to verify the implementation's adherence\nto the TOML specification. These tests have been factored into their own\nproject: https://github.com/BurntSushi/toml-test\n\nThe reason the tests are in a separate project is so that they can be used by\nany implementation of TOML. Namely, it is language agnostic.\n\nExample StrictDecoding shows how to detect whether there are keys in the\nTOML document that weren't decoded into the value given. This is useful\nfor returning an error to the user if they've included extraneous fields\nin their configuration.\n\nExample UnmarshalTOML shows how to implement a struct type that knows how to\nunmarshal itself. The struct must take full responsibility for mapping the\nvalues passed into the struct. The method may be used with interfaces in a\nstruct in cases where the actual type is not known until the data is\nexamined.\n\nExample Unmarshaler shows how to decode TOML strings into your own\ncustom data type.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/burntsushi/toml@0.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/burntsushi/toml",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/BurntSushi/toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Andrew Gallant",
            "versionInfo": "0.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-5cf31ca27f6a97ac",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/BurntSushi/toml@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml provides facilities for decoding and encoding TOML configuration\nfiles via reflection. There is also support for delaying decoding with\nthe Primitive type, and querying the set of keys in a TOML document with the\nMetaData type.\n\nThe specification implemented: https://github.com/toml-lang/toml\n\nThe sub-command github.com/BurntSushi/toml/cmd/tomlv can be used to verify\nwhether a file is a valid TOML document. It can also be used to print the\ntype of each key in a TOML document.\n\nThere are two important types of tests used for this package. The first is\ncontained inside '*_test.go' files and uses the standard Go unit testing\nframework. These tests are primarily devoted to holistically testing the\ndecoder and encoder.\n\nThe second type of testing is used to verify the implementation's adherence\nto the TOML specification. These tests have been factored into their own\nproject: https://github.com/BurntSushi/toml-test\n\nThe reason the tests are in a separate project is so that they can be used by\nany implementation of TOML. Namely, it is language agnostic.\n\nExample StrictDecoding shows how to detect whether there are keys in the\nTOML document that weren't decoded into the value given. This is useful\nfor returning an error to the user if they've included extraneous fields\nin their configuration.\n\nExample UnmarshalTOML shows how to implement a struct type that knows how to\nunmarshal itself. The struct must take full responsibility for mapping the\nvalues passed into the struct. The method may be used with interfaces in a\nstruct in cases where the actual type is not known until the data is\nexamined.\n\nExample Unmarshaler shows how to decode TOML strings into your own\ncustom data type.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/burntsushi/toml@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/burntsushi/toml",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/BurntSushi/toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Andrew Gallant",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-73998de916e0ff60",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/BurntSushi/toml@v0.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml provides facilities for decoding and encoding TOML configuration\nfiles via reflection. There is also support for delaying decoding with\nthe Primitive type, and querying the set of keys in a TOML document with the\nMetaData type.\n\nThe specification implemented: https://github.com/toml-lang/toml\n\nThe sub-command github.com/BurntSushi/toml/cmd/tomlv can be used to verify\nwhether a file is a valid TOML document. It can also be used to print the\ntype of each key in a TOML document.\n\nThere are two important types of tests used for this package. The first is\ncontained inside '*_test.go' files and uses the standard Go unit testing\nframework. These tests are primarily devoted to holistically testing the\ndecoder and encoder.\n\nThe second type of testing is used to verify the implementation's adherence\nto the TOML specification. These tests have been factored into their own\nproject: https://github.com/BurntSushi/toml-test\n\nThe reason the tests are in a separate project is so that they can be used by\nany implementation of TOML. Namely, it is language agnostic.\n\nExample StrictDecoding shows how to detect whether there are keys in the\nTOML document that weren't decoded into the value given. This is useful\nfor returning an error to the user if they've included extraneous fields\nin their configuration.\n\nExample UnmarshalTOML shows how to implement a struct type that knows how to\nunmarshal itself. The struct must take full responsibility for mapping the\nvalues passed into the struct. The method may be used with interfaces in a\nstruct in cases where the actual type is not known until the data is\nexamined.\n\nExample Unmarshaler shows how to decode TOML strings into your own\ncustom data type.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/burntsushi/toml@0.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/burntsushi/toml",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/BurntSushi/toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Andrew Gallant",
            "versionInfo": "0.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-9681a94ad4ba46ea",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/BurntSushi/toml@v0.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml provides facilities for decoding and encoding TOML configuration\nfiles via reflection. There is also support for delaying decoding with\nthe Primitive type, and querying the set of keys in a TOML document with the\nMetaData type.\n\nThe specification implemented: https://github.com/toml-lang/toml\n\nThe sub-command github.com/BurntSushi/toml/cmd/tomlv can be used to verify\nwhether a file is a valid TOML document. It can also be used to print the\ntype of each key in a TOML document.\n\nThere are two important types of tests used for this package. The first is\ncontained inside '*_test.go' files and uses the standard Go unit testing\nframework. These tests are primarily devoted to holistically testing the\ndecoder and encoder.\n\nThe second type of testing is used to verify the implementation's adherence\nto the TOML specification. These tests have been factored into their own\nproject: https://github.com/BurntSushi/toml-test\n\nThe reason the tests are in a separate project is so that they can be used by\nany implementation of TOML. Namely, it is language agnostic.\n\nExample StrictDecoding shows how to detect whether there are keys in the\nTOML document that weren't decoded into the value given. This is useful\nfor returning an error to the user if they've included extraneous fields\nin their configuration.\n\nExample UnmarshalTOML shows how to implement a struct type that knows how to\nunmarshal itself. The struct must take full responsibility for mapping the\nvalues passed into the struct. The method may be used with interfaces in a\nstruct in cases where the actual type is not known until the data is\nexamined.\n\nExample Unmarshaler shows how to decode TOML strings into your own\ncustom data type.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/burntsushi/toml@0.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/burntsushi/toml",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/BurntSushi/toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Andrew Gallant",
            "versionInfo": "0.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b1444fbd8bada195",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/BurntSushi/toml@v0.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml provides facilities for decoding and encoding TOML configuration\nfiles via reflection. There is also support for delaying decoding with\nthe Primitive type, and querying the set of keys in a TOML document with the\nMetaData type.\n\nThe specification implemented: https://github.com/toml-lang/toml\n\nThe sub-command github.com/BurntSushi/toml/cmd/tomlv can be used to verify\nwhether a file is a valid TOML document. It can also be used to print the\ntype of each key in a TOML document.\n\nThere are two important types of tests used for this package. The first is\ncontained inside '*_test.go' files and uses the standard Go unit testing\nframework. These tests are primarily devoted to holistically testing the\ndecoder and encoder.\n\nThe second type of testing is used to verify the implementation's adherence\nto the TOML specification. These tests have been factored into their own\nproject: https://github.com/BurntSushi/toml-test\n\nThe reason the tests are in a separate project is so that they can be used by\nany implementation of TOML. Namely, it is language agnostic.\n\nExample StrictDecoding shows how to detect whether there are keys in the\nTOML document that weren't decoded into the value given. This is useful\nfor returning an error to the user if they've included extraneous fields\nin their configuration.\n\nExample UnmarshalTOML shows how to implement a struct type that knows how to\nunmarshal itself. The struct must take full responsibility for mapping the\nvalues passed into the struct. The method may be used with interfaces in a\nstruct in cases where the actual type is not known until the data is\nexamined.\n\nExample Unmarshaler shows how to decode TOML strings into your own\ncustom data type.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/burntsushi/toml@0.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/burntsushi/toml",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/BurntSushi/toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Andrew Gallant",
            "versionInfo": "0.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b5f377e426e8f62c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/BurntSushi/toml@v0.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml provides facilities for decoding and encoding TOML configuration\nfiles via reflection. There is also support for delaying decoding with\nthe Primitive type, and querying the set of keys in a TOML document with the\nMetaData type.\n\nThe specification implemented: https://github.com/toml-lang/toml\n\nThe sub-command github.com/BurntSushi/toml/cmd/tomlv can be used to verify\nwhether a file is a valid TOML document. It can also be used to print the\ntype of each key in a TOML document.\n\nThere are two important types of tests used for this package. The first is\ncontained inside '*_test.go' files and uses the standard Go unit testing\nframework. These tests are primarily devoted to holistically testing the\ndecoder and encoder.\n\nThe second type of testing is used to verify the implementation's adherence\nto the TOML specification. These tests have been factored into their own\nproject: https://github.com/BurntSushi/toml-test\n\nThe reason the tests are in a separate project is so that they can be used by\nany implementation of TOML. Namely, it is language agnostic.\n\nExample StrictDecoding shows how to detect whether there are keys in the\nTOML document that weren't decoded into the value given. This is useful\nfor returning an error to the user if they've included extraneous fields\nin their configuration.\n\nExample UnmarshalTOML shows how to implement a struct type that knows how to\nunmarshal itself. The struct must take full responsibility for mapping the\nvalues passed into the struct. The method may be used with interfaces in a\nstruct in cases where the actual type is not known until the data is\nexamined.\n\nExample Unmarshaler shows how to decode TOML strings into your own\ncustom data type.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/burntsushi/toml@0.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/burntsushi/toml",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/BurntSushi/toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Andrew Gallant",
            "versionInfo": "0.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-fa9f89b17fa8fb8b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/BurntSushi/toml@v0.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml provides facilities for decoding and encoding TOML configuration\nfiles via reflection. There is also support for delaying decoding with\nthe Primitive type, and querying the set of keys in a TOML document with the\nMetaData type.\n\nThe specification implemented: https://github.com/toml-lang/toml\n\nThe sub-command github.com/BurntSushi/toml/cmd/tomlv can be used to verify\nwhether a file is a valid TOML document. It can also be used to print the\ntype of each key in a TOML document.\n\nThere are two important types of tests used for this package. The first is\ncontained inside '*_test.go' files and uses the standard Go unit testing\nframework. These tests are primarily devoted to holistically testing the\ndecoder and encoder.\n\nThe second type of testing is used to verify the implementation's adherence\nto the TOML specification. These tests have been factored into their own\nproject: https://github.com/BurntSushi/toml-test\n\nThe reason the tests are in a separate project is so that they can be used by\nany implementation of TOML. Namely, it is language agnostic.\n\nExample StrictDecoding shows how to detect whether there are keys in the\nTOML document that weren't decoded into the value given. This is useful\nfor returning an error to the user if they've included extraneous fields\nin their configuration.\n\nExample UnmarshalTOML shows how to implement a struct type that knows how to\nunmarshal itself. The struct must take full responsibility for mapping the\nvalues passed into the struct. The method may be used with interfaces in a\nstruct in cases where the actual type is not known until the data is\nexamined.\n\nExample Unmarshaler shows how to decode TOML strings into your own\ncustom data type.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/burntsushi/toml@0.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/burntsushi/toml",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/BurntSushi/toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Andrew Gallant",
            "versionInfo": "0.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b16777dc2e5699c0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Juniper/go-netconf@v0.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/juniper/go-netconf@0.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/juniper/go-netconf",
            "licenseConcluded": "BSD-1-Clause",
            "licenseDeclared": "BSD-1-Clause",
            "name": "github.com/Juniper/go-netconf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-bb9bc4e4f026e1c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/MakeNowJust/heredoc@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package heredoc provides creation of here-documents from raw strings.\n\nGolang supports raw-string syntax.\n\nBut raw-string cannot recognize indentation. Thus such content is an indented string, equivalent to\n\nI dont't want this!\n\nHowever this problem is solved by package heredoc.\n\nIs equivalent to",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/makenowjust/heredoc@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/makenowjust/heredoc",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/MakeNowJust/heredoc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a835d3bde8e7049c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Masterminds/goutils@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package goutils provides utility functions to manipulate strings in various ways.\nThe code snippets below show examples of how to use goutils. Some functions return\nerrors while others do not, so usage would vary as a result.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/masterminds/goutils@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/masterminds/goutils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/Masterminds/goutils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-8ce5ca834327c772",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Masterminds/semver/v3@v3.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package semver provides the ability to work with Semantic Versions (http://semver.org) in Go.\n\nSpecifically it provides the ability to:\n\nThere are two functions that can parse semantic versions. The `StrictNewVersion`\nfunction only parses valid version 2 semantic versions as outlined in the\nspecification. The `NewVersion` function attempts to coerce a version into a\nsemantic version and parse it. For example, if there is a leading v or a version\nlisted without all 3 parts (e.g. 1.2) it will attempt to coerce it into a valid\nsemantic version (e.g., 1.2.0). In both cases a `Version` object is returned\nthat can be sorted, compared, and used in constraints.\n\nWhen parsing a version an optional error can be returned if there is an issue\nparsing the version. For example,\n\nThe version object has methods to get the parts of the version, compare it to\nother versions, convert the version back into a string, and get the original\nstring. For more details please see the documentation\nat https://godoc.org/github.com/Masterminds/semver.\n\nA set of versions can be sorted using the `sort` package from the standard library.\nFor example,\n\nThere are two methods for comparing versions. One uses comparison methods on\n`Version` instances and the other is using Constraints. There are some important\ndifferences to notes between these two methods of comparison.\n\nThere are differences between the two methods or checking versions because the\ncomparison methods on `Version` follow the specification while comparison ranges\nare not part of the specification. Different packages and tools have taken it\nupon themselves to come up with range rules. This has resulted in differences.\nFor example, npm/js and Cargo/Rust follow similar patterns which PHP has a\ndifferent pattern for ^. The comparison features in this package follow the\nnpm/js and Cargo/Rust lead because applications using it have followed similar\npatters with their versions.\n\nChecking a version against version constraints is one of the most featureful\nparts of the package.\n\nThere are two elements to the comparisons. First, a comparison string is a list\nof comma or space separated AND comparisons. These are then separated by || (OR)\ncomparisons. For example, `\">= 1.2 < 3.0.0 || >= 4.2.3\"` is looking for a\ncomparison that's greater than or equal to 1.2 and less than 3.0.0 or is\ngreater than or equal to 4.2.3. This can also be written as\n`\">= 1.2, < 3.0.0 || >= 4.2.3\"`\n\nThe basic comparisons are:\n\nThere are multiple methods to handle ranges and the first is hyphens ranges.\nThese look like:\n\nThe `x`, `X`, and `*` characters can be used as a wildcard character. This works\nfor all comparison operators. When used on the `=` operator it falls\nback to the tilde operation. For example,\n\nTilde Range Comparisons (Patch)\n\nThe tilde (`~`) comparison operator is for patch level ranges when a minor\nversion is specified and major level changes when the minor number is missing.\nFor example,\n\nCaret Range Comparisons (Major)\n\nThe caret (`^`) comparison operator is for major level changes once a stable\n(1.0.0) release has occurred. Prior to a 1.0.0 release the minor versions acts\nas the API stability level. This is useful when comparisons of API versions as a\nmajor change is API breaking. For example,\n\nIn addition to testing a version against a constraint, a version can be validated\nagainst a constraint. When validation fails a slice of errors containing why a\nversion didn't meet the constraint is returned. For example,",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/masterminds/semver/v3@3.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/Masterminds/semver",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/Masterminds/semver/v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Masterminds",
            "versionInfo": "3.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-f07f475bf69d7033",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Masterminds/sprig/v3@v3.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/masterminds/sprig/v3@3.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "github.com/Masterminds/sprig/v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "3.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-b0fe0f062ef05ad0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Masterminds/squirrel@v1.5.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package squirrel provides a fluent SQL generator.\n\nSee https://github.com/Masterminds/squirrel for examples.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/masterminds/squirrel@1.5.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/masterminds/squirrel",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/Masterminds/squirrel",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Masterminds",
            "versionInfo": "1.5.3"
        },
        {
            "SPDXID": "SPDXRef-Package-3a05a4cd9b3ed80d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/OneOfOne/xxhash@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oneofone/xxhash@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oneofone/xxhash",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/OneOfOne/xxhash",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Ahmed W.",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-527a2e50e8943890",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/OneOfOne/xxhash@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oneofone/xxhash@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oneofone/xxhash",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/OneOfOne/xxhash",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Ahmed W.",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-8223c983277daefb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/OneOfOne/xxhash@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oneofone/xxhash@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oneofone/xxhash",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/OneOfOne/xxhash",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Ahmed W.",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-88d98c46fdea3726",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/OneOfOne/xxhash@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oneofone/xxhash@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oneofone/xxhash",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/OneOfOne/xxhash",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Ahmed W.",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-b729be043d192ed1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/OneOfOne/xxhash@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oneofone/xxhash@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oneofone/xxhash",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/OneOfOne/xxhash",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Ahmed W.",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-147db3c90a73c55a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/purell@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package purell offers URL normalization as described on the wikipedia page:\nhttp://en.wikipedia.org/wiki/URL_normalization",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/purell@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/purell",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/purell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-256391e9d649b55e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/purell@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package purell offers URL normalization as described on the wikipedia page:\nhttp://en.wikipedia.org/wiki/URL_normalization",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/purell@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/purell",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/purell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-48dfdb25317bf9d6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/purell@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package purell offers URL normalization as described on the wikipedia page:\nhttp://en.wikipedia.org/wiki/URL_normalization",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/purell@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/purell",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/purell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-51ca506b72a8622a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/purell@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package purell offers URL normalization as described on the wikipedia page:\nhttp://en.wikipedia.org/wiki/URL_normalization",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/purell@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/purell",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/purell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-5aea61a3ab00ca65",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/purell@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package purell offers URL normalization as described on the wikipedia page:\nhttp://en.wikipedia.org/wiki/URL_normalization",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/purell@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/purell",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/purell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-6a1cada5125f03c9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/purell@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package purell offers URL normalization as described on the wikipedia page:\nhttp://en.wikipedia.org/wiki/URL_normalization",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/purell@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/purell",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/purell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-8dd71a0ee7044c56",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/purell@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package purell offers URL normalization as described on the wikipedia page:\nhttp://en.wikipedia.org/wiki/URL_normalization",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/purell@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/purell",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/purell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-180486746a518d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/urlesc@v0.0.0-20170810143723-de5bf2ad4578"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package urlesc implements query escaping as per RFC 3986.\nIt contains some parts of the net/url package, modified so as to allow\nsome reserved characters incorrectly escaped by net/url.\nSee https://github.com/golang/go/issues/5684",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/urlesc@0.0.0-20170810143723-de5bf2ad4578",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/urlesc",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/urlesc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20170810143723-de5bf2ad4578"
        },
        {
            "SPDXID": "SPDXRef-Package-1ec80e8df64ff19b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/urlesc@v0.0.0-20170810143723-de5bf2ad4578"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package urlesc implements query escaping as per RFC 3986.\nIt contains some parts of the net/url package, modified so as to allow\nsome reserved characters incorrectly escaped by net/url.\nSee https://github.com/golang/go/issues/5684",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/urlesc@0.0.0-20170810143723-de5bf2ad4578",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/urlesc",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/urlesc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20170810143723-de5bf2ad4578"
        },
        {
            "SPDXID": "SPDXRef-Package-58ba9ad4c937ec98",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/urlesc@v0.0.0-20170810143723-de5bf2ad4578"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package urlesc implements query escaping as per RFC 3986.\nIt contains some parts of the net/url package, modified so as to allow\nsome reserved characters incorrectly escaped by net/url.\nSee https://github.com/golang/go/issues/5684",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/urlesc@0.0.0-20170810143723-de5bf2ad4578",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/urlesc",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/urlesc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20170810143723-de5bf2ad4578"
        },
        {
            "SPDXID": "SPDXRef-Package-7356b39cbdfa4f73",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/urlesc@v0.0.0-20170810143723-de5bf2ad4578"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package urlesc implements query escaping as per RFC 3986.\nIt contains some parts of the net/url package, modified so as to allow\nsome reserved characters incorrectly escaped by net/url.\nSee https://github.com/golang/go/issues/5684",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/urlesc@0.0.0-20170810143723-de5bf2ad4578",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/urlesc",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/urlesc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20170810143723-de5bf2ad4578"
        },
        {
            "SPDXID": "SPDXRef-Package-a6a1fc08b7768c0d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/urlesc@v0.0.0-20170810143723-de5bf2ad4578"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package urlesc implements query escaping as per RFC 3986.\nIt contains some parts of the net/url package, modified so as to allow\nsome reserved characters incorrectly escaped by net/url.\nSee https://github.com/golang/go/issues/5684",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/urlesc@0.0.0-20170810143723-de5bf2ad4578",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/urlesc",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/urlesc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20170810143723-de5bf2ad4578"
        },
        {
            "SPDXID": "SPDXRef-Package-b24c6b379b7755b1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/urlesc@v0.0.0-20170810143723-de5bf2ad4578"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package urlesc implements query escaping as per RFC 3986.\nIt contains some parts of the net/url package, modified so as to allow\nsome reserved characters incorrectly escaped by net/url.\nSee https://github.com/golang/go/issues/5684",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/urlesc@0.0.0-20170810143723-de5bf2ad4578",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/urlesc",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/urlesc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20170810143723-de5bf2ad4578"
        },
        {
            "SPDXID": "SPDXRef-Package-b56238815d4e2665",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/urlesc@v0.0.0-20170810143723-de5bf2ad4578"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package urlesc implements query escaping as per RFC 3986.\nIt contains some parts of the net/url package, modified so as to allow\nsome reserved characters incorrectly escaped by net/url.\nSee https://github.com/golang/go/issues/5684",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/urlesc@0.0.0-20170810143723-de5bf2ad4578",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/urlesc",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/urlesc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20170810143723-de5bf2ad4578"
        },
        {
            "SPDXID": "SPDXRef-Package-afb3fd116b9d9793",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/agnivade/levenshtein@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package levenshtein is a Go implementation to calculate Levenshtein Distance.\n\nImplementation taken from\nhttps://gist.github.com/andrei-m/982927#gistcomment-1931258",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/agnivade/levenshtein@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/agnivade/levenshtein",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/agnivade/levenshtein",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-afb4ece3020cefdf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/agnivade/levenshtein@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package levenshtein is a Go implementation to calculate Levenshtein Distance.\n\nImplementation taken from\nhttps://gist.github.com/andrei-m/982927#gistcomment-1931258",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/agnivade/levenshtein@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/agnivade/levenshtein",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/agnivade/levenshtein",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b491a9c4491afde",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/agnivade/levenshtein@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package levenshtein is a Go implementation to calculate Levenshtein Distance.\n\nImplementation taken from\nhttps://gist.github.com/andrei-m/982927#gistcomment-1931258",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/agnivade/levenshtein@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/agnivade/levenshtein",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/agnivade/levenshtein",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-742543027302cbf0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/alecthomas/template@v0.0.0-20160405071501-a0175ee3bccc"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package template implements data-driven templates for generating textual output.\n\nTo generate HTML output, see package html/template, which has the same interface\nas this package but automatically secures HTML output against certain attacks.\n\nTemplates are executed by applying them to a data structure. Annotations in the\ntemplate refer to elements of the data structure (typically a field of a struct\nor a key in a map) to control execution and derive values to be displayed.\nExecution of the template walks the structure and sets the cursor, represented\nby a period '.' and called \"dot\", to the value at the current location in the\nstructure as execution proceeds.\n\nThe input text for a template is UTF-8-encoded text in any format.\n\"Actions\"--data evaluations or control structures--are delimited by\n\"{{\" and \"}}\"; all text outside actions is copied to the output unchanged.\nActions may not span newlines, although comments can.\n\nOnce parsed, a template may be executed safely in parallel.\n\nHere is a trivial example that prints \"17 items are made of wool\".\n\nMore intricate examples appear below.\n\nHere is the list of actions. \"Arguments\" and \"pipelines\" are evaluations of\ndata, defined in detail below.\n\nAn argument is a simple value, denoted by one of the following.\n\nArguments may evaluate to any type; if they are pointers the implementation\nautomatically indirects to the base type when required.\nIf an evaluation yields a function value, such as a function-valued\nfield of a struct, the function is not invoked automatically, but it\ncan be used as a truth value for an if action and the like. To invoke\nit, use the call function, defined below.\n\nA pipeline is a possibly chained sequence of \"commands\". A command is a simple\nvalue (argument) or a function or method call, possibly with multiple arguments:\n\nA pipeline may be \"chained\" by separating a sequence of commands with pipeline\ncharacters '|'. In a chained pipeline, the result of the each command is\npassed as the last argument of the following command. The output of the final\ncommand in the pipeline is the value of the pipeline.\n\nThe output of a command will be either one value or two values, the second of\nwhich has type error. If that second value is present and evaluates to\nnon-nil, execution terminates and the error is returned to the caller of\nExecute.\n\nA pipeline inside an action may initialize a variable to capture the result.\nThe initialization has syntax\n\nwhere $variable is the name of the variable. An action that declares a\nvariable produces no output.\n\nIf a \"range\" action initializes a variable, the variable is set to the\nsuccessive elements of the iteration.  Also, a \"range\" may declare two\nvariables, separated by a comma:\n\nin which case $index and $element are set to the successive values of the\narray/slice index or map key and element, respectively.  Note that if there is\nonly one variable, it is assigned the element; this is opposite to the\nconvention in Go range clauses.\n\nA variable's scope extends to the \"end\" action of the control structure (\"if\",\n\"with\", or \"range\") in which it is declared, or to the end of the template if\nthere is no such control structure.  A template invocation does not inherit\nvariables from the point of its invocation.\n\nWhen execution begins, $ is set to the data argument passed to Execute, that is,\nto the starting value of dot.\n\nHere are some example one-line templates demonstrating pipelines and variables.\nAll produce the quoted word \"output\":\n\nDuring execution functions are found in two function maps: first in the\ntemplate, then in the global function map. By default, no functions are defined\nin the template but the Funcs method can be used to add them.\n\nPredefined global functions are named as follows.\n\nThe boolean functions take any zero value to be false and a non-zero\nvalue to be true.\n\nThere is also a set of binary comparison operators defined as\nfunctions:\n\nFor simpler multi-way equality tests, eq (only) accepts two or more\narguments and compares the second and subsequent to the first,\nreturning in effect\n\n(Unlike with || in Go, however, eq is a function call and all the\narguments will be evaluated.)\n\nThe comparison functions work on basic types only (or named basic\ntypes, such as \"type Celsius float32\"). They implement the Go rules\nfor comparison of values, except that size and exact type are\nignored, so any integer value, signed or unsigned, may be compared\nwith any other integer value. (The arithmetic value is compared,\nnot the bit pattern, so all negative integers are less than all\nunsigned integers.) However, as usual, one may not compare an int\nwith a float32 and so on.\n\nEach template is named by a string specified when it is created. Also, each\ntemplate is associated with zero or more other templates that it may invoke by\nname; such associations are transitive and form a name space of templates.\n\nA template may use a template invocation to instantiate another associated\ntemplate; see the explanation of the \"template\" action above. The name must be\nthat of a template associated with the template that contains the invocation.\n\nWhen parsing a template, another template may be defined and associated with the\ntemplate being parsed. Template definitions must appear at the top level of the\ntemplate, much like global variables in a Go program.\n\nThe syntax of such definitions is to surround each template declaration with a\n\"define\" and \"end\" action.\n\nThe define action names the template being created by providing a string\nconstant. Here is a simple example:\n\nThis defines two templates, T1 and T2, and a third T3 that invokes the other two\nwhen it is executed. Finally it invokes T3. If executed this template will\nproduce the text\n\nBy construction, a template may reside in only one association. If it's\nnecessary to have a template addressable from multiple associations, the\ntemplate definition must be parsed multiple times to create distinct *Template\nvalues, or must be copied with the Clone or AddParseTree method.\n\nParse may be called multiple times to assemble the various associated templates;\nsee the ParseFiles and ParseGlob functions and methods for simple ways to parse\nrelated templates stored in files.\n\nA template may be executed directly or through ExecuteTemplate, which executes\nan associated template identified by name. To invoke our example above, we\nmight write,\n\nor to invoke a particular template explicitly by name,",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/alecthomas/template@0.0.0-20160405071501-a0175ee3bccc",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/template",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/alecthomas/template",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "0.0.0-20160405071501-a0175ee3bccc"
        },
        {
            "SPDXID": "SPDXRef-Package-802f89ee2d947d62",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/alecthomas/template@v0.0.0-20160405071501-a0175ee3bccc"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package template implements data-driven templates for generating textual output.\n\nTo generate HTML output, see package html/template, which has the same interface\nas this package but automatically secures HTML output against certain attacks.\n\nTemplates are executed by applying them to a data structure. Annotations in the\ntemplate refer to elements of the data structure (typically a field of a struct\nor a key in a map) to control execution and derive values to be displayed.\nExecution of the template walks the structure and sets the cursor, represented\nby a period '.' and called \"dot\", to the value at the current location in the\nstructure as execution proceeds.\n\nThe input text for a template is UTF-8-encoded text in any format.\n\"Actions\"--data evaluations or control structures--are delimited by\n\"{{\" and \"}}\"; all text outside actions is copied to the output unchanged.\nActions may not span newlines, although comments can.\n\nOnce parsed, a template may be executed safely in parallel.\n\nHere is a trivial example that prints \"17 items are made of wool\".\n\nMore intricate examples appear below.\n\nHere is the list of actions. \"Arguments\" and \"pipelines\" are evaluations of\ndata, defined in detail below.\n\nAn argument is a simple value, denoted by one of the following.\n\nArguments may evaluate to any type; if they are pointers the implementation\nautomatically indirects to the base type when required.\nIf an evaluation yields a function value, such as a function-valued\nfield of a struct, the function is not invoked automatically, but it\ncan be used as a truth value for an if action and the like. To invoke\nit, use the call function, defined below.\n\nA pipeline is a possibly chained sequence of \"commands\". A command is a simple\nvalue (argument) or a function or method call, possibly with multiple arguments:\n\nA pipeline may be \"chained\" by separating a sequence of commands with pipeline\ncharacters '|'. In a chained pipeline, the result of the each command is\npassed as the last argument of the following command. The output of the final\ncommand in the pipeline is the value of the pipeline.\n\nThe output of a command will be either one value or two values, the second of\nwhich has type error. If that second value is present and evaluates to\nnon-nil, execution terminates and the error is returned to the caller of\nExecute.\n\nA pipeline inside an action may initialize a variable to capture the result.\nThe initialization has syntax\n\nwhere $variable is the name of the variable. An action that declares a\nvariable produces no output.\n\nIf a \"range\" action initializes a variable, the variable is set to the\nsuccessive elements of the iteration.  Also, a \"range\" may declare two\nvariables, separated by a comma:\n\nin which case $index and $element are set to the successive values of the\narray/slice index or map key and element, respectively.  Note that if there is\nonly one variable, it is assigned the element; this is opposite to the\nconvention in Go range clauses.\n\nA variable's scope extends to the \"end\" action of the control structure (\"if\",\n\"with\", or \"range\") in which it is declared, or to the end of the template if\nthere is no such control structure.  A template invocation does not inherit\nvariables from the point of its invocation.\n\nWhen execution begins, $ is set to the data argument passed to Execute, that is,\nto the starting value of dot.\n\nHere are some example one-line templates demonstrating pipelines and variables.\nAll produce the quoted word \"output\":\n\nDuring execution functions are found in two function maps: first in the\ntemplate, then in the global function map. By default, no functions are defined\nin the template but the Funcs method can be used to add them.\n\nPredefined global functions are named as follows.\n\nThe boolean functions take any zero value to be false and a non-zero\nvalue to be true.\n\nThere is also a set of binary comparison operators defined as\nfunctions:\n\nFor simpler multi-way equality tests, eq (only) accepts two or more\narguments and compares the second and subsequent to the first,\nreturning in effect\n\n(Unlike with || in Go, however, eq is a function call and all the\narguments will be evaluated.)\n\nThe comparison functions work on basic types only (or named basic\ntypes, such as \"type Celsius float32\"). They implement the Go rules\nfor comparison of values, except that size and exact type are\nignored, so any integer value, signed or unsigned, may be compared\nwith any other integer value. (The arithmetic value is compared,\nnot the bit pattern, so all negative integers are less than all\nunsigned integers.) However, as usual, one may not compare an int\nwith a float32 and so on.\n\nEach template is named by a string specified when it is created. Also, each\ntemplate is associated with zero or more other templates that it may invoke by\nname; such associations are transitive and form a name space of templates.\n\nA template may use a template invocation to instantiate another associated\ntemplate; see the explanation of the \"template\" action above. The name must be\nthat of a template associated with the template that contains the invocation.\n\nWhen parsing a template, another template may be defined and associated with the\ntemplate being parsed. Template definitions must appear at the top level of the\ntemplate, much like global variables in a Go program.\n\nThe syntax of such definitions is to surround each template declaration with a\n\"define\" and \"end\" action.\n\nThe define action names the template being created by providing a string\nconstant. Here is a simple example:\n\nThis defines two templates, T1 and T2, and a third T3 that invokes the other two\nwhen it is executed. Finally it invokes T3. If executed this template will\nproduce the text\n\nBy construction, a template may reside in only one association. If it's\nnecessary to have a template addressable from multiple associations, the\ntemplate definition must be parsed multiple times to create distinct *Template\nvalues, or must be copied with the Clone or AddParseTree method.\n\nParse may be called multiple times to assemble the various associated templates;\nsee the ParseFiles and ParseGlob functions and methods for simple ways to parse\nrelated templates stored in files.\n\nA template may be executed directly or through ExecuteTemplate, which executes\nan associated template identified by name. To invoke our example above, we\nmight write,\n\nor to invoke a particular template explicitly by name,",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/alecthomas/template@0.0.0-20160405071501-a0175ee3bccc",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/template",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/alecthomas/template",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "0.0.0-20160405071501-a0175ee3bccc"
        },
        {
            "SPDXID": "SPDXRef-Package-a3c051245694fe50",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/alecthomas/template@v0.0.0-20160405071501-a0175ee3bccc"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package template implements data-driven templates for generating textual output.\n\nTo generate HTML output, see package html/template, which has the same interface\nas this package but automatically secures HTML output against certain attacks.\n\nTemplates are executed by applying them to a data structure. Annotations in the\ntemplate refer to elements of the data structure (typically a field of a struct\nor a key in a map) to control execution and derive values to be displayed.\nExecution of the template walks the structure and sets the cursor, represented\nby a period '.' and called \"dot\", to the value at the current location in the\nstructure as execution proceeds.\n\nThe input text for a template is UTF-8-encoded text in any format.\n\"Actions\"--data evaluations or control structures--are delimited by\n\"{{\" and \"}}\"; all text outside actions is copied to the output unchanged.\nActions may not span newlines, although comments can.\n\nOnce parsed, a template may be executed safely in parallel.\n\nHere is a trivial example that prints \"17 items are made of wool\".\n\nMore intricate examples appear below.\n\nHere is the list of actions. \"Arguments\" and \"pipelines\" are evaluations of\ndata, defined in detail below.\n\nAn argument is a simple value, denoted by one of the following.\n\nArguments may evaluate to any type; if they are pointers the implementation\nautomatically indirects to the base type when required.\nIf an evaluation yields a function value, such as a function-valued\nfield of a struct, the function is not invoked automatically, but it\ncan be used as a truth value for an if action and the like. To invoke\nit, use the call function, defined below.\n\nA pipeline is a possibly chained sequence of \"commands\". A command is a simple\nvalue (argument) or a function or method call, possibly with multiple arguments:\n\nA pipeline may be \"chained\" by separating a sequence of commands with pipeline\ncharacters '|'. In a chained pipeline, the result of the each command is\npassed as the last argument of the following command. The output of the final\ncommand in the pipeline is the value of the pipeline.\n\nThe output of a command will be either one value or two values, the second of\nwhich has type error. If that second value is present and evaluates to\nnon-nil, execution terminates and the error is returned to the caller of\nExecute.\n\nA pipeline inside an action may initialize a variable to capture the result.\nThe initialization has syntax\n\nwhere $variable is the name of the variable. An action that declares a\nvariable produces no output.\n\nIf a \"range\" action initializes a variable, the variable is set to the\nsuccessive elements of the iteration.  Also, a \"range\" may declare two\nvariables, separated by a comma:\n\nin which case $index and $element are set to the successive values of the\narray/slice index or map key and element, respectively.  Note that if there is\nonly one variable, it is assigned the element; this is opposite to the\nconvention in Go range clauses.\n\nA variable's scope extends to the \"end\" action of the control structure (\"if\",\n\"with\", or \"range\") in which it is declared, or to the end of the template if\nthere is no such control structure.  A template invocation does not inherit\nvariables from the point of its invocation.\n\nWhen execution begins, $ is set to the data argument passed to Execute, that is,\nto the starting value of dot.\n\nHere are some example one-line templates demonstrating pipelines and variables.\nAll produce the quoted word \"output\":\n\nDuring execution functions are found in two function maps: first in the\ntemplate, then in the global function map. By default, no functions are defined\nin the template but the Funcs method can be used to add them.\n\nPredefined global functions are named as follows.\n\nThe boolean functions take any zero value to be false and a non-zero\nvalue to be true.\n\nThere is also a set of binary comparison operators defined as\nfunctions:\n\nFor simpler multi-way equality tests, eq (only) accepts two or more\narguments and compares the second and subsequent to the first,\nreturning in effect\n\n(Unlike with || in Go, however, eq is a function call and all the\narguments will be evaluated.)\n\nThe comparison functions work on basic types only (or named basic\ntypes, such as \"type Celsius float32\"). They implement the Go rules\nfor comparison of values, except that size and exact type are\nignored, so any integer value, signed or unsigned, may be compared\nwith any other integer value. (The arithmetic value is compared,\nnot the bit pattern, so all negative integers are less than all\nunsigned integers.) However, as usual, one may not compare an int\nwith a float32 and so on.\n\nEach template is named by a string specified when it is created. Also, each\ntemplate is associated with zero or more other templates that it may invoke by\nname; such associations are transitive and form a name space of templates.\n\nA template may use a template invocation to instantiate another associated\ntemplate; see the explanation of the \"template\" action above. The name must be\nthat of a template associated with the template that contains the invocation.\n\nWhen parsing a template, another template may be defined and associated with the\ntemplate being parsed. Template definitions must appear at the top level of the\ntemplate, much like global variables in a Go program.\n\nThe syntax of such definitions is to surround each template declaration with a\n\"define\" and \"end\" action.\n\nThe define action names the template being created by providing a string\nconstant. Here is a simple example:\n\nThis defines two templates, T1 and T2, and a third T3 that invokes the other two\nwhen it is executed. Finally it invokes T3. If executed this template will\nproduce the text\n\nBy construction, a template may reside in only one association. If it's\nnecessary to have a template addressable from multiple associations, the\ntemplate definition must be parsed multiple times to create distinct *Template\nvalues, or must be copied with the Clone or AddParseTree method.\n\nParse may be called multiple times to assemble the various associated templates;\nsee the ParseFiles and ParseGlob functions and methods for simple ways to parse\nrelated templates stored in files.\n\nA template may be executed directly or through ExecuteTemplate, which executes\nan associated template identified by name. To invoke our example above, we\nmight write,\n\nor to invoke a particular template explicitly by name,",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/alecthomas/template@0.0.0-20160405071501-a0175ee3bccc",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/template",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/alecthomas/template",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "0.0.0-20160405071501-a0175ee3bccc"
        },
        {
            "SPDXID": "SPDXRef-Package-b38b7f1de64821cf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/alecthomas/template@v0.0.0-20160405071501-a0175ee3bccc"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package template implements data-driven templates for generating textual output.\n\nTo generate HTML output, see package html/template, which has the same interface\nas this package but automatically secures HTML output against certain attacks.\n\nTemplates are executed by applying them to a data structure. Annotations in the\ntemplate refer to elements of the data structure (typically a field of a struct\nor a key in a map) to control execution and derive values to be displayed.\nExecution of the template walks the structure and sets the cursor, represented\nby a period '.' and called \"dot\", to the value at the current location in the\nstructure as execution proceeds.\n\nThe input text for a template is UTF-8-encoded text in any format.\n\"Actions\"--data evaluations or control structures--are delimited by\n\"{{\" and \"}}\"; all text outside actions is copied to the output unchanged.\nActions may not span newlines, although comments can.\n\nOnce parsed, a template may be executed safely in parallel.\n\nHere is a trivial example that prints \"17 items are made of wool\".\n\nMore intricate examples appear below.\n\nHere is the list of actions. \"Arguments\" and \"pipelines\" are evaluations of\ndata, defined in detail below.\n\nAn argument is a simple value, denoted by one of the following.\n\nArguments may evaluate to any type; if they are pointers the implementation\nautomatically indirects to the base type when required.\nIf an evaluation yields a function value, such as a function-valued\nfield of a struct, the function is not invoked automatically, but it\ncan be used as a truth value for an if action and the like. To invoke\nit, use the call function, defined below.\n\nA pipeline is a possibly chained sequence of \"commands\". A command is a simple\nvalue (argument) or a function or method call, possibly with multiple arguments:\n\nA pipeline may be \"chained\" by separating a sequence of commands with pipeline\ncharacters '|'. In a chained pipeline, the result of the each command is\npassed as the last argument of the following command. The output of the final\ncommand in the pipeline is the value of the pipeline.\n\nThe output of a command will be either one value or two values, the second of\nwhich has type error. If that second value is present and evaluates to\nnon-nil, execution terminates and the error is returned to the caller of\nExecute.\n\nA pipeline inside an action may initialize a variable to capture the result.\nThe initialization has syntax\n\nwhere $variable is the name of the variable. An action that declares a\nvariable produces no output.\n\nIf a \"range\" action initializes a variable, the variable is set to the\nsuccessive elements of the iteration.  Also, a \"range\" may declare two\nvariables, separated by a comma:\n\nin which case $index and $element are set to the successive values of the\narray/slice index or map key and element, respectively.  Note that if there is\nonly one variable, it is assigned the element; this is opposite to the\nconvention in Go range clauses.\n\nA variable's scope extends to the \"end\" action of the control structure (\"if\",\n\"with\", or \"range\") in which it is declared, or to the end of the template if\nthere is no such control structure.  A template invocation does not inherit\nvariables from the point of its invocation.\n\nWhen execution begins, $ is set to the data argument passed to Execute, that is,\nto the starting value of dot.\n\nHere are some example one-line templates demonstrating pipelines and variables.\nAll produce the quoted word \"output\":\n\nDuring execution functions are found in two function maps: first in the\ntemplate, then in the global function map. By default, no functions are defined\nin the template but the Funcs method can be used to add them.\n\nPredefined global functions are named as follows.\n\nThe boolean functions take any zero value to be false and a non-zero\nvalue to be true.\n\nThere is also a set of binary comparison operators defined as\nfunctions:\n\nFor simpler multi-way equality tests, eq (only) accepts two or more\narguments and compares the second and subsequent to the first,\nreturning in effect\n\n(Unlike with || in Go, however, eq is a function call and all the\narguments will be evaluated.)\n\nThe comparison functions work on basic types only (or named basic\ntypes, such as \"type Celsius float32\"). They implement the Go rules\nfor comparison of values, except that size and exact type are\nignored, so any integer value, signed or unsigned, may be compared\nwith any other integer value. (The arithmetic value is compared,\nnot the bit pattern, so all negative integers are less than all\nunsigned integers.) However, as usual, one may not compare an int\nwith a float32 and so on.\n\nEach template is named by a string specified when it is created. Also, each\ntemplate is associated with zero or more other templates that it may invoke by\nname; such associations are transitive and form a name space of templates.\n\nA template may use a template invocation to instantiate another associated\ntemplate; see the explanation of the \"template\" action above. The name must be\nthat of a template associated with the template that contains the invocation.\n\nWhen parsing a template, another template may be defined and associated with the\ntemplate being parsed. Template definitions must appear at the top level of the\ntemplate, much like global variables in a Go program.\n\nThe syntax of such definitions is to surround each template declaration with a\n\"define\" and \"end\" action.\n\nThe define action names the template being created by providing a string\nconstant. Here is a simple example:\n\nThis defines two templates, T1 and T2, and a third T3 that invokes the other two\nwhen it is executed. Finally it invokes T3. If executed this template will\nproduce the text\n\nBy construction, a template may reside in only one association. If it's\nnecessary to have a template addressable from multiple associations, the\ntemplate definition must be parsed multiple times to create distinct *Template\nvalues, or must be copied with the Clone or AddParseTree method.\n\nParse may be called multiple times to assemble the various associated templates;\nsee the ParseFiles and ParseGlob functions and methods for simple ways to parse\nrelated templates stored in files.\n\nA template may be executed directly or through ExecuteTemplate, which executes\nan associated template identified by name. To invoke our example above, we\nmight write,\n\nor to invoke a particular template explicitly by name,",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/alecthomas/template@0.0.0-20160405071501-a0175ee3bccc",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/template",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/alecthomas/template",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "0.0.0-20160405071501-a0175ee3bccc"
        },
        {
            "SPDXID": "SPDXRef-Package-b922b6ba708b7fd1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/alecthomas/template@v0.0.0-20160405071501-a0175ee3bccc"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package template implements data-driven templates for generating textual output.\n\nTo generate HTML output, see package html/template, which has the same interface\nas this package but automatically secures HTML output against certain attacks.\n\nTemplates are executed by applying them to a data structure. Annotations in the\ntemplate refer to elements of the data structure (typically a field of a struct\nor a key in a map) to control execution and derive values to be displayed.\nExecution of the template walks the structure and sets the cursor, represented\nby a period '.' and called \"dot\", to the value at the current location in the\nstructure as execution proceeds.\n\nThe input text for a template is UTF-8-encoded text in any format.\n\"Actions\"--data evaluations or control structures--are delimited by\n\"{{\" and \"}}\"; all text outside actions is copied to the output unchanged.\nActions may not span newlines, although comments can.\n\nOnce parsed, a template may be executed safely in parallel.\n\nHere is a trivial example that prints \"17 items are made of wool\".\n\nMore intricate examples appear below.\n\nHere is the list of actions. \"Arguments\" and \"pipelines\" are evaluations of\ndata, defined in detail below.\n\nAn argument is a simple value, denoted by one of the following.\n\nArguments may evaluate to any type; if they are pointers the implementation\nautomatically indirects to the base type when required.\nIf an evaluation yields a function value, such as a function-valued\nfield of a struct, the function is not invoked automatically, but it\ncan be used as a truth value for an if action and the like. To invoke\nit, use the call function, defined below.\n\nA pipeline is a possibly chained sequence of \"commands\". A command is a simple\nvalue (argument) or a function or method call, possibly with multiple arguments:\n\nA pipeline may be \"chained\" by separating a sequence of commands with pipeline\ncharacters '|'. In a chained pipeline, the result of the each command is\npassed as the last argument of the following command. The output of the final\ncommand in the pipeline is the value of the pipeline.\n\nThe output of a command will be either one value or two values, the second of\nwhich has type error. If that second value is present and evaluates to\nnon-nil, execution terminates and the error is returned to the caller of\nExecute.\n\nA pipeline inside an action may initialize a variable to capture the result.\nThe initialization has syntax\n\nwhere $variable is the name of the variable. An action that declares a\nvariable produces no output.\n\nIf a \"range\" action initializes a variable, the variable is set to the\nsuccessive elements of the iteration.  Also, a \"range\" may declare two\nvariables, separated by a comma:\n\nin which case $index and $element are set to the successive values of the\narray/slice index or map key and element, respectively.  Note that if there is\nonly one variable, it is assigned the element; this is opposite to the\nconvention in Go range clauses.\n\nA variable's scope extends to the \"end\" action of the control structure (\"if\",\n\"with\", or \"range\") in which it is declared, or to the end of the template if\nthere is no such control structure.  A template invocation does not inherit\nvariables from the point of its invocation.\n\nWhen execution begins, $ is set to the data argument passed to Execute, that is,\nto the starting value of dot.\n\nHere are some example one-line templates demonstrating pipelines and variables.\nAll produce the quoted word \"output\":\n\nDuring execution functions are found in two function maps: first in the\ntemplate, then in the global function map. By default, no functions are defined\nin the template but the Funcs method can be used to add them.\n\nPredefined global functions are named as follows.\n\nThe boolean functions take any zero value to be false and a non-zero\nvalue to be true.\n\nThere is also a set of binary comparison operators defined as\nfunctions:\n\nFor simpler multi-way equality tests, eq (only) accepts two or more\narguments and compares the second and subsequent to the first,\nreturning in effect\n\n(Unlike with || in Go, however, eq is a function call and all the\narguments will be evaluated.)\n\nThe comparison functions work on basic types only (or named basic\ntypes, such as \"type Celsius float32\"). They implement the Go rules\nfor comparison of values, except that size and exact type are\nignored, so any integer value, signed or unsigned, may be compared\nwith any other integer value. (The arithmetic value is compared,\nnot the bit pattern, so all negative integers are less than all\nunsigned integers.) However, as usual, one may not compare an int\nwith a float32 and so on.\n\nEach template is named by a string specified when it is created. Also, each\ntemplate is associated with zero or more other templates that it may invoke by\nname; such associations are transitive and form a name space of templates.\n\nA template may use a template invocation to instantiate another associated\ntemplate; see the explanation of the \"template\" action above. The name must be\nthat of a template associated with the template that contains the invocation.\n\nWhen parsing a template, another template may be defined and associated with the\ntemplate being parsed. Template definitions must appear at the top level of the\ntemplate, much like global variables in a Go program.\n\nThe syntax of such definitions is to surround each template declaration with a\n\"define\" and \"end\" action.\n\nThe define action names the template being created by providing a string\nconstant. Here is a simple example:\n\nThis defines two templates, T1 and T2, and a third T3 that invokes the other two\nwhen it is executed. Finally it invokes T3. If executed this template will\nproduce the text\n\nBy construction, a template may reside in only one association. If it's\nnecessary to have a template addressable from multiple associations, the\ntemplate definition must be parsed multiple times to create distinct *Template\nvalues, or must be copied with the Clone or AddParseTree method.\n\nParse may be called multiple times to assemble the various associated templates;\nsee the ParseFiles and ParseGlob functions and methods for simple ways to parse\nrelated templates stored in files.\n\nA template may be executed directly or through ExecuteTemplate, which executes\nan associated template identified by name. To invoke our example above, we\nmight write,\n\nor to invoke a particular template explicitly by name,",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/alecthomas/template@0.0.0-20160405071501-a0175ee3bccc",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/template",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/alecthomas/template",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "0.0.0-20160405071501-a0175ee3bccc"
        },
        {
            "SPDXID": "SPDXRef-Package-2e45bdf062bc8c7e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/alecthomas/units@v0.0.0-20151022065526-2efee857e7cf"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helpful unit multipliers and functions for Go.\n\nThe goal of this package is to have functionality similar to the time [1] package.\n\n[1] http://golang.org/pkg/time/\n\nIt allows for code like this:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/alecthomas/units@0.0.0-20151022065526-2efee857e7cf",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/units",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/alecthomas/units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "0.0.0-20151022065526-2efee857e7cf"
        },
        {
            "SPDXID": "SPDXRef-Package-5ab30f3a07d0ae0b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/alecthomas/units@v0.0.0-20151022065526-2efee857e7cf"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helpful unit multipliers and functions for Go.\n\nThe goal of this package is to have functionality similar to the time [1] package.\n\n[1] http://golang.org/pkg/time/\n\nIt allows for code like this:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/alecthomas/units@0.0.0-20151022065526-2efee857e7cf",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/units",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/alecthomas/units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "0.0.0-20151022065526-2efee857e7cf"
        },
        {
            "SPDXID": "SPDXRef-Package-9e9ee0ae2de9dc01",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/alecthomas/units@v0.0.0-20151022065526-2efee857e7cf"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helpful unit multipliers and functions for Go.\n\nThe goal of this package is to have functionality similar to the time [1] package.\n\n[1] http://golang.org/pkg/time/\n\nIt allows for code like this:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/alecthomas/units@0.0.0-20151022065526-2efee857e7cf",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/units",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/alecthomas/units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "0.0.0-20151022065526-2efee857e7cf"
        },
        {
            "SPDXID": "SPDXRef-Package-ee9ffad01665a613",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/alecthomas/units@v0.0.0-20151022065526-2efee857e7cf"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helpful unit multipliers and functions for Go.\n\nThe goal of this package is to have functionality similar to the time [1] package.\n\n[1] http://golang.org/pkg/time/\n\nIt allows for code like this:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/alecthomas/units@0.0.0-20151022065526-2efee857e7cf",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/units",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/alecthomas/units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "0.0.0-20151022065526-2efee857e7cf"
        },
        {
            "SPDXID": "SPDXRef-Package-ff6460d2f55f929e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/alecthomas/units@v0.0.0-20151022065526-2efee857e7cf"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helpful unit multipliers and functions for Go.\n\nThe goal of this package is to have functionality similar to the time [1] package.\n\n[1] http://golang.org/pkg/time/\n\nIt allows for code like this:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/alecthomas/units@0.0.0-20151022065526-2efee857e7cf",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/units",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/alecthomas/units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "0.0.0-20151022065526-2efee857e7cf"
        },
        {
            "SPDXID": "SPDXRef-Package-31f6522145dbd4f8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/andreyvit/diff@v0.0.0-20170406064948-c7f18ee00883"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "diff provides quick and easy string diffing functions based on github.com/sergi/go-diff, mainly for diffing strings in tests",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/andreyvit/diff@0.0.0-20170406064948-c7f18ee00883",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/andreyvit/diff",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/andreyvit/diff",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20170406064948-c7f18ee00883"
        },
        {
            "SPDXID": "SPDXRef-Package-3ec76b6d51edea86",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/andreyvit/diff@v0.0.0-20170406064948-c7f18ee00883"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "diff provides quick and easy string diffing functions based on github.com/sergi/go-diff, mainly for diffing strings in tests",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/andreyvit/diff@0.0.0-20170406064948-c7f18ee00883",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/andreyvit/diff",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/andreyvit/diff",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20170406064948-c7f18ee00883"
        },
        {
            "SPDXID": "SPDXRef-Package-e131a7addbc1e95b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/andreyvit/diff@v0.0.0-20170406064948-c7f18ee00883"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "diff provides quick and easy string diffing functions based on github.com/sergi/go-diff, mainly for diffing strings in tests",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/andreyvit/diff@0.0.0-20170406064948-c7f18ee00883",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/andreyvit/diff",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/andreyvit/diff",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20170406064948-c7f18ee00883"
        },
        {
            "SPDXID": "SPDXRef-Package-23b27525b93aa517",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/armon/consul-api@v0.0.0-20180202201655-eb2c6b5be1b6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/armon/consul-api@0.0.0-20180202201655-eb2c6b5be1b6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/armon/consul-api",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/armon/consul-api",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180202201655-eb2c6b5be1b6"
        },
        {
            "SPDXID": "SPDXRef-Package-ab06839f1de0570e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/armon/consul-api@v0.0.0-20180202201655-eb2c6b5be1b6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/armon/consul-api@0.0.0-20180202201655-eb2c6b5be1b6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/armon/consul-api",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/armon/consul-api",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180202201655-eb2c6b5be1b6"
        },
        {
            "SPDXID": "SPDXRef-Package-cdf40eb27789516a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/armon/consul-api@v0.0.0-20180202201655-eb2c6b5be1b6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/armon/consul-api@0.0.0-20180202201655-eb2c6b5be1b6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/armon/consul-api",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/armon/consul-api",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180202201655-eb2c6b5be1b6"
        },
        {
            "SPDXID": "SPDXRef-Package-e183e06f86c92585",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/armon/consul-api@v0.0.0-20180202201655-eb2c6b5be1b6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/armon/consul-api@0.0.0-20180202201655-eb2c6b5be1b6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/armon/consul-api",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/armon/consul-api",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180202201655-eb2c6b5be1b6"
        },
        {
            "SPDXID": "SPDXRef-Package-ecac010a2d91b87f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/armon/consul-api@v0.0.0-20180202201655-eb2c6b5be1b6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/armon/consul-api@0.0.0-20180202201655-eb2c6b5be1b6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/armon/consul-api",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/armon/consul-api",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180202201655-eb2c6b5be1b6"
        },
        {
            "SPDXID": "SPDXRef-Package-3012defb287f2ddc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/asaskevich/govalidator@v0.0.0-20210307081110-f21760c49a8d"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package govalidator is package of validators and sanitizers for strings, structs and collections.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/asaskevich/govalidator@0.0.0-20210307081110-f21760c49a8d",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/asaskevich/govalidator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/asaskevich/govalidator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Alex Saskevich",
            "versionInfo": "0.0.0-20210307081110-f21760c49a8d"
        },
        {
            "SPDXID": "SPDXRef-Package-3ced79c9a0fdf436",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/asaskevich/govalidator@v0.0.0-20190424111038-f61b66f89f4a"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package govalidator is package of validators and sanitizers for strings, structs and collections.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/asaskevich/govalidator@0.0.0-20190424111038-f61b66f89f4a",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/asaskevich/govalidator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/asaskevich/govalidator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Alex Saskevich",
            "versionInfo": "0.0.0-20190424111038-f61b66f89f4a"
        },
        {
            "SPDXID": "SPDXRef-Package-6010a56e8dcee7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/asaskevich/govalidator@v0.0.0-20230301143203-a9d515a09cc2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package govalidator is package of validators and sanitizers for strings, structs and collections.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/asaskevich/govalidator@0.0.0-20230301143203-a9d515a09cc2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/asaskevich/govalidator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/asaskevich/govalidator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Alex Saskevich",
            "versionInfo": "0.0.0-20230301143203-a9d515a09cc2"
        },
        {
            "SPDXID": "SPDXRef-Package-7cf29826bcdeb72c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/asaskevich/govalidator@v0.0.0-20190424111038-f61b66f89f4a"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package govalidator is package of validators and sanitizers for strings, structs and collections.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/asaskevich/govalidator@0.0.0-20190424111038-f61b66f89f4a",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/asaskevich/govalidator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/asaskevich/govalidator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Alex Saskevich",
            "versionInfo": "0.0.0-20190424111038-f61b66f89f4a"
        },
        {
            "SPDXID": "SPDXRef-Package-888cf90b3105452e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/asaskevich/govalidator@v0.0.0-20200907205600-7a23bdc65eef"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package govalidator is package of validators and sanitizers for strings, structs and collections.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/asaskevich/govalidator@0.0.0-20200907205600-7a23bdc65eef",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/asaskevich/govalidator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/asaskevich/govalidator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Alex Saskevich",
            "versionInfo": "0.0.0-20200907205600-7a23bdc65eef"
        },
        {
            "SPDXID": "SPDXRef-Package-a4c4b9f64a8d9896",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/asaskevich/govalidator@v0.0.0-20230301143203-a9d515a09cc2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package govalidator is package of validators and sanitizers for strings, structs and collections.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/asaskevich/govalidator@0.0.0-20230301143203-a9d515a09cc2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/asaskevich/govalidator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/asaskevich/govalidator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Alex Saskevich",
            "versionInfo": "0.0.0-20230301143203-a9d515a09cc2"
        },
        {
            "SPDXID": "SPDXRef-Package-b4718ea91dba0b40",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/asaskevich/govalidator@v0.0.0-20190424111038-f61b66f89f4a"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package govalidator is package of validators and sanitizers for strings, structs and collections.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/asaskevich/govalidator@0.0.0-20190424111038-f61b66f89f4a",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/asaskevich/govalidator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/asaskevich/govalidator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Alex Saskevich",
            "versionInfo": "0.0.0-20190424111038-f61b66f89f4a"
        },
        {
            "SPDXID": "SPDXRef-Package-d68ceee8e9917e61",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/asaskevich/govalidator@v0.0.0-20190424111038-f61b66f89f4a"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package govalidator is package of validators and sanitizers for strings, structs and collections.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/asaskevich/govalidator@0.0.0-20190424111038-f61b66f89f4a",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/asaskevich/govalidator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/asaskevich/govalidator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Alex Saskevich",
            "versionInfo": "0.0.0-20190424111038-f61b66f89f4a"
        },
        {
            "SPDXID": "SPDXRef-Package-e42c6212855a60e4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/asaskevich/govalidator@v0.0.0-20190424111038-f61b66f89f4a"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package govalidator is package of validators and sanitizers for strings, structs and collections.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/asaskevich/govalidator@0.0.0-20190424111038-f61b66f89f4a",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/asaskevich/govalidator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/asaskevich/govalidator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Alex Saskevich",
            "versionInfo": "0.0.0-20190424111038-f61b66f89f4a"
        },
        {
            "SPDXID": "SPDXRef-Package-e7a794cf35d7c765",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/asaskevich/govalidator@v0.0.0-20190424111038-f61b66f89f4a"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package govalidator is package of validators and sanitizers for strings, structs and collections.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/asaskevich/govalidator@0.0.0-20190424111038-f61b66f89f4a",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/asaskevich/govalidator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/asaskevich/govalidator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Alex Saskevich",
            "versionInfo": "0.0.0-20190424111038-f61b66f89f4a"
        },
        {
            "SPDXID": "SPDXRef-Package-f2440796da3161ef",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/asaskevich/govalidator@v0.0.0-20230301143203-a9d515a09cc2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package govalidator is package of validators and sanitizers for strings, structs and collections.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/asaskevich/govalidator@0.0.0-20230301143203-a9d515a09cc2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/asaskevich/govalidator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/asaskevich/govalidator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Alex Saskevich",
            "versionInfo": "0.0.0-20230301143203-a9d515a09cc2"
        },
        {
            "SPDXID": "SPDXRef-Package-31c4e006eebe4bd8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/basgys/goxml2json@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xml2json is an XML to JSON converter",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/basgys/goxml2json@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/basgys/goxml2json",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/basgys/goxml2json",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-24462573fae5d5a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-36a35a5600b085d5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-45d534c956bb7dcf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4db2be1f735371e6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5cd4c8f53eed94fd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-979346de3fe92ef8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-9ea7ffb89863b8af",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-bb7cb5da3adacccd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-dc383dfef8f7473a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-e7b3f37a2f38a9f4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ec4a59937d89c164",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-f0f4a7af3afea8fa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f48020645600d1e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fc66c8f2b4875474",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-86fe67f056e66778",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/bitly/go-simplejson@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/bitly/go-simplejson@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/bitly/go-simplejson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/bitly/go-simplejson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Bitly",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-438075c221020f6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7d9f49cb33d229cf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a48470b86db354b8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b2d3cae01b9b5735",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-db4078cb392e7002",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-377df94d6a34dbc3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash/v2@v2.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash/v2@2.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "2.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-68d4dbb24c7cc8cd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash/v2@v2.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash/v2@2.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "2.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-76ada16067071107",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash/v2@v2.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash/v2@2.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "2.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-89b3925d4e0b5389",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash/v2@v2.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash/v2@2.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "2.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b9469e1f802c7734",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash/v2@v2.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash/v2@2.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "2.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ba8b03f1de75b2c3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash/v2@v2.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash/v2@2.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "2.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-bbe4db1d1555e9c9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash/v2@v2.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash/v2@2.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "2.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d01672d0b5f55118",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash/v2@v2.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash/v2@2.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "2.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d01ff56eb57055e8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash/v2@v2.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash/v2@2.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "2.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-990f48aaf256d43f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/chai2010/gettext-go@v1.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gettext implements a basic GNU's gettext library.\n\nExample:\n\nTranslate directory struct(\"./examples/locale.zip\"):\n\nSee:\n\nPlease report bugs to <chaishushan{AT}gmail.com>.\nThanks!",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/chai2010/gettext-go@1.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/chai2010/gettext-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/chai2010/gettext-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-338de3ab9440a6e1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/client9/misspell@v0.3.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package misspell corrects commonly misspelled English words in source files.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/client9/misspell@0.3.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/client9/misspell",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/client9/misspell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Nick Galbreath",
            "versionInfo": "0.3.4"
        },
        {
            "SPDXID": "SPDXRef-Package-8355cba49f85ee91",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/client9/misspell@v0.3.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package misspell corrects commonly misspelled English words in source files.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/client9/misspell@0.3.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/client9/misspell",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/client9/misspell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Nick Galbreath",
            "versionInfo": "0.3.4"
        },
        {
            "SPDXID": "SPDXRef-Package-954df8354faef8bb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/client9/misspell@v0.3.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package misspell corrects commonly misspelled English words in source files.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/client9/misspell@0.3.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/client9/misspell",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/client9/misspell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Nick Galbreath",
            "versionInfo": "0.3.4"
        },
        {
            "SPDXID": "SPDXRef-Package-c00143d61dc0ffa3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/client9/misspell@v0.3.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package misspell corrects commonly misspelled English words in source files.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/client9/misspell@0.3.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/client9/misspell",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/client9/misspell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Nick Galbreath",
            "versionInfo": "0.3.4"
        },
        {
            "SPDXID": "SPDXRef-Package-fcf2dd3fb85334ae",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/client9/misspell@v0.3.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package misspell corrects commonly misspelled English words in source files.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/client9/misspell@0.3.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/client9/misspell",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/client9/misspell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Nick Galbreath",
            "versionInfo": "0.3.4"
        },
        {
            "SPDXID": "SPDXRef-Package-2c7f724f770d2cdd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/codahale/hdrhistogram@v0.0.0-20161010025455-3a0bb77429bd"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hdrhistogram provides an implementation of Gil Tene's HDR Histogram\ndata structure. The HDR Histogram allows for fast and accurate analysis of\nthe extreme ranges of data with non-normal distributions, like latency.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/codahale/hdrhistogram@0.0.0-20161010025455-3a0bb77429bd",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/codahale/hdrhistogram",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/codahale/hdrhistogram",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-tracelibgo/go.mod",
            "supplier": "Organization: HdrHistogram",
            "versionInfo": "0.0.0-20161010025455-3a0bb77429bd"
        },
        {
            "SPDXID": "SPDXRef-Package-90af879db55214c6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/containerd/containerd@v1.6.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/containerd/containerd@1.6.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/containerd/containerd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/containerd/containerd",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: containerd",
            "versionInfo": "1.6.6"
        },
        {
            "SPDXID": "SPDXRef-Package-51e3c9c833b181d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/bbolt@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "package bbolt implements a low-level key/value store in pure Go. It supports\nfully serializable transactions, ACID semantics, and lock-free MVCC with\nmultiple readers and a single writer. Bolt can be used for projects that\nwant a simple data store without the need to add large dependencies such as\nPostgres or MySQL.\n\nBolt is a single-level, zero-copy, B+tree data store. This means that Bolt is\noptimized for fast read access and does not require recovery in the event of a\nsystem crash. Transactions which have not finished committing will simply be\nrolled back in the event of a crash.\n\nThe design of Bolt is based on Howard Chu's LMDB database project.\n\nBolt currently works on Windows, Mac OS X, and Linux.\n\nThere are only a few types in Bolt: DB, Bucket, Tx, and Cursor. The DB is\na collection of buckets and is represented by a single file on disk. A bucket is\na collection of unique keys that are associated with values.\n\nTransactions provide either read-only or read-write access to the database.\nRead-only transactions can retrieve key/value pairs and can use Cursors to\niterate over the dataset sequentially. Read-write transactions can create and\ndelete buckets and can insert and remove keys. Only one read-write transaction\nis allowed at a time.\n\nThe database uses a read-only, memory-mapped data file to ensure that\napplications cannot corrupt the database, however, this means that keys and\nvalues returned from Bolt cannot be changed. Writing to a read-only byte slice\nwill cause Go to panic.\n\nKeys and values retrieved from the database are only valid for the life of\nthe transaction. When used outside the transaction, these byte slices can\npoint to different data or can point to invalid memory which will cause a panic.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/bbolt@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/bbolt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/coreos/bbolt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-62e78f06fe56898c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/bbolt@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "package bbolt implements a low-level key/value store in pure Go. It supports\nfully serializable transactions, ACID semantics, and lock-free MVCC with\nmultiple readers and a single writer. Bolt can be used for projects that\nwant a simple data store without the need to add large dependencies such as\nPostgres or MySQL.\n\nBolt is a single-level, zero-copy, B+tree data store. This means that Bolt is\noptimized for fast read access and does not require recovery in the event of a\nsystem crash. Transactions which have not finished committing will simply be\nrolled back in the event of a crash.\n\nThe design of Bolt is based on Howard Chu's LMDB database project.\n\nBolt currently works on Windows, Mac OS X, and Linux.\n\nThere are only a few types in Bolt: DB, Bucket, Tx, and Cursor. The DB is\na collection of buckets and is represented by a single file on disk. A bucket is\na collection of unique keys that are associated with values.\n\nTransactions provide either read-only or read-write access to the database.\nRead-only transactions can retrieve key/value pairs and can use Cursors to\niterate over the dataset sequentially. Read-write transactions can create and\ndelete buckets and can insert and remove keys. Only one read-write transaction\nis allowed at a time.\n\nThe database uses a read-only, memory-mapped data file to ensure that\napplications cannot corrupt the database, however, this means that keys and\nvalues returned from Bolt cannot be changed. Writing to a read-only byte slice\nwill cause Go to panic.\n\nKeys and values retrieved from the database are only valid for the life of\nthe transaction. When used outside the transaction, these byte slices can\npoint to different data or can point to invalid memory which will cause a panic.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/bbolt@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/bbolt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/coreos/bbolt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-6899912102f2e07",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/bbolt@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "package bbolt implements a low-level key/value store in pure Go. It supports\nfully serializable transactions, ACID semantics, and lock-free MVCC with\nmultiple readers and a single writer. Bolt can be used for projects that\nwant a simple data store without the need to add large dependencies such as\nPostgres or MySQL.\n\nBolt is a single-level, zero-copy, B+tree data store. This means that Bolt is\noptimized for fast read access and does not require recovery in the event of a\nsystem crash. Transactions which have not finished committing will simply be\nrolled back in the event of a crash.\n\nThe design of Bolt is based on Howard Chu's LMDB database project.\n\nBolt currently works on Windows, Mac OS X, and Linux.\n\nThere are only a few types in Bolt: DB, Bucket, Tx, and Cursor. The DB is\na collection of buckets and is represented by a single file on disk. A bucket is\na collection of unique keys that are associated with values.\n\nTransactions provide either read-only or read-write access to the database.\nRead-only transactions can retrieve key/value pairs and can use Cursors to\niterate over the dataset sequentially. Read-write transactions can create and\ndelete buckets and can insert and remove keys. Only one read-write transaction\nis allowed at a time.\n\nThe database uses a read-only, memory-mapped data file to ensure that\napplications cannot corrupt the database, however, this means that keys and\nvalues returned from Bolt cannot be changed. Writing to a read-only byte slice\nwill cause Go to panic.\n\nKeys and values retrieved from the database are only valid for the life of\nthe transaction. When used outside the transaction, these byte slices can\npoint to different data or can point to invalid memory which will cause a panic.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/bbolt@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/bbolt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/coreos/bbolt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-d9290c99f1575661",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/bbolt@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "package bbolt implements a low-level key/value store in pure Go. It supports\nfully serializable transactions, ACID semantics, and lock-free MVCC with\nmultiple readers and a single writer. Bolt can be used for projects that\nwant a simple data store without the need to add large dependencies such as\nPostgres or MySQL.\n\nBolt is a single-level, zero-copy, B+tree data store. This means that Bolt is\noptimized for fast read access and does not require recovery in the event of a\nsystem crash. Transactions which have not finished committing will simply be\nrolled back in the event of a crash.\n\nThe design of Bolt is based on Howard Chu's LMDB database project.\n\nBolt currently works on Windows, Mac OS X, and Linux.\n\nThere are only a few types in Bolt: DB, Bucket, Tx, and Cursor. The DB is\na collection of buckets and is represented by a single file on disk. A bucket is\na collection of unique keys that are associated with values.\n\nTransactions provide either read-only or read-write access to the database.\nRead-only transactions can retrieve key/value pairs and can use Cursors to\niterate over the dataset sequentially. Read-write transactions can create and\ndelete buckets and can insert and remove keys. Only one read-write transaction\nis allowed at a time.\n\nThe database uses a read-only, memory-mapped data file to ensure that\napplications cannot corrupt the database, however, this means that keys and\nvalues returned from Bolt cannot be changed. Writing to a read-only byte slice\nwill cause Go to panic.\n\nKeys and values retrieved from the database are only valid for the life of\nthe transaction. When used outside the transaction, these byte slices can\npoint to different data or can point to invalid memory which will cause a panic.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/bbolt@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/bbolt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/coreos/bbolt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-dcb1a47dd861245c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/bbolt@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "package bbolt implements a low-level key/value store in pure Go. It supports\nfully serializable transactions, ACID semantics, and lock-free MVCC with\nmultiple readers and a single writer. Bolt can be used for projects that\nwant a simple data store without the need to add large dependencies such as\nPostgres or MySQL.\n\nBolt is a single-level, zero-copy, B+tree data store. This means that Bolt is\noptimized for fast read access and does not require recovery in the event of a\nsystem crash. Transactions which have not finished committing will simply be\nrolled back in the event of a crash.\n\nThe design of Bolt is based on Howard Chu's LMDB database project.\n\nBolt currently works on Windows, Mac OS X, and Linux.\n\nThere are only a few types in Bolt: DB, Bucket, Tx, and Cursor. The DB is\na collection of buckets and is represented by a single file on disk. A bucket is\na collection of unique keys that are associated with values.\n\nTransactions provide either read-only or read-write access to the database.\nRead-only transactions can retrieve key/value pairs and can use Cursors to\niterate over the dataset sequentially. Read-write transactions can create and\ndelete buckets and can insert and remove keys. Only one read-write transaction\nis allowed at a time.\n\nThe database uses a read-only, memory-mapped data file to ensure that\napplications cannot corrupt the database, however, this means that keys and\nvalues returned from Bolt cannot be changed. Writing to a read-only byte slice\nwill cause Go to panic.\n\nKeys and values retrieved from the database are only valid for the life of\nthe transaction. When used outside the transaction, these byte slices can\npoint to different data or can point to invalid memory which will cause a panic.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/bbolt@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/bbolt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/coreos/bbolt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-1930080e8fa57941",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/etcd@v3.3.10+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package main is a simple wrapper of the real etcd entrypoint package\n(located at github.com/coreos/etcd/etcdmain) to ensure that etcd is still\n\"go getable\"; e.g. `go get github.com/coreos/etcd` works as expected and\nbuilds a binary in $GOBIN/etcd\n\nThis package should NOT be extended or modified in any way; to modify the\netcd binary, work in the `github.com/coreos/etcd/etcdmain` package.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/etcd@3.3.10%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/etcd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/etcd",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "3.3.10+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-23b9e6b741d03445",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/etcd@v3.3.10+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package main is a simple wrapper of the real etcd entrypoint package\n(located at github.com/coreos/etcd/etcdmain) to ensure that etcd is still\n\"go getable\"; e.g. `go get github.com/coreos/etcd` works as expected and\nbuilds a binary in $GOBIN/etcd\n\nThis package should NOT be extended or modified in any way; to modify the\netcd binary, work in the `github.com/coreos/etcd/etcdmain` package.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/etcd@3.3.10%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/etcd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/etcd",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "3.3.10+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-65e839ff952f03be",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/etcd@v3.3.10+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package main is a simple wrapper of the real etcd entrypoint package\n(located at github.com/coreos/etcd/etcdmain) to ensure that etcd is still\n\"go getable\"; e.g. `go get github.com/coreos/etcd` works as expected and\nbuilds a binary in $GOBIN/etcd\n\nThis package should NOT be extended or modified in any way; to modify the\netcd binary, work in the `github.com/coreos/etcd/etcdmain` package.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/etcd@3.3.10%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/etcd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/etcd",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "3.3.10+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-77e708d1fbabd61f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/etcd@v3.3.10+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package main is a simple wrapper of the real etcd entrypoint package\n(located at github.com/coreos/etcd/etcdmain) to ensure that etcd is still\n\"go getable\"; e.g. `go get github.com/coreos/etcd` works as expected and\nbuilds a binary in $GOBIN/etcd\n\nThis package should NOT be extended or modified in any way; to modify the\netcd binary, work in the `github.com/coreos/etcd/etcdmain` package.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/etcd@3.3.10%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/etcd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/etcd",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "3.3.10+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-d06f7fa2818f43a1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/etcd@v3.3.10+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package main is a simple wrapper of the real etcd entrypoint package\n(located at github.com/coreos/etcd/etcdmain) to ensure that etcd is still\n\"go getable\"; e.g. `go get github.com/coreos/etcd` works as expected and\nbuilds a binary in $GOBIN/etcd\n\nThis package should NOT be extended or modified in any way; to modify the\netcd binary, work in the `github.com/coreos/etcd/etcdmain` package.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/etcd@3.3.10%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/etcd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/etcd",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "3.3.10+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-3fb6801bdbe83d63",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/go-semver@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/go-semver@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/go-semver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/go-semver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5515940a027558a1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/go-semver@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/go-semver@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/go-semver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/go-semver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c2a8d30a3dd16bfb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/go-semver@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/go-semver@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/go-semver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/go-semver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e57d2c63061d34c7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/go-semver@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/go-semver@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/go-semver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/go-semver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ee676c1a021342e9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/go-semver@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/go-semver@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/go-semver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/go-semver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-220c24d090824076",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/go-systemd@v0.0.0-20190321100706-95778dfbb74e"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/go-systemd@0.0.0-20190321100706-95778dfbb74e",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/go-systemd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/go-systemd",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: CoreOS",
            "versionInfo": "0.0.0-20190321100706-95778dfbb74e"
        },
        {
            "SPDXID": "SPDXRef-Package-226e84253b3b892f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/go-systemd@v0.0.0-20190321100706-95778dfbb74e"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/go-systemd@0.0.0-20190321100706-95778dfbb74e",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/go-systemd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/go-systemd",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: CoreOS",
            "versionInfo": "0.0.0-20190321100706-95778dfbb74e"
        },
        {
            "SPDXID": "SPDXRef-Package-4194c5088da61a4f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/go-systemd@v0.0.0-20190321100706-95778dfbb74e"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/go-systemd@0.0.0-20190321100706-95778dfbb74e",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/go-systemd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/go-systemd",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: CoreOS",
            "versionInfo": "0.0.0-20190321100706-95778dfbb74e"
        },
        {
            "SPDXID": "SPDXRef-Package-d415e8149271f8e8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/go-systemd@v0.0.0-20190321100706-95778dfbb74e"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/go-systemd@0.0.0-20190321100706-95778dfbb74e",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/go-systemd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/go-systemd",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: CoreOS",
            "versionInfo": "0.0.0-20190321100706-95778dfbb74e"
        },
        {
            "SPDXID": "SPDXRef-Package-e4c9518cfec45a86",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/go-systemd@v0.0.0-20190321100706-95778dfbb74e"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/go-systemd@0.0.0-20190321100706-95778dfbb74e",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/go-systemd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/go-systemd",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: CoreOS",
            "versionInfo": "0.0.0-20190321100706-95778dfbb74e"
        },
        {
            "SPDXID": "SPDXRef-Package-cefb5434ab6a860d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/go-systemd/v22@v22.3.3-0.20220203105225-a9a7ef127534"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/go-systemd/v22@22.3.3-0.20220203105225-a9a7ef127534",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/go-systemd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/go-systemd/v22",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: CoreOS",
            "versionInfo": "22.3.3-0.20220203105225-a9a7ef127534"
        },
        {
            "SPDXID": "SPDXRef-Package-24a44c3e1cc194f4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/pkg@v0.0.0-20180928190104-399ea9e2e55f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/pkg@0.0.0-20180928190104-399ea9e2e55f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/pkg",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/pkg",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180928190104-399ea9e2e55f"
        },
        {
            "SPDXID": "SPDXRef-Package-6360913b7008996e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/pkg@v0.0.0-20180928190104-399ea9e2e55f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/pkg@0.0.0-20180928190104-399ea9e2e55f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/pkg",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/pkg",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180928190104-399ea9e2e55f"
        },
        {
            "SPDXID": "SPDXRef-Package-a3dbe99683f29797",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/pkg@v0.0.0-20180928190104-399ea9e2e55f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/pkg@0.0.0-20180928190104-399ea9e2e55f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/pkg",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/pkg",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180928190104-399ea9e2e55f"
        },
        {
            "SPDXID": "SPDXRef-Package-d0826d6a635e6af8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/pkg@v0.0.0-20180928190104-399ea9e2e55f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/pkg@0.0.0-20180928190104-399ea9e2e55f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/pkg",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/pkg",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180928190104-399ea9e2e55f"
        },
        {
            "SPDXID": "SPDXRef-Package-d6f9711cbb7ab577",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/coreos/pkg@v0.0.0-20180928190104-399ea9e2e55f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/coreos/pkg@0.0.0-20180928190104-399ea9e2e55f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/coreos/pkg",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/coreos/pkg",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180928190104-399ea9e2e55f"
        },
        {
            "SPDXID": "SPDXRef-Package-b5e13b469404a830",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cyberdelia/templates@v0.0.0-20141128023046-ca7fffd4298c"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cyberdelia/templates@0.0.0-20141128023046-ca7fffd4298c",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cyberdelia/templates",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cyberdelia/templates",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Timoth\u00e9e Peignier",
            "versionInfo": "0.0.0-20141128023046-ca7fffd4298c"
        },
        {
            "SPDXID": "SPDXRef-Package-5a585f32f9ccce40",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cyphar/filepath-securejoin@v0.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package securejoin implements a set of helpers to make it easier to write Go\ncode that is safe against symlink-related escape attacks. The primary idea\nis to let you resolve a path within a rootfs directory as if the rootfs was\na chroot.\n\nsecurejoin has two APIs, a \"legacy\" API and a \"modern\" API.\n\nThe legacy API is SecureJoin and SecureJoinVFS. These methods are\n**not** safe against race conditions where an attacker changes the\nfilesystem after (or during) the SecureJoin operation.\n\nThe new API is made up of OpenInRoot and MkdirAll (and derived\nfunctions). These are safe against racing attackers and have several other\nprotections that are not provided by the legacy API. There are many more\noperations that most programs expect to be able to do safely, but we do not\nprovide explicit support for them because we want to encourage users to\nswitch to [libpathrs](https://github.com/openSUSE/libpathrs) which is a\ncross-language next-generation library that is entirely designed around\noperating on paths safely.\n\nsecurejoin has been used by several container runtimes (Docker, runc,\nKubernetes, etc) for quite a few years as a de-facto standard for operating\non container filesystem paths \"safely\". However, most users still use the\nlegacy API which is unsafe against various attacks (there is a fairly long\nhistory of CVEs in dependent as a result). Users should switch to the modern\nAPI as soon as possible (or even better, switch to libpathrs).\n\nThis project was initially intended to be included in the Go standard\nlibrary, but [it was rejected](https://go.dev/issue/20126). There is now a\n[new Go proposal](https://go.dev/issue/67002) for a safe path resolution API\nthat shares some of the goals of filepath-securejoin. However, that design\nis intended to work like `openat2(RESOLVE_BENEATH)` which does not fit the\nusecase of container runtimes and most system tools.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cyphar/filepath-securejoin@0.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cyphar/filepath-securejoin",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/cyphar/filepath-securejoin",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Aleksa Sarai",
            "versionInfo": "0.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-1b83ed0b30dd8b9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-244827c7ebaab6a1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/common/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2a19b0158bd34a81",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-30036ca77cdf82d7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-382e47fb2348f9e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-56ae89562b937e76",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-68636be100f602c8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-6c9e1491775aa851",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/alarm/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-70472830e6cd316a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/reader/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7297919d783eb59d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-7f12cde69c20bb8e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-tracelibgo/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7f52ee3824922f2d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a7330b5a8339dca6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-aa08c5a80c1f1d79",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b1c5b1d42b75a214",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b1db57de9026bd78",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b2aa4d938f0491a5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-bfaa8f0f38e62820",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c221b6d4aa0c2eb4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c36dafec6a126e9a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c64ee85acf5e1181",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d888de7726e44e73",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: com-golog/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-dbcce5e83816e891",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-f77f4478b2e1e2cc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-84aeea1469371ad0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/deepmap/oapi-codegen@v1.8.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/deepmap/oapi-codegen@1.8.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/deepmap/oapi-codegen",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/deepmap/oapi-codegen",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: DeepMap, Inc",
            "versionInfo": "1.8.2"
        },
        {
            "SPDXID": "SPDXRef-Package-271567445de46709",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgrijalva/jwt-go@v3.2.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jwt is a Go implementation of JSON Web Tokens: http://self-issued.info/docs/draft-jones-json-web-token.html\n\nSee README.md for more info.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgrijalva/jwt-go@3.2.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgrijalva/jwt-go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgrijalva/jwt-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Dave Grijalva",
            "versionInfo": "3.2.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-3b87ca26c592f2a4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgrijalva/jwt-go@v3.2.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jwt is a Go implementation of JSON Web Tokens: http://self-issued.info/docs/draft-jones-json-web-token.html\n\nSee README.md for more info.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgrijalva/jwt-go@3.2.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgrijalva/jwt-go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgrijalva/jwt-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Dave Grijalva",
            "versionInfo": "3.2.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-6df52d1ea01f76d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgrijalva/jwt-go@v3.2.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jwt is a Go implementation of JSON Web Tokens: http://self-issued.info/docs/draft-jones-json-web-token.html\n\nSee README.md for more info.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgrijalva/jwt-go@3.2.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgrijalva/jwt-go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgrijalva/jwt-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Dave Grijalva",
            "versionInfo": "3.2.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-8f0133237fcedff",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgrijalva/jwt-go@v3.2.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jwt is a Go implementation of JSON Web Tokens: http://self-issued.info/docs/draft-jones-json-web-token.html\n\nSee README.md for more info.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgrijalva/jwt-go@3.2.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgrijalva/jwt-go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgrijalva/jwt-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Dave Grijalva",
            "versionInfo": "3.2.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-9d77777daa9d781d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgrijalva/jwt-go@v3.2.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jwt is a Go implementation of JSON Web Tokens: http://self-issued.info/docs/draft-jones-json-web-token.html\n\nSee README.md for more info.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgrijalva/jwt-go@3.2.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgrijalva/jwt-go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgrijalva/jwt-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Dave Grijalva",
            "versionInfo": "3.2.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-d05e5b9c821736b7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgrijalva/jwt-go@v3.2.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jwt is a Go implementation of JSON Web Tokens: http://self-issued.info/docs/draft-jones-json-web-token.html\n\nSee README.md for more info.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgrijalva/jwt-go@3.2.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgrijalva/jwt-go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgrijalva/jwt-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Dave Grijalva",
            "versionInfo": "3.2.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-2044052f7cd102e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgryski/go-rendezvous@v0.0.0-20200823014737-9f7001d12a5f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgryski/go-rendezvous@0.0.0-20200823014737-9f7001d12a5f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgryski/go-rendezvous",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgryski/go-rendezvous",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "Organization: Damian Gryski",
            "versionInfo": "0.0.0-20200823014737-9f7001d12a5f"
        },
        {
            "SPDXID": "SPDXRef-Package-7ea8de7b1511f4b1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgryski/go-rendezvous@v0.0.0-20200823014737-9f7001d12a5f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgryski/go-rendezvous@0.0.0-20200823014737-9f7001d12a5f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgryski/go-rendezvous",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgryski/go-rendezvous",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Damian Gryski",
            "versionInfo": "0.0.0-20200823014737-9f7001d12a5f"
        },
        {
            "SPDXID": "SPDXRef-Package-1112d300e125d13d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgryski/go-sip13@v0.0.0-20181026042036-e10d5fee7954"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgryski/go-sip13@0.0.0-20181026042036-e10d5fee7954",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgryski/go-sip13",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgryski/go-sip13",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Damian Gryski",
            "versionInfo": "0.0.0-20181026042036-e10d5fee7954"
        },
        {
            "SPDXID": "SPDXRef-Package-786a1789de8a2f69",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgryski/go-sip13@v0.0.0-20181026042036-e10d5fee7954"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgryski/go-sip13@0.0.0-20181026042036-e10d5fee7954",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgryski/go-sip13",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgryski/go-sip13",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Damian Gryski",
            "versionInfo": "0.0.0-20181026042036-e10d5fee7954"
        },
        {
            "SPDXID": "SPDXRef-Package-8dfdfe03cea4ff49",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgryski/go-sip13@v0.0.0-20181026042036-e10d5fee7954"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgryski/go-sip13@0.0.0-20181026042036-e10d5fee7954",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgryski/go-sip13",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgryski/go-sip13",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Damian Gryski",
            "versionInfo": "0.0.0-20181026042036-e10d5fee7954"
        },
        {
            "SPDXID": "SPDXRef-Package-ee0f7286bd6cdaea",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgryski/go-sip13@v0.0.0-20181026042036-e10d5fee7954"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgryski/go-sip13@0.0.0-20181026042036-e10d5fee7954",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgryski/go-sip13",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgryski/go-sip13",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Damian Gryski",
            "versionInfo": "0.0.0-20181026042036-e10d5fee7954"
        },
        {
            "SPDXID": "SPDXRef-Package-f67f4fba0691c4f8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/dgryski/go-sip13@v0.0.0-20181026042036-e10d5fee7954"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/dgryski/go-sip13@0.0.0-20181026042036-e10d5fee7954",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dgryski/go-sip13",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/dgryski/go-sip13",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Damian Gryski",
            "versionInfo": "0.0.0-20181026042036-e10d5fee7954"
        },
        {
            "SPDXID": "SPDXRef-Package-aeef3527eaafdf6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/cli@v20.10.17+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/cli@20.10.17%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/cli",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/cli",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Docker",
            "versionInfo": "20.10.17+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-2ac0fdc6d9ce8142",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/distribution@v2.8.1+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package distribution will define the interfaces for the components of\ndocker distribution. The goal is to allow users to reliably package, ship\nand store content related to docker images.\n\nThis is currently a work in progress. More details are available in the\nREADME.md.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/distribution@2.8.1%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/distribution",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/distribution",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Distribution",
            "versionInfo": "2.8.1+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-e8bd44d5d4610cd2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/docker@v20.10.17+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/docker@20.10.17%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/docker",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/docker",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Moby",
            "versionInfo": "20.10.17+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-810cd1cb3ef92fe",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/docker-credential-helpers@v0.6.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/docker-credential-helpers@0.6.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/docker-credential-helpers",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/docker/docker-credential-helpers",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Docker",
            "versionInfo": "0.6.4"
        },
        {
            "SPDXID": "SPDXRef-Package-3cc9802dce1a7b58",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-connections@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package connections provides libraries to work with network connections.\nThis library is divided in several components for specific usage.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-connections@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-connections",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-connections",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-94fc87ea43983c40",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-metrics@v0.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-metrics@0.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-metrics",
            "licenseConcluded": "Apache-2.0 OR CC-BY-SA-4.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-metrics",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-298d738f11462108",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-units@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helper function to parse and print size and time units\nin human-readable format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-units@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-units",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-372d0c1950b66395",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-units@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helper function to parse and print size and time units\nin human-readable format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-units@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-units",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4542a5232be29aa1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-units@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helper function to parse and print size and time units\nin human-readable format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-units@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-units",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-64bd129bdfc4545",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-units@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helper function to parse and print size and time units\nin human-readable format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-units@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-units",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6af0dfcede0584d1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-units@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helper function to parse and print size and time units\nin human-readable format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-units@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-units",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-79b6ca6ad22737b5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-units@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helper function to parse and print size and time units\nin human-readable format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-units@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-units",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-81938d4518718e33",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-units@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helper function to parse and print size and time units\nin human-readable format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-units@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-units",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d662eb1fbeaf5e16",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-units@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helper function to parse and print size and time units\nin human-readable format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-units@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-units",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d678f49db7b246f0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-units@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helper function to parse and print size and time units\nin human-readable format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-units@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-units",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-efdd38cc0672b305",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-units@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helper function to parse and print size and time units\nin human-readable format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-units@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-units",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f43654e6de9860b5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/docker/go-units@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package units provides helper function to parse and print size and time units\nin human-readable format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/docker/go-units@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/docker/go-units",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/docker/go-units",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6190a794d15cf808",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/emicklei/go-restful/v3@v3.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package restful , a lean package for creating REST-style WebServices without magic.\n\nA WebService has a collection of Route objects that dispatch incoming Http Requests to a function calls.\nTypically, a WebService has a root path (e.g. /users) and defines common MIME types for its routes.\nWebServices must be added to a container (see below) in order to handler Http requests from a server.\n\nA Route is defined by a HTTP method, an URL path and (optionally) the MIME types it consumes (Content-Type) and produces (Accept).\nThis package has the logic to find the best matching Route and if found, call its Function.\n\nThe (*Request, *Response) arguments provide functions for reading information from the request and writing information back to the response.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/user-resource/restful-user-resource.go with a full implementation.\n\nA Route parameter can be specified using the format \"uri/{var[:regexp]}\" or the special version \"uri/{var:*}\" for matching the tail of the path.\nFor example, /persons/{name:[A-Z][A-Z]} can be used to restrict values for the parameter \"name\" to only contain capital alphabetic characters.\nRegular expressions must use the standard Go syntax as described in the regexp package. (https://code.google.com/p/re2/wiki/Syntax)\nThis feature requires the use of a CurlyRouter.\n\nA Container holds a collection of WebServices, Filters and a http.ServeMux for multiplexing http requests.\nUsing the statements \"restful.Add(...) and restful.Filter(...)\" will register WebServices and Filters to the Default Container.\nThe Default container of go-restful uses the http.DefaultServeMux.\nYou can create your own Container and create a new http.Server for that particular container.\n\nA filter dynamically intercepts requests and responses to transform or use the information contained in the requests or responses.\nYou can use filters to perform generic logging, measurement, authentication, redirect, set response headers etc.\nIn the restful package there are three hooks into the request,response flow where filters can be added.\nEach filter must define a FilterFunction:\n\nUse the following statement to pass the request,response pair to the next filter or RouteFunction\n\nThese are processed before any registered WebService.\n\nThese are processed before any Route of a WebService.\n\nThese are processed before calling the function associated with the Route.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/filters/restful-filters.go with full implementations.\n\nTwo encodings are supported: gzip and deflate. To enable this for all responses:\n\nIf a Http request includes the Accept-Encoding header then the response content will be compressed using the specified encoding.\nAlternatively, you can create a Filter that performs the encoding and install it per WebService or Route.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/encoding/restful-encoding-filter.go\n\nBy installing a pre-defined container filter, your Webservice(s) can respond to the OPTIONS Http request.\n\nBy installing the filter of a CrossOriginResourceSharing (CORS), your WebService(s) can handle CORS requests.\n\nUnexpected things happen. If a request cannot be processed because of a failure, your service needs to tell via the response what happened and why.\nFor this reason HTTP status codes exist and it is important to use the correct code in every exceptional situation.\n\nIf path or query parameters are not valid (content or type) then use http.StatusBadRequest.\n\nDespite a valid URI, the resource requested may not be available\n\nIf the application logic could not process the request (or write the response) then use http.StatusInternalServerError.\n\nThe request has a valid URL but the method (GET,PUT,POST,...) is not allowed.\n\nThe request does not have or has an unknown Accept Header set for this operation.\n\nThe request does not have or has an unknown Content-Type Header set for this operation.\n\nIn addition to setting the correct (error) Http status code, you can choose to write a ServiceError message on the response.\n\nThis package has several options that affect the performance of your service. It is important to understand them and how you can change it.\n\nDoNotRecover controls whether panics will be caught to return HTTP 500.\nIf set to false, the container will recover from panics.\nDefault value is true\n\nIf content encoding is enabled then the default strategy for getting new gzip/zlib writers and readers is to use a sync.Pool.\nBecause writers are expensive structures, performance is even more improved when using a preloaded cache. You can also inject your own implementation.\n\nThis package has the means to produce detail logging of the complete Http request matching process and filter invocation.\nEnabling this feature requires you to set an implementation of restful.StdLogger (e.g. log.Logger) instance such as:\n\nThe restful.SetLogger() method allows you to override the logger used by the package. By default restful\nuses the standard library `log` package and logs to stdout. Different logging packages are supported as\nlong as they conform to `StdLogger` interface defined in the `log` sub-package, writing an adapter for your\npreferred package is simple.\n\n(c) 2012-2015, http://ernestmicklei.com. MIT License",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/emicklei/go-restful/v3@3.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/emicklei/go-restful",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/emicklei/go-restful/v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Ernest Micklei",
            "versionInfo": "3.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f212415be4cead3d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/emicklei/go-restful/v3@v3.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package restful , a lean package for creating REST-style WebServices without magic.\n\nA WebService has a collection of Route objects that dispatch incoming Http Requests to a function calls.\nTypically, a WebService has a root path (e.g. /users) and defines common MIME types for its routes.\nWebServices must be added to a container (see below) in order to handler Http requests from a server.\n\nA Route is defined by a HTTP method, an URL path and (optionally) the MIME types it consumes (Content-Type) and produces (Accept).\nThis package has the logic to find the best matching Route and if found, call its Function.\n\nThe (*Request, *Response) arguments provide functions for reading information from the request and writing information back to the response.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/user-resource/restful-user-resource.go with a full implementation.\n\nA Route parameter can be specified using the format \"uri/{var[:regexp]}\" or the special version \"uri/{var:*}\" for matching the tail of the path.\nFor example, /persons/{name:[A-Z][A-Z]} can be used to restrict values for the parameter \"name\" to only contain capital alphabetic characters.\nRegular expressions must use the standard Go syntax as described in the regexp package. (https://code.google.com/p/re2/wiki/Syntax)\nThis feature requires the use of a CurlyRouter.\n\nA Container holds a collection of WebServices, Filters and a http.ServeMux for multiplexing http requests.\nUsing the statements \"restful.Add(...) and restful.Filter(...)\" will register WebServices and Filters to the Default Container.\nThe Default container of go-restful uses the http.DefaultServeMux.\nYou can create your own Container and create a new http.Server for that particular container.\n\nA filter dynamically intercepts requests and responses to transform or use the information contained in the requests or responses.\nYou can use filters to perform generic logging, measurement, authentication, redirect, set response headers etc.\nIn the restful package there are three hooks into the request,response flow where filters can be added.\nEach filter must define a FilterFunction:\n\nUse the following statement to pass the request,response pair to the next filter or RouteFunction\n\nThese are processed before any registered WebService.\n\nThese are processed before any Route of a WebService.\n\nThese are processed before calling the function associated with the Route.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/filters/restful-filters.go with full implementations.\n\nTwo encodings are supported: gzip and deflate. To enable this for all responses:\n\nIf a Http request includes the Accept-Encoding header then the response content will be compressed using the specified encoding.\nAlternatively, you can create a Filter that performs the encoding and install it per WebService or Route.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/encoding/restful-encoding-filter.go\n\nBy installing a pre-defined container filter, your Webservice(s) can respond to the OPTIONS Http request.\n\nBy installing the filter of a CrossOriginResourceSharing (CORS), your WebService(s) can handle CORS requests.\n\nUnexpected things happen. If a request cannot be processed because of a failure, your service needs to tell via the response what happened and why.\nFor this reason HTTP status codes exist and it is important to use the correct code in every exceptional situation.\n\nIf path or query parameters are not valid (content or type) then use http.StatusBadRequest.\n\nDespite a valid URI, the resource requested may not be available\n\nIf the application logic could not process the request (or write the response) then use http.StatusInternalServerError.\n\nThe request has a valid URL but the method (GET,PUT,POST,...) is not allowed.\n\nThe request does not have or has an unknown Accept Header set for this operation.\n\nThe request does not have or has an unknown Content-Type Header set for this operation.\n\nIn addition to setting the correct (error) Http status code, you can choose to write a ServiceError message on the response.\n\nThis package has several options that affect the performance of your service. It is important to understand them and how you can change it.\n\nDoNotRecover controls whether panics will be caught to return HTTP 500.\nIf set to false, the container will recover from panics.\nDefault value is true\n\nIf content encoding is enabled then the default strategy for getting new gzip/zlib writers and readers is to use a sync.Pool.\nBecause writers are expensive structures, performance is even more improved when using a preloaded cache. You can also inject your own implementation.\n\nThis package has the means to produce detail logging of the complete Http request matching process and filter invocation.\nEnabling this feature requires you to set an implementation of restful.StdLogger (e.g. log.Logger) instance such as:\n\nThe restful.SetLogger() method allows you to override the logger used by the package. By default restful\nuses the standard library `log` package and logs to stdout. Different logging packages are supported as\nlong as they conform to `StdLogger` interface defined in the `log` sub-package, writing an adapter for your\npreferred package is simple.\n\n(c) 2012-2015, http://ernestmicklei.com. MIT License",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/emicklei/go-restful/v3@3.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/emicklei/go-restful",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/emicklei/go-restful/v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Ernest Micklei",
            "versionInfo": "3.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ff72cb238d31e440",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/emicklei/go-restful/v3@v3.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package restful , a lean package for creating REST-style WebServices without magic.\n\nA WebService has a collection of Route objects that dispatch incoming Http Requests to a function calls.\nTypically, a WebService has a root path (e.g. /users) and defines common MIME types for its routes.\nWebServices must be added to a container (see below) in order to handler Http requests from a server.\n\nA Route is defined by a HTTP method, an URL path and (optionally) the MIME types it consumes (Content-Type) and produces (Accept).\nThis package has the logic to find the best matching Route and if found, call its Function.\n\nThe (*Request, *Response) arguments provide functions for reading information from the request and writing information back to the response.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/user-resource/restful-user-resource.go with a full implementation.\n\nA Route parameter can be specified using the format \"uri/{var[:regexp]}\" or the special version \"uri/{var:*}\" for matching the tail of the path.\nFor example, /persons/{name:[A-Z][A-Z]} can be used to restrict values for the parameter \"name\" to only contain capital alphabetic characters.\nRegular expressions must use the standard Go syntax as described in the regexp package. (https://code.google.com/p/re2/wiki/Syntax)\nThis feature requires the use of a CurlyRouter.\n\nA Container holds a collection of WebServices, Filters and a http.ServeMux for multiplexing http requests.\nUsing the statements \"restful.Add(...) and restful.Filter(...)\" will register WebServices and Filters to the Default Container.\nThe Default container of go-restful uses the http.DefaultServeMux.\nYou can create your own Container and create a new http.Server for that particular container.\n\nA filter dynamically intercepts requests and responses to transform or use the information contained in the requests or responses.\nYou can use filters to perform generic logging, measurement, authentication, redirect, set response headers etc.\nIn the restful package there are three hooks into the request,response flow where filters can be added.\nEach filter must define a FilterFunction:\n\nUse the following statement to pass the request,response pair to the next filter or RouteFunction\n\nThese are processed before any registered WebService.\n\nThese are processed before any Route of a WebService.\n\nThese are processed before calling the function associated with the Route.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/filters/restful-filters.go with full implementations.\n\nTwo encodings are supported: gzip and deflate. To enable this for all responses:\n\nIf a Http request includes the Accept-Encoding header then the response content will be compressed using the specified encoding.\nAlternatively, you can create a Filter that performs the encoding and install it per WebService or Route.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/encoding/restful-encoding-filter.go\n\nBy installing a pre-defined container filter, your Webservice(s) can respond to the OPTIONS Http request.\n\nBy installing the filter of a CrossOriginResourceSharing (CORS), your WebService(s) can handle CORS requests.\n\nUnexpected things happen. If a request cannot be processed because of a failure, your service needs to tell via the response what happened and why.\nFor this reason HTTP status codes exist and it is important to use the correct code in every exceptional situation.\n\nIf path or query parameters are not valid (content or type) then use http.StatusBadRequest.\n\nDespite a valid URI, the resource requested may not be available\n\nIf the application logic could not process the request (or write the response) then use http.StatusInternalServerError.\n\nThe request has a valid URL but the method (GET,PUT,POST,...) is not allowed.\n\nThe request does not have or has an unknown Accept Header set for this operation.\n\nThe request does not have or has an unknown Content-Type Header set for this operation.\n\nIn addition to setting the correct (error) Http status code, you can choose to write a ServiceError message on the response.\n\nThis package has several options that affect the performance of your service. It is important to understand them and how you can change it.\n\nDoNotRecover controls whether panics will be caught to return HTTP 500.\nIf set to false, the container will recover from panics.\nDefault value is true\n\nIf content encoding is enabled then the default strategy for getting new gzip/zlib writers and readers is to use a sync.Pool.\nBecause writers are expensive structures, performance is even more improved when using a preloaded cache. You can also inject your own implementation.\n\nThis package has the means to produce detail logging of the complete Http request matching process and filter invocation.\nEnabling this feature requires you to set an implementation of restful.StdLogger (e.g. log.Logger) instance such as:\n\nThe restful.SetLogger() method allows you to override the logger used by the package. By default restful\nuses the standard library `log` package and logs to stdout. Different logging packages are supported as\nlong as they conform to `StdLogger` interface defined in the `log` sub-package, writing an adapter for your\npreferred package is simple.\n\n(c) 2012-2015, http://ernestmicklei.com. MIT License",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/emicklei/go-restful/v3@3.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/emicklei/go-restful",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/emicklei/go-restful/v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Ernest Micklei",
            "versionInfo": "3.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bbcee0e9444564b2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/evanphx/json-patch@v5.6.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/evanphx/json-patch@5.6.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/evanphx/json-patch",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/evanphx/json-patch",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Evan Phoenix",
            "versionInfo": "5.6.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-5a36d6f5f75903d4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/evanphx/json-patch/v5@v5.6.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/evanphx/json-patch/v5@5.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/evanphx/json-patch",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/evanphx/json-patch/v5",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Evan Phoenix",
            "versionInfo": "5.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-777cfea077dcce8d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/evanphx/json-patch/v5@v5.6.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/evanphx/json-patch/v5@5.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/evanphx/json-patch",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/evanphx/json-patch/v5",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Evan Phoenix",
            "versionInfo": "5.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-885b5028acb2e550",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/exponent-io/jsonpath@v0.0.0-20151013193312-d6023ce2651d"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Extends the Go runtime's json.Decoder enabling navigation of a stream of json tokens.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/exponent-io/jsonpath@0.0.0-20151013193312-d6023ce2651d",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/exponent-io/jsonpath",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/exponent-io/jsonpath",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20151013193312-d6023ce2651d"
        },
        {
            "SPDXID": "SPDXRef-Package-7a73372a8acf33",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fatih/color@v1.13.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package color is an ANSI color package to output colorized or SGR defined\noutput to the standard output. The API can be used in several way, pick one\nthat suits you.\n\nUse simple and default helper functions with predefined foreground colors:\n\nHowever, there are times when custom color mixes are required. Below are some\nexamples to create custom color objects and use the print functions of each\nseparate color object.\n\nYou can create PrintXxx functions to simplify even more:\n\nYou can also FprintXxx functions to pass your own io.Writer:\n\nOr create SprintXxx functions to mix strings with other non-colorized strings:\n\nWindows support is enabled by default. All Print functions work as intended.\nHowever, only for color.SprintXXX functions, user should use fmt.FprintXXX and\nset the output to color.Output:\n\nUsing with existing code is possible. Just use the Set() method to set the\nstandard output to the given parameters. That way a rewrite of an existing\ncode is not required.\n\nThere might be a case where you want to disable color output (for example to\npipe the standard output of your app to somewhere else). `Color` has support to\ndisable colors both globally and for single color definition. For example\nsuppose you have a CLI app and a `--no-color` bool flag. You can easily disable\nthe color output with:\n\nYou can also disable the color by setting the NO_COLOR environment variable to any value.\n\nIt also has support for single color definitions (local). You can\ndisable/enable color output on the fly:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fatih/color@1.13.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fatih/color",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/fatih/color",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Fatih Arslan",
            "versionInfo": "1.13.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1202d29cfee8eebc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.6.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-120e2c109a436d87",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.4.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.4.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.9"
        },
        {
            "SPDXID": "SPDXRef-Package-25b053c97d466570",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.6.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-26d05036f4a6fe5c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.4.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.4.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.9"
        },
        {
            "SPDXID": "SPDXRef-Package-2e645403c8db356",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.4.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.4.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.9"
        },
        {
            "SPDXID": "SPDXRef-Package-324066eba5bcb1e8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.4.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.4.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.7"
        },
        {
            "SPDXID": "SPDXRef-Package-698f62ab99181311",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.4.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.4.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.7"
        },
        {
            "SPDXID": "SPDXRef-Package-6a111db0cab359c0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.4.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.4.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.9"
        },
        {
            "SPDXID": "SPDXRef-Package-8473106a05591f17",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.4.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.4.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.9"
        },
        {
            "SPDXID": "SPDXRef-Package-87edbf69ed565cb1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.4.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.4.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.9"
        },
        {
            "SPDXID": "SPDXRef-Package-884fc77987f0328d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.6.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8fd49026c1e32d47",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.6.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9c83d4a7ed22c890",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.6.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d8983be51a1a6454",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.4.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.4.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.9"
        },
        {
            "SPDXID": "SPDXRef-Package-e06e9551b6c5a3f4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.4.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.4.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.9"
        },
        {
            "SPDXID": "SPDXRef-Package-f821b32b524e0223",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/getkin/kin-openapi@v0.61.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/getkin/kin-openapi@0.61.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/getkin/kin-openapi",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/getkin/kin-openapi",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: getkin",
            "versionInfo": "0.61.0"
        },
        {
            "SPDXID": "SPDXRef-Package-13756b990f9d81d7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ghodss/yaml@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Copyright 2013 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ghodss/yaml@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ghodss/yaml",
            "licenseConcluded": "BSD-3-Clause OR MIT",
            "licenseDeclared": "BSD-3-Clause OR MIT",
            "name": "github.com/ghodss/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Sam Ghods",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-192fe926813f6bd2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ghodss/yaml@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Copyright 2013 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ghodss/yaml@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ghodss/yaml",
            "licenseConcluded": "BSD-3-Clause OR MIT",
            "licenseDeclared": "BSD-3-Clause OR MIT",
            "name": "github.com/ghodss/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Sam Ghods",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8215d613efe008e5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ghodss/yaml@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Copyright 2013 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ghodss/yaml@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ghodss/yaml",
            "licenseConcluded": "BSD-3-Clause OR MIT",
            "licenseDeclared": "BSD-3-Clause OR MIT",
            "name": "github.com/ghodss/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Sam Ghods",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-83d7490ba5be2d3d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ghodss/yaml@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Copyright 2013 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ghodss/yaml@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ghodss/yaml",
            "licenseConcluded": "BSD-3-Clause OR MIT",
            "licenseDeclared": "BSD-3-Clause OR MIT",
            "name": "github.com/ghodss/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Sam Ghods",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8958795c10fcad2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ghodss/yaml@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Copyright 2013 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ghodss/yaml@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ghodss/yaml",
            "licenseConcluded": "BSD-3-Clause OR MIT",
            "licenseDeclared": "BSD-3-Clause OR MIT",
            "name": "github.com/ghodss/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Sam Ghods",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b6d6b18930634b84",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ghodss/yaml@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Copyright 2013 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ghodss/yaml@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ghodss/yaml",
            "licenseConcluded": "BSD-3-Clause OR MIT",
            "licenseDeclared": "BSD-3-Clause OR MIT",
            "name": "github.com/ghodss/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Sam Ghods",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d1ae359905be23e9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ghodss/yaml@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Copyright 2013 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ghodss/yaml@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ghodss/yaml",
            "licenseConcluded": "BSD-3-Clause OR MIT",
            "licenseDeclared": "BSD-3-Clause OR MIT",
            "name": "github.com/ghodss/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Sam Ghods",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e56575eff00a854d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ghodss/yaml@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Copyright 2013 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ghodss/yaml@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ghodss/yaml",
            "licenseConcluded": "BSD-3-Clause OR MIT",
            "licenseDeclared": "BSD-3-Clause OR MIT",
            "name": "github.com/ghodss/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Sam Ghods",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-33859a2705490ff7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/globalsign/mgo@v0.0.0-20181015135952-eeefdecb41b8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mgo (pronounced as \"mango\") offers a rich MongoDB driver for Go.\n\nDetailed documentation of the API is available at GoDoc:\n\nUsage of the driver revolves around the concept of sessions.  To\nget started, obtain a session using the Dial function:\n\nThis will establish one or more connections with the cluster of\nservers defined by the url parameter.  From then on, the cluster\nmay be queried with multiple consistency rules (see SetMode) and\ndocuments retrieved with statements such as:\n\nNew sessions are typically created by calling session.Copy on the\ninitial session obtained at dial time. These new sessions will share\nthe same cluster information and connection pool, and may be easily\nhanded into other methods and functions for organizing logic.\nEvery session created must have its Close method called at the end\nof its life time, so its resources may be put back in the pool or\ncollected, depending on the case.\n\nThere is a sub-package that provides support for BSON, which can be\nused by itself as well:\n\nFor more details, see the documentation for the types and methods.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/globalsign/mgo@0.0.0-20181015135952-eeefdecb41b8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/globalsign/mgo",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/globalsign/mgo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: GlobalSign",
            "versionInfo": "0.0.0-20181015135952-eeefdecb41b8"
        },
        {
            "SPDXID": "SPDXRef-Package-7b97de8bcdcc17d9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/globalsign/mgo@v0.0.0-20181015135952-eeefdecb41b8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mgo (pronounced as \"mango\") offers a rich MongoDB driver for Go.\n\nDetailed documentation of the API is available at GoDoc:\n\nUsage of the driver revolves around the concept of sessions.  To\nget started, obtain a session using the Dial function:\n\nThis will establish one or more connections with the cluster of\nservers defined by the url parameter.  From then on, the cluster\nmay be queried with multiple consistency rules (see SetMode) and\ndocuments retrieved with statements such as:\n\nNew sessions are typically created by calling session.Copy on the\ninitial session obtained at dial time. These new sessions will share\nthe same cluster information and connection pool, and may be easily\nhanded into other methods and functions for organizing logic.\nEvery session created must have its Close method called at the end\nof its life time, so its resources may be put back in the pool or\ncollected, depending on the case.\n\nThere is a sub-package that provides support for BSON, which can be\nused by itself as well:\n\nFor more details, see the documentation for the types and methods.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/globalsign/mgo@0.0.0-20181015135952-eeefdecb41b8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/globalsign/mgo",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/globalsign/mgo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: GlobalSign",
            "versionInfo": "0.0.0-20181015135952-eeefdecb41b8"
        },
        {
            "SPDXID": "SPDXRef-Package-bb678829cfe8124f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/globalsign/mgo@v0.0.0-20181015135952-eeefdecb41b8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mgo (pronounced as \"mango\") offers a rich MongoDB driver for Go.\n\nDetailed documentation of the API is available at GoDoc:\n\nUsage of the driver revolves around the concept of sessions.  To\nget started, obtain a session using the Dial function:\n\nThis will establish one or more connections with the cluster of\nservers defined by the url parameter.  From then on, the cluster\nmay be queried with multiple consistency rules (see SetMode) and\ndocuments retrieved with statements such as:\n\nNew sessions are typically created by calling session.Copy on the\ninitial session obtained at dial time. These new sessions will share\nthe same cluster information and connection pool, and may be easily\nhanded into other methods and functions for organizing logic.\nEvery session created must have its Close method called at the end\nof its life time, so its resources may be put back in the pool or\ncollected, depending on the case.\n\nThere is a sub-package that provides support for BSON, which can be\nused by itself as well:\n\nFor more details, see the documentation for the types and methods.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/globalsign/mgo@0.0.0-20181015135952-eeefdecb41b8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/globalsign/mgo",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/globalsign/mgo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: GlobalSign",
            "versionInfo": "0.0.0-20181015135952-eeefdecb41b8"
        },
        {
            "SPDXID": "SPDXRef-Package-b527f8094b4862cd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-chi/chi/v5@v5.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package chi is a small, idiomatic and composable router for building HTTP services.\n\nchi requires Go 1.14 or newer.\n\nExample:\n\nSee github.com/go-chi/chi/_examples/ for more in-depth examples.\n\nURL patterns allow for easy matching of path components in HTTP\nrequests. The matching components can then be accessed using\nchi.URLParam(). All patterns must begin with a slash.\n\nA simple named placeholder {name} matches any sequence of characters\nup to the next / or the end of the URL. Trailing slashes on paths must\nbe handled explicitly.\n\nA placeholder with a name followed by a colon allows a regular\nexpression match, for example {number:\\\\d+}. The regular expression\nsyntax is Go's normal regexp RE2 syntax, except that regular expressions\nincluding { or } are not supported, and / will never be\nmatched. An anonymous regexp pattern is allowed, using an empty string\nbefore the colon in the placeholder, such as {:\\\\d+}\n\nThe special placeholder of asterisk matches the rest of the requested\nURL. Any trailing characters in the pattern are ignored. This is the only\nplaceholder which will match / characters.\n\nExamples:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-chi/chi/v5@5.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-chi/chi",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-chi/chi/v5",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: go-chi",
            "versionInfo": "5.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2d0870c32edaf3fd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-errors/errors@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides errors that have stack-traces.\n\nThis is particularly useful when you want to understand the\nstate of execution when an error was returned unexpectedly.\n\nIt provides the type *Error which implements the standard\ngolang error interface, so you can use this library interchangably\nwith code that is expecting a normal error return.\n\nFor example:\n\nThis can be called as follows:\n\nThis package was original written to allow reporting to Bugsnag,\nbut after I found similar packages by Facebook and Dropbox, it\nwas moved to one canonical location so everyone can benefit.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-errors/errors@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-errors/errors",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-errors/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: go-errors",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d3b3c1bca5e85619",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-gorp/gorp/v3@v3.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gorp provides a simple way to marshal Go structs to and from\nSQL databases.  It uses the database/sql package, and should work with any\ncompliant database/sql driver.\n\nSource code and project home:\nhttps://github.com/go-gorp/gorp",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-gorp/gorp/v3@3.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-gorp/gorp",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-gorp/gorp/v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: go-gorp",
            "versionInfo": "3.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-4282fca56cc78921",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-kit/kit@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-kit/kit@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-kit/kit",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-kit/kit",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Go kit",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bdf8e0529fa3bc0c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-kit/kit@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-kit/kit@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-kit/kit",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-kit/kit",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Go kit",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c3c78b0a3a41d007",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-kit/kit@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-kit/kit@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-kit/kit",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-kit/kit",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Go kit",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f0ee20b11a2933eb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-kit/kit@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-kit/kit@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-kit/kit",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-kit/kit",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Go kit",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f43a8cf78b8325d3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-kit/kit@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-kit/kit@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-kit/kit",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-kit/kit",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Go kit",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-350982163b417d88",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logfmt/logfmt@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logfmt implements utilities to marshal and unmarshal data in the\nlogfmt format. The logfmt format records key/value pairs in a way that\nbalances readability for humans and simplicity of computer parsing. It is\nmost commonly used as a more human friendly alternative to JSON for\nstructured logging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logfmt/logfmt@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logfmt/logfmt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-logfmt/logfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-672f50ff2bc2f005",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logfmt/logfmt@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logfmt implements utilities to marshal and unmarshal data in the\nlogfmt format. The logfmt format records key/value pairs in a way that\nbalances readability for humans and simplicity of computer parsing. It is\nmost commonly used as a more human friendly alternative to JSON for\nstructured logging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logfmt/logfmt@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logfmt/logfmt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-logfmt/logfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6de400e79a6793bd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logfmt/logfmt@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logfmt implements utilities to marshal and unmarshal data in the\nlogfmt format. The logfmt format records key/value pairs in a way that\nbalances readability for humans and simplicity of computer parsing. It is\nmost commonly used as a more human friendly alternative to JSON for\nstructured logging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logfmt/logfmt@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logfmt/logfmt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-logfmt/logfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a42eeee628be3c00",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logfmt/logfmt@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logfmt implements utilities to marshal and unmarshal data in the\nlogfmt format. The logfmt format records key/value pairs in a way that\nbalances readability for humans and simplicity of computer parsing. It is\nmost commonly used as a more human friendly alternative to JSON for\nstructured logging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logfmt/logfmt@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logfmt/logfmt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-logfmt/logfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a6b3a8d2ff9261fe",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logfmt/logfmt@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logfmt implements utilities to marshal and unmarshal data in the\nlogfmt format. The logfmt format records key/value pairs in a way that\nbalances readability for humans and simplicity of computer parsing. It is\nmost commonly used as a more human friendly alternative to JSON for\nstructured logging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logfmt/logfmt@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logfmt/logfmt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-logfmt/logfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-35522319ca01e2de",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v1.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@1.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "1.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-4374d5b17f0b863a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v1.2.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@1.2.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "1.2.4"
        },
        {
            "SPDXID": "SPDXRef-Package-5d2b7828f9ddc4e5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-743d731e7145fe50",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-91cbb22bb070ce43",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v1.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@1.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "1.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-a84d723cc820d1e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v1.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@1.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "1.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-cfa2111e2189e0f0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v1.2.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@1.2.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "1.2.4"
        },
        {
            "SPDXID": "SPDXRef-Package-dd4b8ae26f37652b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v1.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@1.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "1.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-fe0589d25b056d4b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-334366633337afad",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/stdr@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stdr implements github.com/go-logr/logr.Logger in terms of\nGo's standard log package.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/stdr@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/stdr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/stdr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-5cdbde5951bae55c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/stdr@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stdr implements github.com/go-logr/logr.Logger in terms of\nGo's standard log package.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/stdr@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/stdr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/stdr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-94883f76fdecdcf6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/stdr@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stdr implements github.com/go-logr/logr.Logger in terms of\nGo's standard log package.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/stdr@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/stdr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/stdr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-7c7d3efcaa3ab067",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/zapr@v1.2.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zapr defines an implementation of the github.com/go-logr/logr\ninterfaces built on top of Zap (go.uber.org/zap).\n\nA new logr.Logger can be constructed from an existing zap.Logger using\nthe NewLogger function:\n\nFor the most part, concepts in Zap correspond directly with those in\nlogr.\n\nUnlike Zap, all fields *must* be in the form of sugared fields --\nit's illegal to pass a strongly-typed Zap field in a key position\nto any of the log methods.\n\nLevels in logr correspond to custom debug levels in Zap.  Any given level\nin logr is represents by its inverse in zap (`zapLevel = -1*logrLevel`).\nFor example V(2) is equivalent to log level -2 in Zap, while V(1) is\nequivalent to Zap's DebugLevel.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/zapr@1.2.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/zapr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/zapr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.4"
        },
        {
            "SPDXID": "SPDXRef-Package-d424ef0e9f162055",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/zapr@v1.2.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zapr defines an implementation of the github.com/go-logr/logr\ninterfaces built on top of Zap (go.uber.org/zap).\n\nA new logr.Logger can be constructed from an existing zap.Logger using\nthe NewLogger function:\n\nFor the most part, concepts in Zap correspond directly with those in\nlogr.\n\nUnlike Zap, all fields *must* be in the form of sugared fields --\nit's illegal to pass a strongly-typed Zap field in a key position\nto any of the log methods.\n\nLevels in logr correspond to custom debug levels in Zap.  Any given level\nin logr is represents by its inverse in zap (`zapLevel = -1*logrLevel`).\nFor example V(2) is equivalent to log level -2 in Zap, while V(1) is\nequivalent to Zap's DebugLevel.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/zapr@1.2.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/zapr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/zapr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.4"
        },
        {
            "SPDXID": "SPDXRef-Package-30821681320076b7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/analysis@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package analysis provides methods to work with a Swagger specification document from\npackage go-openapi/spec.\n\n## Analyzing a specification\n\nAn analysed specification object (type Spec) provides methods to work with swagger definition.\n\n## Flattening or expanding a specification\n\nFlattening a specification bundles all remote $ref in the main spec document.\nDepending on flattening options, additional preprocessing may take place:\n\n## Merging several specifications\n\nMixin several specifications merges all Swagger constructs, and warns about found conflicts.\n\n## Fixing a specification\n\nUnmarshalling a specification with golang json unmarshalling may lead to\nsome unwanted result on present but empty fields.\n\n## Analyzing a Swagger schema\n\nSwagger schemas are analyzed to determine their complexity and qualify their content.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/analysis@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/analysis",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/analysis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-42610bf63142b0c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/analysis@v0.21.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package analysis provides methods to work with a Swagger specification document from\npackage go-openapi/spec.\n\n## Analyzing a specification\n\nAn analysed specification object (type Spec) provides methods to work with swagger definition.\n\n## Flattening or expanding a specification\n\nFlattening a specification bundles all remote $ref in the main spec document.\nDepending on flattening options, additional preprocessing may take place:\n\n## Merging several specifications\n\nMixin several specifications merges all Swagger constructs, and warns about found conflicts.\n\n## Fixing a specification\n\nUnmarshalling a specification with golang json unmarshalling may lead to\nsome unwanted result on present but empty fields.\n\n## Analyzing a Swagger schema\n\nSwagger schemas are analyzed to determine their complexity and qualify their content.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/analysis@0.21.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/analysis",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/analysis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.21.4"
        },
        {
            "SPDXID": "SPDXRef-Package-4438b4739d0e2374",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/analysis@v0.21.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package analysis provides methods to work with a Swagger specification document from\npackage go-openapi/spec.\n\n## Analyzing a specification\n\nAn analysed specification object (type Spec) provides methods to work with swagger definition.\n\n## Flattening or expanding a specification\n\nFlattening a specification bundles all remote $ref in the main spec document.\nDepending on flattening options, additional preprocessing may take place:\n\n## Merging several specifications\n\nMixin several specifications merges all Swagger constructs, and warns about found conflicts.\n\n## Fixing a specification\n\nUnmarshalling a specification with golang json unmarshalling may lead to\nsome unwanted result on present but empty fields.\n\n## Analyzing a Swagger schema\n\nSwagger schemas are analyzed to determine their complexity and qualify their content.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/analysis@0.21.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/analysis",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/analysis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.21.4"
        },
        {
            "SPDXID": "SPDXRef-Package-4e2a7336d26bc910",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/analysis@v0.21.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package analysis provides methods to work with a Swagger specification document from\npackage go-openapi/spec.\n\n## Analyzing a specification\n\nAn analysed specification object (type Spec) provides methods to work with swagger definition.\n\n## Flattening or expanding a specification\n\nFlattening a specification bundles all remote $ref in the main spec document.\nDepending on flattening options, additional preprocessing may take place:\n\n## Merging several specifications\n\nMixin several specifications merges all Swagger constructs, and warns about found conflicts.\n\n## Fixing a specification\n\nUnmarshalling a specification with golang json unmarshalling may lead to\nsome unwanted result on present but empty fields.\n\n## Analyzing a Swagger schema\n\nSwagger schemas are analyzed to determine their complexity and qualify their content.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/analysis@0.21.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/analysis",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/analysis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.21.4"
        },
        {
            "SPDXID": "SPDXRef-Package-51304ae6f867b5ea",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/analysis@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package analysis provides methods to work with a Swagger specification document from\npackage go-openapi/spec.\n\n## Analyzing a specification\n\nAn analysed specification object (type Spec) provides methods to work with swagger definition.\n\n## Flattening or expanding a specification\n\nFlattening a specification bundles all remote $ref in the main spec document.\nDepending on flattening options, additional preprocessing may take place:\n\n## Merging several specifications\n\nMixin several specifications merges all Swagger constructs, and warns about found conflicts.\n\n## Fixing a specification\n\nUnmarshalling a specification with golang json unmarshalling may lead to\nsome unwanted result on present but empty fields.\n\n## Analyzing a Swagger schema\n\nSwagger schemas are analyzed to determine their complexity and qualify their content.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/analysis@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/analysis",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/analysis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-5c6275b8c97e4b9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/analysis@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package analysis provides methods to work with a Swagger specification document from\npackage go-openapi/spec.\n\n## Analyzing a specification\n\nAn analysed specification object (type Spec) provides methods to work with swagger definition.\n\n## Flattening or expanding a specification\n\nFlattening a specification bundles all remote $ref in the main spec document.\nDepending on flattening options, additional preprocessing may take place:\n\n## Merging several specifications\n\nMixin several specifications merges all Swagger constructs, and warns about found conflicts.\n\n## Fixing a specification\n\nUnmarshalling a specification with golang json unmarshalling may lead to\nsome unwanted result on present but empty fields.\n\n## Analyzing a Swagger schema\n\nSwagger schemas are analyzed to determine their complexity and qualify their content.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/analysis@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/analysis",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/analysis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-5de5b704e10d01af",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/analysis@v0.21.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package analysis provides methods to work with a Swagger specification document from\npackage go-openapi/spec.\n\n## Analyzing a specification\n\nAn analysed specification object (type Spec) provides methods to work with swagger definition.\n\n## Flattening or expanding a specification\n\nFlattening a specification bundles all remote $ref in the main spec document.\nDepending on flattening options, additional preprocessing may take place:\n\n## Merging several specifications\n\nMixin several specifications merges all Swagger constructs, and warns about found conflicts.\n\n## Fixing a specification\n\nUnmarshalling a specification with golang json unmarshalling may lead to\nsome unwanted result on present but empty fields.\n\n## Analyzing a Swagger schema\n\nSwagger schemas are analyzed to determine their complexity and qualify their content.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/analysis@0.21.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/analysis",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/analysis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.21.2"
        },
        {
            "SPDXID": "SPDXRef-Package-6da851682ee0d7aa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/analysis@v0.19.16"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package analysis provides methods to work with a Swagger specification document from\npackage go-openapi/spec.\n\n## Analyzing a specification\n\nAn analysed specification object (type Spec) provides methods to work with swagger definition.\n\n## Flattening or expanding a specification\n\nFlattening a specification bundles all remote $ref in the main spec document.\nDepending on flattening options, additional preprocessing may take place:\n\n## Merging several specifications\n\nMixin several specifications merges all Swagger constructs, and warns about found conflicts.\n\n## Fixing a specification\n\nUnmarshalling a specification with golang json unmarshalling may lead to\nsome unwanted result on present but empty fields.\n\n## Analyzing a Swagger schema\n\nSwagger schemas are analyzed to determine their complexity and qualify their content.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/analysis@0.19.16",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/analysis",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/analysis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.16"
        },
        {
            "SPDXID": "SPDXRef-Package-76fa9ba59feb2708",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/analysis@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package analysis provides methods to work with a Swagger specification document from\npackage go-openapi/spec.\n\n## Analyzing a specification\n\nAn analysed specification object (type Spec) provides methods to work with swagger definition.\n\n## Flattening or expanding a specification\n\nFlattening a specification bundles all remote $ref in the main spec document.\nDepending on flattening options, additional preprocessing may take place:\n\n## Merging several specifications\n\nMixin several specifications merges all Swagger constructs, and warns about found conflicts.\n\n## Fixing a specification\n\nUnmarshalling a specification with golang json unmarshalling may lead to\nsome unwanted result on present but empty fields.\n\n## Analyzing a Swagger schema\n\nSwagger schemas are analyzed to determine their complexity and qualify their content.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/analysis@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/analysis",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/analysis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-a5a7f1257d1f52d4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/analysis@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package analysis provides methods to work with a Swagger specification document from\npackage go-openapi/spec.\n\n## Analyzing a specification\n\nAn analysed specification object (type Spec) provides methods to work with swagger definition.\n\n## Flattening or expanding a specification\n\nFlattening a specification bundles all remote $ref in the main spec document.\nDepending on flattening options, additional preprocessing may take place:\n\n## Merging several specifications\n\nMixin several specifications merges all Swagger constructs, and warns about found conflicts.\n\n## Fixing a specification\n\nUnmarshalling a specification with golang json unmarshalling may lead to\nsome unwanted result on present but empty fields.\n\n## Analyzing a Swagger schema\n\nSwagger schemas are analyzed to determine their complexity and qualify their content.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/analysis@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/analysis",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/analysis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-adeaa40642371a95",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/analysis@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package analysis provides methods to work with a Swagger specification document from\npackage go-openapi/spec.\n\n## Analyzing a specification\n\nAn analysed specification object (type Spec) provides methods to work with swagger definition.\n\n## Flattening or expanding a specification\n\nFlattening a specification bundles all remote $ref in the main spec document.\nDepending on flattening options, additional preprocessing may take place:\n\n## Merging several specifications\n\nMixin several specifications merges all Swagger constructs, and warns about found conflicts.\n\n## Fixing a specification\n\nUnmarshalling a specification with golang json unmarshalling may lead to\nsome unwanted result on present but empty fields.\n\n## Analyzing a Swagger schema\n\nSwagger schemas are analyzed to determine their complexity and qualify their content.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/analysis@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/analysis",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/analysis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-165c5489856ba285",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/errors@v0.19.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides an Error interface and several concrete types\nimplementing this interface to manage API errors and JSON-schema validation\nerrors.\n\nA middleware handler ServeError() is provided to serve the errors types\nit defines.\n\nIt is used throughout the various go-openapi toolkit libraries\n(https://github.com/go-openapi).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/errors@0.19.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/errors",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.2"
        },
        {
            "SPDXID": "SPDXRef-Package-2975033999b77ec6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/errors@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides an Error interface and several concrete types\nimplementing this interface to manage API errors and JSON-schema validation\nerrors.\n\nA middleware handler ServeError() is provided to serve the errors types\nit defines.\n\nIt is used throughout the various go-openapi toolkit libraries\n(https://github.com/go-openapi).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/errors@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/errors",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-61cea185a8782bd6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/errors@v0.19.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides an Error interface and several concrete types\nimplementing this interface to manage API errors and JSON-schema validation\nerrors.\n\nA middleware handler ServeError() is provided to serve the errors types\nit defines.\n\nIt is used throughout the various go-openapi toolkit libraries\n(https://github.com/go-openapi).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/errors@0.19.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/errors",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.9"
        },
        {
            "SPDXID": "SPDXRef-Package-6d9f561a88352073",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/errors@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides an Error interface and several concrete types\nimplementing this interface to manage API errors and JSON-schema validation\nerrors.\n\nA middleware handler ServeError() is provided to serve the errors types\nit defines.\n\nIt is used throughout the various go-openapi toolkit libraries\n(https://github.com/go-openapi).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/errors@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/errors",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-9461cee19ce0122c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/errors@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides an Error interface and several concrete types\nimplementing this interface to manage API errors and JSON-schema validation\nerrors.\n\nA middleware handler ServeError() is provided to serve the errors types\nit defines.\n\nIt is used throughout the various go-openapi toolkit libraries\n(https://github.com/go-openapi).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/errors@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/errors",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-a7efd0d86405da58",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/errors@v0.20.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides an Error interface and several concrete types\nimplementing this interface to manage API errors and JSON-schema validation\nerrors.\n\nA middleware handler ServeError() is provided to serve the errors types\nit defines.\n\nIt is used throughout the various go-openapi toolkit libraries\n(https://github.com/go-openapi).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/errors@0.20.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/errors",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.20.3"
        },
        {
            "SPDXID": "SPDXRef-Package-ac51b3e99d4ecc51",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/errors@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides an Error interface and several concrete types\nimplementing this interface to manage API errors and JSON-schema validation\nerrors.\n\nA middleware handler ServeError() is provided to serve the errors types\nit defines.\n\nIt is used throughout the various go-openapi toolkit libraries\n(https://github.com/go-openapi).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/errors@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/errors",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-b11d3a56ee1444fb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/errors@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides an Error interface and several concrete types\nimplementing this interface to manage API errors and JSON-schema validation\nerrors.\n\nA middleware handler ServeError() is provided to serve the errors types\nit defines.\n\nIt is used throughout the various go-openapi toolkit libraries\n(https://github.com/go-openapi).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/errors@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/errors",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-bf955d1890220224",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/errors@v0.20.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides an Error interface and several concrete types\nimplementing this interface to manage API errors and JSON-schema validation\nerrors.\n\nA middleware handler ServeError() is provided to serve the errors types\nit defines.\n\nIt is used throughout the various go-openapi toolkit libraries\n(https://github.com/go-openapi).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/errors@0.20.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/errors",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.20.2"
        },
        {
            "SPDXID": "SPDXRef-Package-cc13544dc261a8a3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/errors@v0.20.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides an Error interface and several concrete types\nimplementing this interface to manage API errors and JSON-schema validation\nerrors.\n\nA middleware handler ServeError() is provided to serve the errors types\nit defines.\n\nIt is used throughout the various go-openapi toolkit libraries\n(https://github.com/go-openapi).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/errors@0.20.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/errors",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.20.3"
        },
        {
            "SPDXID": "SPDXRef-Package-e15839c66a98ca1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/errors@v0.20.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides an Error interface and several concrete types\nimplementing this interface to manage API errors and JSON-schema validation\nerrors.\n\nA middleware handler ServeError() is provided to serve the errors types\nit defines.\n\nIt is used throughout the various go-openapi toolkit libraries\n(https://github.com/go-openapi).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/errors@0.20.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/errors",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.20.3"
        },
        {
            "SPDXID": "SPDXRef-Package-207782cc50b8f05d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-297f6dacf966bd11",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-46761096dee1c4dc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-47de24b6558d1bb0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-52e08bcbfe37a355",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-585f253d1f72c9e6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-7690e728419a2c4d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-77313b4859fab179",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-805603c0abec6a41",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-8ac705e984f3c476",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-ab0bc4ff29ac5f5b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-db546db0cdf9729f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.6"
        },
        {
            "SPDXID": "SPDXRef-Package-e0619880b0022f50",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-f5a1dc90d1035610",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.6"
        },
        {
            "SPDXID": "SPDXRef-Package-1817710911dbf24",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-337efad3edf3154b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-4bdea8f12b83e5c8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.20.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.20.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.20.0"
        },
        {
            "SPDXID": "SPDXRef-Package-51ea420f72cf8048",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-5dff78bfff72b941",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.20.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.20.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.20.1"
        },
        {
            "SPDXID": "SPDXRef-Package-7cca417f9240482b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.19.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.19.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.2"
        },
        {
            "SPDXID": "SPDXRef-Package-7e011cd43ce0bc97",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-c463418a28d9af1c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.20.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.20.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.20.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d493d4faa5ac2f36",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-eb81ccf77096c05e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.20.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.20.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.20.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f1eae12bf3bf7611",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.20.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.20.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.20.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fba955e1db6996f6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.20.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.20.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.20.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fe984c853a1aed01",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-2b6be18008a02b05",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/loads@v0.21.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package loads provides document loading methods for swagger (OAI) specifications.\n\nIt is used by other go-openapi packages to load and run analysis on local or remote spec documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/loads@0.21.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/loads",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/loads",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.21.2"
        },
        {
            "SPDXID": "SPDXRef-Package-54dbad95fe3be981",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/loads@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package loads provides document loading methods for swagger (OAI) specifications.\n\nIt is used by other go-openapi packages to load and run analysis on local or remote spec documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/loads@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/loads",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/loads",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-6f42986c5a8f3585",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/loads@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package loads provides document loading methods for swagger (OAI) specifications.\n\nIt is used by other go-openapi packages to load and run analysis on local or remote spec documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/loads@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/loads",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/loads",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-845898ecda4ae3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/loads@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package loads provides document loading methods for swagger (OAI) specifications.\n\nIt is used by other go-openapi packages to load and run analysis on local or remote spec documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/loads@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/loads",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/loads",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-8aef1338d20743a5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/loads@v0.21.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package loads provides document loading methods for swagger (OAI) specifications.\n\nIt is used by other go-openapi packages to load and run analysis on local or remote spec documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/loads@0.21.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/loads",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/loads",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.21.1"
        },
        {
            "SPDXID": "SPDXRef-Package-908d8b7266eab875",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/loads@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package loads provides document loading methods for swagger (OAI) specifications.\n\nIt is used by other go-openapi packages to load and run analysis on local or remote spec documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/loads@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/loads",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/loads",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-991810d879a33d0b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/loads@v0.21.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package loads provides document loading methods for swagger (OAI) specifications.\n\nIt is used by other go-openapi packages to load and run analysis on local or remote spec documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/loads@0.21.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/loads",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/loads",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.21.2"
        },
        {
            "SPDXID": "SPDXRef-Package-99bb31acbc325cc3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/loads@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package loads provides document loading methods for swagger (OAI) specifications.\n\nIt is used by other go-openapi packages to load and run analysis on local or remote spec documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/loads@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/loads",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/loads",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-9d257bb0fc5bf1e3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/loads@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package loads provides document loading methods for swagger (OAI) specifications.\n\nIt is used by other go-openapi packages to load and run analysis on local or remote spec documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/loads@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/loads",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/loads",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-b34273c81051a76e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/loads@v0.21.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package loads provides document loading methods for swagger (OAI) specifications.\n\nIt is used by other go-openapi packages to load and run analysis on local or remote spec documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/loads@0.21.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/loads",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/loads",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.21.2"
        },
        {
            "SPDXID": "SPDXRef-Package-bebda71a79cac6bf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/loads@v0.19.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package loads provides document loading methods for swagger (OAI) specifications.\n\nIt is used by other go-openapi packages to load and run analysis on local or remote spec documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/loads@0.19.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/loads",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/loads",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.7"
        },
        {
            "SPDXID": "SPDXRef-Package-58a653298a2d86db",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/runtime@v0.19.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/runtime@0.19.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.7"
        },
        {
            "SPDXID": "SPDXRef-Package-5a09ea6369265274",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/runtime@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/runtime@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-70693c54e896d94",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/runtime@v0.19.29"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/runtime@0.19.29",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.29"
        },
        {
            "SPDXID": "SPDXRef-Package-881d35dc6a8519ec",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/runtime@v0.26.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/runtime@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9bde199bbe443e63",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/runtime@v0.24.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/runtime@0.24.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.24.1"
        },
        {
            "SPDXID": "SPDXRef-Package-be83c5ee1291ad89",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/runtime@v0.19.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/runtime@0.19.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.7"
        },
        {
            "SPDXID": "SPDXRef-Package-c267f7f631e508cd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/runtime@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/runtime@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-d05e7150150e798d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/runtime@v0.26.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/runtime@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d2349cb6ef07ac76",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/runtime@v0.26.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/runtime@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d9a774bf7ba4db93",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/runtime@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/runtime@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-e5eeadb12d8c3ccc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/runtime@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/runtime@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-3d14ed732480723d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/spec@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/spec@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-4969d2dd9b0efe3d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/spec@v0.20.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/spec@0.20.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.20.9"
        },
        {
            "SPDXID": "SPDXRef-Package-68f5fd0d097609c6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/spec@v0.19.15"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/spec@0.19.15",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.15"
        },
        {
            "SPDXID": "SPDXRef-Package-6d7e37ede9e8e7f5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/spec@v0.20.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/spec@0.20.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.20.9"
        },
        {
            "SPDXID": "SPDXRef-Package-7b8f5c899081cb44",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/spec@v0.20.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/spec@0.20.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.20.9"
        },
        {
            "SPDXID": "SPDXRef-Package-a1c8eda1e7454de4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/spec@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/spec@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-ac53a9b260625afd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/spec@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/spec@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-bf44fc38d5a9af2d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/spec@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/spec@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-c0a8e0710dade31",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/spec@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/spec@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-d4752f1f6e966df1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/spec@v0.20.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/spec@0.20.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.20.6"
        },
        {
            "SPDXID": "SPDXRef-Package-eab1d3093470480c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/spec@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/spec@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: OpenAPI Initiative golang toolkit",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-2fde3e43fc31bb50",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/strfmt@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package strfmt contains custom string formats\n\nTODO: add info on how to define and register a custom format",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/strfmt@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/strfmt",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/strfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-8952c2ed8d836ae8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/strfmt@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package strfmt contains custom string formats\n\nTODO: add info on how to define and register a custom format",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/strfmt@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/strfmt",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/strfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-9eff79484740115d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/strfmt@v0.21.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package strfmt contains custom string formats\n\nTODO: add info on how to define and register a custom format",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/strfmt@0.21.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/strfmt",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/strfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.21.7"
        },
        {
            "SPDXID": "SPDXRef-Package-ba7b993169d8c3be",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/strfmt@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package strfmt contains custom string formats\n\nTODO: add info on how to define and register a custom format",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/strfmt@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/strfmt",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/strfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-c37f0d9681ee3451",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/strfmt@v0.21.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package strfmt contains custom string formats\n\nTODO: add info on how to define and register a custom format",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/strfmt@0.21.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/strfmt",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/strfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.21.7"
        },
        {
            "SPDXID": "SPDXRef-Package-d657de484e414c2e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/strfmt@v0.19.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package strfmt contains custom string formats\n\nTODO: add info on how to define and register a custom format",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/strfmt@0.19.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/strfmt",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/strfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.3"
        },
        {
            "SPDXID": "SPDXRef-Package-e72cc8abd49613e4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/strfmt@v0.21.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package strfmt contains custom string formats\n\nTODO: add info on how to define and register a custom format",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/strfmt@0.21.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/strfmt",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/strfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.21.7"
        },
        {
            "SPDXID": "SPDXRef-Package-f030f9c74cfb9c33",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/strfmt@v0.21.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package strfmt contains custom string formats\n\nTODO: add info on how to define and register a custom format",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/strfmt@0.21.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/strfmt",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/strfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.21.2"
        },
        {
            "SPDXID": "SPDXRef-Package-f157c6091ab2dedc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/strfmt@v0.19.11"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package strfmt contains custom string formats\n\nTODO: add info on how to define and register a custom format",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/strfmt@0.19.11",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/strfmt",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/strfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.11"
        },
        {
            "SPDXID": "SPDXRef-Package-f362ec88e17606b9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/strfmt@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package strfmt contains custom string formats\n\nTODO: add info on how to define and register a custom format",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/strfmt@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/strfmt",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/strfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-fd6ad130a2e631d7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/strfmt@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package strfmt contains custom string formats\n\nTODO: add info on how to define and register a custom format",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/strfmt@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/strfmt",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/strfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-1ec9c069f9adb42c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.19.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.19.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.7"
        },
        {
            "SPDXID": "SPDXRef-Package-367c399f8f58c8fb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.19.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.19.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.7"
        },
        {
            "SPDXID": "SPDXRef-Package-371696d84416131d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-8ac5c4cd284990a9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.19.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.19.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.7"
        },
        {
            "SPDXID": "SPDXRef-Package-8b66594048dc1153",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.22.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.22.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.22.3"
        },
        {
            "SPDXID": "SPDXRef-Package-8b777f7472220809",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.19.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.19.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.7"
        },
        {
            "SPDXID": "SPDXRef-Package-8be68391adada0f4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.22.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.22.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.22.3"
        },
        {
            "SPDXID": "SPDXRef-Package-92876bb529a51353",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.22.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.22.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.22.3"
        },
        {
            "SPDXID": "SPDXRef-Package-95694d87eb7838f0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.19.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-956c97dd875f4ee5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.19.12"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.19.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.12"
        },
        {
            "SPDXID": "SPDXRef-Package-96f2edd25b3b3a85",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.22.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.22.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.22.3"
        },
        {
            "SPDXID": "SPDXRef-Package-b88db899f65202f6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.19.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.19.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.7"
        },
        {
            "SPDXID": "SPDXRef-Package-b8a9918e03efce39",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.21.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.21.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.21.1"
        },
        {
            "SPDXID": "SPDXRef-Package-cd3cc66211f303af",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.22.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.22.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.22.3"
        },
        {
            "SPDXID": "SPDXRef-Package-1c8fc9d601a70863",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/validate@v0.22.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validate provides methods to validate a swagger specification,\nas well as tools to validate data against their schema.\n\nThis package follows Swagger 2.0. specification (aka OpenAPI 2.0). Reference\ncan be found here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md.\n\nValidates a spec document (from JSON or YAML) against the JSON schema for swagger,\nthen checks a number of extra rules that can't be expressed in JSON schema.\n\nEntry points:\n\nReported as errors:\n\nReported as warnings:\n\nThe schema validation toolkit validates data against JSON-schema-draft 04 schema.\n\nIt is tested against the full json-schema-testing-suite (https://github.com/json-schema-org/JSON-Schema-Test-Suite),\nexcept for the optional part (bignum, ECMA regexp, ...).\n\nIt supports the complete JSON-schema vocabulary, including keywords not supported by Swagger (e.g. additionalItems, ...)\n\nEntry points:\n\nWith the current version of this package, the following aspects of swagger are not yet supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/validate@0.22.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/validate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/validate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.22.0"
        },
        {
            "SPDXID": "SPDXRef-Package-23d60c2cddc6ae72",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/validate@v0.19.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validate provides methods to validate a swagger specification,\nas well as tools to validate data against their schema.\n\nThis package follows Swagger 2.0. specification (aka OpenAPI 2.0). Reference\ncan be found here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md.\n\nValidates a spec document (from JSON or YAML) against the JSON schema for swagger,\nthen checks a number of extra rules that can't be expressed in JSON schema.\n\nEntry points:\n\nReported as errors:\n\nReported as warnings:\n\nThe schema validation toolkit validates data against JSON-schema-draft 04 schema.\n\nIt is tested against the full json-schema-testing-suite (https://github.com/json-schema-org/JSON-Schema-Test-Suite),\nexcept for the optional part (bignum, ECMA regexp, ...).\n\nIt supports the complete JSON-schema vocabulary, including keywords not supported by Swagger (e.g. additionalItems, ...)\n\nEntry points:\n\nWith the current version of this package, the following aspects of swagger are not yet supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/validate@0.19.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/validate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/validate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.6"
        },
        {
            "SPDXID": "SPDXRef-Package-332a03daf21ba034",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/validate@v0.19.15"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validate provides methods to validate a swagger specification,\nas well as tools to validate data against their schema.\n\nThis package follows Swagger 2.0. specification (aka OpenAPI 2.0). Reference\ncan be found here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md.\n\nValidates a spec document (from JSON or YAML) against the JSON schema for swagger,\nthen checks a number of extra rules that can't be expressed in JSON schema.\n\nEntry points:\n\nReported as errors:\n\nReported as warnings:\n\nThe schema validation toolkit validates data against JSON-schema-draft 04 schema.\n\nIt is tested against the full json-schema-testing-suite (https://github.com/json-schema-org/JSON-Schema-Test-Suite),\nexcept for the optional part (bignum, ECMA regexp, ...).\n\nIt supports the complete JSON-schema vocabulary, including keywords not supported by Swagger (e.g. additionalItems, ...)\n\nEntry points:\n\nWith the current version of this package, the following aspects of swagger are not yet supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/validate@0.19.15",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/validate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/validate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.15"
        },
        {
            "SPDXID": "SPDXRef-Package-33587ea1ed55314b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/validate@v0.19.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validate provides methods to validate a swagger specification,\nas well as tools to validate data against their schema.\n\nThis package follows Swagger 2.0. specification (aka OpenAPI 2.0). Reference\ncan be found here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md.\n\nValidates a spec document (from JSON or YAML) against the JSON schema for swagger,\nthen checks a number of extra rules that can't be expressed in JSON schema.\n\nEntry points:\n\nReported as errors:\n\nReported as warnings:\n\nThe schema validation toolkit validates data against JSON-schema-draft 04 schema.\n\nIt is tested against the full json-schema-testing-suite (https://github.com/json-schema-org/JSON-Schema-Test-Suite),\nexcept for the optional part (bignum, ECMA regexp, ...).\n\nIt supports the complete JSON-schema vocabulary, including keywords not supported by Swagger (e.g. additionalItems, ...)\n\nEntry points:\n\nWith the current version of this package, the following aspects of swagger are not yet supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/validate@0.19.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/validate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/validate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.6"
        },
        {
            "SPDXID": "SPDXRef-Package-386a6cbc3cea2559",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/validate@v0.19.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validate provides methods to validate a swagger specification,\nas well as tools to validate data against their schema.\n\nThis package follows Swagger 2.0. specification (aka OpenAPI 2.0). Reference\ncan be found here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md.\n\nValidates a spec document (from JSON or YAML) against the JSON schema for swagger,\nthen checks a number of extra rules that can't be expressed in JSON schema.\n\nEntry points:\n\nReported as errors:\n\nReported as warnings:\n\nThe schema validation toolkit validates data against JSON-schema-draft 04 schema.\n\nIt is tested against the full json-schema-testing-suite (https://github.com/json-schema-org/JSON-Schema-Test-Suite),\nexcept for the optional part (bignum, ECMA regexp, ...).\n\nIt supports the complete JSON-schema vocabulary, including keywords not supported by Swagger (e.g. additionalItems, ...)\n\nEntry points:\n\nWith the current version of this package, the following aspects of swagger are not yet supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/validate@0.19.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/validate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/validate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.4"
        },
        {
            "SPDXID": "SPDXRef-Package-7bfcce27ec707790",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/validate@v0.19.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validate provides methods to validate a swagger specification,\nas well as tools to validate data against their schema.\n\nThis package follows Swagger 2.0. specification (aka OpenAPI 2.0). Reference\ncan be found here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md.\n\nValidates a spec document (from JSON or YAML) against the JSON schema for swagger,\nthen checks a number of extra rules that can't be expressed in JSON schema.\n\nEntry points:\n\nReported as errors:\n\nReported as warnings:\n\nThe schema validation toolkit validates data against JSON-schema-draft 04 schema.\n\nIt is tested against the full json-schema-testing-suite (https://github.com/json-schema-org/JSON-Schema-Test-Suite),\nexcept for the optional part (bignum, ECMA regexp, ...).\n\nIt supports the complete JSON-schema vocabulary, including keywords not supported by Swagger (e.g. additionalItems, ...)\n\nEntry points:\n\nWith the current version of this package, the following aspects of swagger are not yet supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/validate@0.19.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/validate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/validate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.6"
        },
        {
            "SPDXID": "SPDXRef-Package-9de21d933432070b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/validate@v0.19.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validate provides methods to validate a swagger specification,\nas well as tools to validate data against their schema.\n\nThis package follows Swagger 2.0. specification (aka OpenAPI 2.0). Reference\ncan be found here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md.\n\nValidates a spec document (from JSON or YAML) against the JSON schema for swagger,\nthen checks a number of extra rules that can't be expressed in JSON schema.\n\nEntry points:\n\nReported as errors:\n\nReported as warnings:\n\nThe schema validation toolkit validates data against JSON-schema-draft 04 schema.\n\nIt is tested against the full json-schema-testing-suite (https://github.com/json-schema-org/JSON-Schema-Test-Suite),\nexcept for the optional part (bignum, ECMA regexp, ...).\n\nIt supports the complete JSON-schema vocabulary, including keywords not supported by Swagger (e.g. additionalItems, ...)\n\nEntry points:\n\nWith the current version of this package, the following aspects of swagger are not yet supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/validate@0.19.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/validate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/validate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.6"
        },
        {
            "SPDXID": "SPDXRef-Package-bd4f9e9d389d3299",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/validate@v0.22.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validate provides methods to validate a swagger specification,\nas well as tools to validate data against their schema.\n\nThis package follows Swagger 2.0. specification (aka OpenAPI 2.0). Reference\ncan be found here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md.\n\nValidates a spec document (from JSON or YAML) against the JSON schema for swagger,\nthen checks a number of extra rules that can't be expressed in JSON schema.\n\nEntry points:\n\nReported as errors:\n\nReported as warnings:\n\nThe schema validation toolkit validates data against JSON-schema-draft 04 schema.\n\nIt is tested against the full json-schema-testing-suite (https://github.com/json-schema-org/JSON-Schema-Test-Suite),\nexcept for the optional part (bignum, ECMA regexp, ...).\n\nIt supports the complete JSON-schema vocabulary, including keywords not supported by Swagger (e.g. additionalItems, ...)\n\nEntry points:\n\nWith the current version of this package, the following aspects of swagger are not yet supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/validate@0.22.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/validate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/validate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.22.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c58bd9669115b908",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/validate@v0.22.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validate provides methods to validate a swagger specification,\nas well as tools to validate data against their schema.\n\nThis package follows Swagger 2.0. specification (aka OpenAPI 2.0). Reference\ncan be found here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md.\n\nValidates a spec document (from JSON or YAML) against the JSON schema for swagger,\nthen checks a number of extra rules that can't be expressed in JSON schema.\n\nEntry points:\n\nReported as errors:\n\nReported as warnings:\n\nThe schema validation toolkit validates data against JSON-schema-draft 04 schema.\n\nIt is tested against the full json-schema-testing-suite (https://github.com/json-schema-org/JSON-Schema-Test-Suite),\nexcept for the optional part (bignum, ECMA regexp, ...).\n\nIt supports the complete JSON-schema vocabulary, including keywords not supported by Swagger (e.g. additionalItems, ...)\n\nEntry points:\n\nWith the current version of this package, the following aspects of swagger are not yet supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/validate@0.22.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/validate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/validate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.22.1"
        },
        {
            "SPDXID": "SPDXRef-Package-f286aff73ebc9046",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/validate@v0.19.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validate provides methods to validate a swagger specification,\nas well as tools to validate data against their schema.\n\nThis package follows Swagger 2.0. specification (aka OpenAPI 2.0). Reference\ncan be found here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md.\n\nValidates a spec document (from JSON or YAML) against the JSON schema for swagger,\nthen checks a number of extra rules that can't be expressed in JSON schema.\n\nEntry points:\n\nReported as errors:\n\nReported as warnings:\n\nThe schema validation toolkit validates data against JSON-schema-draft 04 schema.\n\nIt is tested against the full json-schema-testing-suite (https://github.com/json-schema-org/JSON-Schema-Test-Suite),\nexcept for the optional part (bignum, ECMA regexp, ...).\n\nIt supports the complete JSON-schema vocabulary, including keywords not supported by Swagger (e.g. additionalItems, ...)\n\nEntry points:\n\nWith the current version of this package, the following aspects of swagger are not yet supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/validate@0.19.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/validate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/validate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.6"
        },
        {
            "SPDXID": "SPDXRef-Package-ff0e80a1f828fae8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/validate@v0.22.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validate provides methods to validate a swagger specification,\nas well as tools to validate data against their schema.\n\nThis package follows Swagger 2.0. specification (aka OpenAPI 2.0). Reference\ncan be found here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md.\n\nValidates a spec document (from JSON or YAML) against the JSON schema for swagger,\nthen checks a number of extra rules that can't be expressed in JSON schema.\n\nEntry points:\n\nReported as errors:\n\nReported as warnings:\n\nThe schema validation toolkit validates data against JSON-schema-draft 04 schema.\n\nIt is tested against the full json-schema-testing-suite (https://github.com/json-schema-org/JSON-Schema-Test-Suite),\nexcept for the optional part (bignum, ECMA regexp, ...).\n\nIt supports the complete JSON-schema vocabulary, including keywords not supported by Swagger (e.g. additionalItems, ...)\n\nEntry points:\n\nWith the current version of this package, the following aspects of swagger are not yet supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/validate@0.22.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/validate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/validate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.22.1"
        },
        {
            "SPDXID": "SPDXRef-Package-1f86911c1d1d297e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis@v6.15.9+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis@6.15.9%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "6.15.9+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-27037e94f698cb04",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis@v6.15.9+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis@6.15.9%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "6.15.9+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-2bafe2a32223e397",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis@v6.15.9+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis@6.15.9%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "6.15.9+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-4f68fc5a14d8cc8b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis@v6.15.9+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis@6.15.9%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "6.15.9+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-64e444af67b2e657",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis@v6.15.9+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis@6.15.9%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-dbaas/testapplication/go/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "6.15.9+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-8d52dc1415ff9ceb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis@v6.15.9+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis@6.15.9%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "6.15.9+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-911b83483fc26779",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis@v6.15.9+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis@6.15.9%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "6.15.9+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-925dbd56499412dc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis@v6.15.9+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis@6.15.9%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "6.15.9+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-b03a3ac03d400cee",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis@v6.15.9+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis@6.15.9%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "6.15.9+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-b44f87228428d561",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis@v6.15.9+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis@6.15.9%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "6.15.9+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-c936d0f8bc675c61",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis@v6.15.9+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis@6.15.9%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "6.15.9+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-49c1f9f206a77b6e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis/v8@v8.11.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis/v8@8.11.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis/v8",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "8.11.4"
        },
        {
            "SPDXID": "SPDXRef-Package-574a2de9b1498322",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-redis/redis/v8@v8.11.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package redis implements a Redis client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-redis/redis/v8@8.11.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-redis/redis",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/go-redis/redis/v8",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "Organization: go-redis",
            "versionInfo": "8.11.4"
        },
        {
            "SPDXID": "SPDXRef-Package-1d1d9a62a2c55bd0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-stack/stack@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stack implements utilities to capture, manipulate, and format call\nstacks. It provides a simpler API than package runtime.\n\nThe implementation takes care of the minutia and special cases of\ninterpreting the program counter (pc) values returned by runtime.Callers.\n\nPackage stack's types implement fmt.Formatter, which provides a simple and\nflexible way to declaratively configure formatting when used with logging\nor error tracking packages.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-stack/stack@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-stack/stack",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-stack/stack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: go-stack",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-264fbedc63ee72f5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-stack/stack@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stack implements utilities to capture, manipulate, and format call\nstacks. It provides a simpler API than package runtime.\n\nThe implementation takes care of the minutia and special cases of\ninterpreting the program counter (pc) values returned by runtime.Callers.\n\nPackage stack's types implement fmt.Formatter, which provides a simple and\nflexible way to declaratively configure formatting when used with logging\nor error tracking packages.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-stack/stack@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-stack/stack",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-stack/stack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: go-stack",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-98ddf112f5cb06e7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-stack/stack@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stack implements utilities to capture, manipulate, and format call\nstacks. It provides a simpler API than package runtime.\n\nThe implementation takes care of the minutia and special cases of\ninterpreting the program counter (pc) values returned by runtime.Callers.\n\nPackage stack's types implement fmt.Formatter, which provides a simple and\nflexible way to declaratively configure formatting when used with logging\nor error tracking packages.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-stack/stack@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-stack/stack",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-stack/stack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: go-stack",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a57fb493995a83e2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-stack/stack@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stack implements utilities to capture, manipulate, and format call\nstacks. It provides a simpler API than package runtime.\n\nThe implementation takes care of the minutia and special cases of\ninterpreting the program counter (pc) values returned by runtime.Callers.\n\nPackage stack's types implement fmt.Formatter, which provides a simple and\nflexible way to declaratively configure formatting when used with logging\nor error tracking packages.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-stack/stack@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-stack/stack",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-stack/stack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: go-stack",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ba003f088c37a0dd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-stack/stack@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stack implements utilities to capture, manipulate, and format call\nstacks. It provides a simpler API than package runtime.\n\nThe implementation takes care of the minutia and special cases of\ninterpreting the program counter (pc) values returned by runtime.Callers.\n\nPackage stack's types implement fmt.Formatter, which provides a simple and\nflexible way to declaratively configure formatting when used with logging\nor error tracking packages.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-stack/stack@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-stack/stack",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-stack/stack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: go-stack",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bca68790568188dd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-stack/stack@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stack implements utilities to capture, manipulate, and format call\nstacks. It provides a simpler API than package runtime.\n\nThe implementation takes care of the minutia and special cases of\ninterpreting the program counter (pc) values returned by runtime.Callers.\n\nPackage stack's types implement fmt.Formatter, which provides a simple and\nflexible way to declaratively configure formatting when used with logging\nor error tracking packages.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-stack/stack@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-stack/stack",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-stack/stack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: go-stack",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c43dfa69ce01b34f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-stack/stack@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stack implements utilities to capture, manipulate, and format call\nstacks. It provides a simpler API than package runtime.\n\nThe implementation takes care of the minutia and special cases of\ninterpreting the program counter (pc) values returned by runtime.Callers.\n\nPackage stack's types implement fmt.Formatter, which provides a simple and\nflexible way to declaratively configure formatting when used with logging\nor error tracking packages.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-stack/stack@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-stack/stack",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-stack/stack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: go-stack",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-cd2c48d62ef7245b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-stack/stack@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stack implements utilities to capture, manipulate, and format call\nstacks. It provides a simpler API than package runtime.\n\nThe implementation takes care of the minutia and special cases of\ninterpreting the program counter (pc) values returned by runtime.Callers.\n\nPackage stack's types implement fmt.Formatter, which provides a simple and\nflexible way to declaratively configure formatting when used with logging\nor error tracking packages.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-stack/stack@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-stack/stack",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-stack/stack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: go-stack",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d585644aa42e99eb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-stack/stack@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stack implements utilities to capture, manipulate, and format call\nstacks. It provides a simpler API than package runtime.\n\nThe implementation takes care of the minutia and special cases of\ninterpreting the program counter (pc) values returned by runtime.Callers.\n\nPackage stack's types implement fmt.Formatter, which provides a simple and\nflexible way to declaratively configure formatting when used with logging\nor error tracking packages.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-stack/stack@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-stack/stack",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-stack/stack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: go-stack",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ec653561f2ea10ee",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-stack/stack@v1.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package stack implements utilities to capture, manipulate, and format call\nstacks. It provides a simpler API than package runtime.\n\nThe implementation takes care of the minutia and special cases of\ninterpreting the program counter (pc) values returned by runtime.Callers.\n\nPackage stack's types implement fmt.Formatter, which provides a simple and\nflexible way to declaratively configure formatting when used with logging\nor error tracking packages.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-stack/stack@1.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-stack/stack",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-stack/stack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: go-stack",
            "versionInfo": "1.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-e08f923a50bea3e4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-task/slim-sprig@v0.0.0-20230315185526-52ccab3ef572"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Sprig: Template functions for Go.\n\nThis package contains a number of utility functions for working with data\ninside of Go `html/template` and `text/template` files.\n\nTo add these functions, use the `template.Funcs()` method:\n\nNote that you should add the function map before you parse any template files.\n\nSee http://masterminds.github.io/sprig/ for more detailed documentation on each of the available functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-task/slim-sprig@0.0.0-20230315185526-52ccab3ef572",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-task/slim-sprig",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-task/slim-sprig",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20230315185526-52ccab3ef572"
        },
        {
            "SPDXID": "SPDXRef-Package-60c810f6c9c1d241",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gobwas/glob@v0.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gobwas/glob@0.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gobwas/glob",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/gobwas/glob",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Sergey Kamardin",
            "versionInfo": "0.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-77f79d29dc2d5f90",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/godbus/dbus/v5@v5.0.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package dbus implements bindings to the D-Bus message bus system.\n\nTo use the message bus API, you first need to connect to a bus (usually the\nsession or system bus). The acquired connection then can be used to call methods\non remote objects and emit or receive signals. Using the Export method, you can\narrange D-Bus methods calls to be directly translated to method calls on a Go\nvalue.\n\nFor outgoing messages, Go types are automatically converted to the\ncorresponding D-Bus types. See the official specification at\nhttps://dbus.freedesktop.org/doc/dbus-specification.html#type-system for more\ninformation on the D-Bus type system. The following types are directly encoded\nas their respective D-Bus equivalents:\n\nSlices and arrays encode as ARRAYs of their element type.\n\nMaps encode as DICTs, provided that their key type can be used as a key for\na DICT.\n\nStructs other than Variant and Signature encode as a STRUCT containing their\nexported fields in order. Fields whose tags contain `dbus:\"-\"` and unexported\nfields will be skipped.\n\nPointers encode as the value they're pointed to.\n\nTypes convertible to one of the base types above will be mapped as the\nbase type.\n\nTrying to encode any other type or a slice, map or struct containing an\nunsupported type will result in an InvalidTypeError.\n\nFor incoming messages, the inverse of these rules are used, with the exception\nof STRUCTs. Incoming STRUCTS are represented as a slice of empty interfaces\ncontaining the struct fields in the correct order. The Store function can be\nused to convert such values to Go structs.\n\nHandling Unix file descriptors deserves special mention. To use them, you should\nfirst check that they are supported on a connection by calling SupportsUnixFDs.\nIf it returns true, all method of Connection will translate messages containing\nUnixFD's to messages that are accompanied by the given file descriptors with the\nUnixFD values being substituted by the correct indices. Similarly, the indices\nof incoming messages are automatically resolved. It shouldn't be necessary to use\nUnixFDIndex.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/godbus/dbus/v5@5.0.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/godbus/dbus",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/godbus/dbus/v5",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: godbus",
            "versionInfo": "5.0.4"
        },
        {
            "SPDXID": "SPDXRef-Package-2f0c126d2036cc52",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gogo/protobuf@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gogo/protobuf@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gogo/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gogo/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: gogoprotobuf",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-3f6773fb58acad72",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gogo/protobuf@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gogo/protobuf@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gogo/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gogo/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: gogoprotobuf",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-50fa137262931269",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gogo/protobuf@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gogo/protobuf@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gogo/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gogo/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: gogoprotobuf",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-5baf2ae801073162",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gogo/protobuf@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gogo/protobuf@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gogo/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gogo/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: gogoprotobuf",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-61b1582dc9e62fcb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gogo/protobuf@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gogo/protobuf@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gogo/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gogo/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: gogoprotobuf",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-7e1e6cc217e2f2d7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gogo/protobuf@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gogo/protobuf@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gogo/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gogo/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: gogoprotobuf",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-ac40476faf798ad4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gogo/protobuf@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gogo/protobuf@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gogo/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gogo/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: gogoprotobuf",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-e0ca1792d36b2b3b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gogo/protobuf@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gogo/protobuf@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gogo/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gogo/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: gogoprotobuf",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-3deb88ac8051c39f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/glog@v0.0.0-20160126235308-23def4e6c14b"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package glog implements logging analogous to the Google-internal C++ INFO/ERROR/V setup.\nIt provides functions that have a name matched by regex:\n\nIf Context is present, function takes context.Context argument. The\ncontext is used to pass through the Trace Context to log sinks that can make use\nof it.\nIt is recommended to use the context variant of the functions over the non-context\nvariants if a context is available to make sure the Trace Contexts are present\nin logs.\n\nIf Depth is present, this function calls log from a different depth in the call stack.\nThis enables a callee to emit logs that use the callsite information of its caller\nor any other callers in the stack. When depth == 0, the original callee's line\ninformation is emitted. When depth > 0, depth frames are skipped in the call stack\nand the final frame is treated like the original callee to Info.\n\nIf 'f' is present, function formats according to a format specifier.\n\nThis package also provides V-style logging controlled by the -v and -vmodule=file=2 flags.\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to files in a temporary directory.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.\n\nOther flags provide aids to debugging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/glog@0.0.0-20160126235308-23def4e6c14b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/glog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/glog",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20160126235308-23def4e6c14b"
        },
        {
            "SPDXID": "SPDXRef-Package-bd4fc102962fb084",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/glog@v0.0.0-20160126235308-23def4e6c14b"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package glog implements logging analogous to the Google-internal C++ INFO/ERROR/V setup.\nIt provides functions that have a name matched by regex:\n\nIf Context is present, function takes context.Context argument. The\ncontext is used to pass through the Trace Context to log sinks that can make use\nof it.\nIt is recommended to use the context variant of the functions over the non-context\nvariants if a context is available to make sure the Trace Contexts are present\nin logs.\n\nIf Depth is present, this function calls log from a different depth in the call stack.\nThis enables a callee to emit logs that use the callsite information of its caller\nor any other callers in the stack. When depth == 0, the original callee's line\ninformation is emitted. When depth > 0, depth frames are skipped in the call stack\nand the final frame is treated like the original callee to Info.\n\nIf 'f' is present, function formats according to a format specifier.\n\nThis package also provides V-style logging controlled by the -v and -vmodule=file=2 flags.\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to files in a temporary directory.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.\n\nOther flags provide aids to debugging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/glog@0.0.0-20160126235308-23def4e6c14b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/glog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/glog",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20160126235308-23def4e6c14b"
        },
        {
            "SPDXID": "SPDXRef-Package-cb62cd229eb999d9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/glog@v0.0.0-20160126235308-23def4e6c14b"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package glog implements logging analogous to the Google-internal C++ INFO/ERROR/V setup.\nIt provides functions that have a name matched by regex:\n\nIf Context is present, function takes context.Context argument. The\ncontext is used to pass through the Trace Context to log sinks that can make use\nof it.\nIt is recommended to use the context variant of the functions over the non-context\nvariants if a context is available to make sure the Trace Contexts are present\nin logs.\n\nIf Depth is present, this function calls log from a different depth in the call stack.\nThis enables a callee to emit logs that use the callsite information of its caller\nor any other callers in the stack. When depth == 0, the original callee's line\ninformation is emitted. When depth > 0, depth frames are skipped in the call stack\nand the final frame is treated like the original callee to Info.\n\nIf 'f' is present, function formats according to a format specifier.\n\nThis package also provides V-style logging controlled by the -v and -vmodule=file=2 flags.\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to files in a temporary directory.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.\n\nOther flags provide aids to debugging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/glog@0.0.0-20160126235308-23def4e6c14b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/glog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/glog",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20160126235308-23def4e6c14b"
        },
        {
            "SPDXID": "SPDXRef-Package-d057aa4240564b35",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/glog@v0.0.0-20160126235308-23def4e6c14b"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package glog implements logging analogous to the Google-internal C++ INFO/ERROR/V setup.\nIt provides functions that have a name matched by regex:\n\nIf Context is present, function takes context.Context argument. The\ncontext is used to pass through the Trace Context to log sinks that can make use\nof it.\nIt is recommended to use the context variant of the functions over the non-context\nvariants if a context is available to make sure the Trace Contexts are present\nin logs.\n\nIf Depth is present, this function calls log from a different depth in the call stack.\nThis enables a callee to emit logs that use the callsite information of its caller\nor any other callers in the stack. When depth == 0, the original callee's line\ninformation is emitted. When depth > 0, depth frames are skipped in the call stack\nand the final frame is treated like the original callee to Info.\n\nIf 'f' is present, function formats according to a format specifier.\n\nThis package also provides V-style logging controlled by the -v and -vmodule=file=2 flags.\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to files in a temporary directory.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.\n\nOther flags provide aids to debugging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/glog@0.0.0-20160126235308-23def4e6c14b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/glog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/glog",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20160126235308-23def4e6c14b"
        },
        {
            "SPDXID": "SPDXRef-Package-d2308c14e6048cce",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/glog@v0.0.0-20160126235308-23def4e6c14b"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package glog implements logging analogous to the Google-internal C++ INFO/ERROR/V setup.\nIt provides functions that have a name matched by regex:\n\nIf Context is present, function takes context.Context argument. The\ncontext is used to pass through the Trace Context to log sinks that can make use\nof it.\nIt is recommended to use the context variant of the functions over the non-context\nvariants if a context is available to make sure the Trace Contexts are present\nin logs.\n\nIf Depth is present, this function calls log from a different depth in the call stack.\nThis enables a callee to emit logs that use the callsite information of its caller\nor any other callers in the stack. When depth == 0, the original callee's line\ninformation is emitted. When depth > 0, depth frames are skipped in the call stack\nand the final frame is treated like the original callee to Info.\n\nIf 'f' is present, function formats according to a format specifier.\n\nThis package also provides V-style logging controlled by the -v and -vmodule=file=2 flags.\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to files in a temporary directory.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.\n\nOther flags provide aids to debugging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/glog@0.0.0-20160126235308-23def4e6c14b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/glog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/glog",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20160126235308-23def4e6c14b"
        },
        {
            "SPDXID": "SPDXRef-Package-3d3aacf4949ea716",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/groupcache@v0.0.0-20190129154638-5b532d6fd5ef"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package groupcache provides a data loading mechanism with caching\nand de-duplication that works across a set of peer processes.\n\nEach data Get first consults its local cache, otherwise delegates\nto the requested key's canonical owner, which then checks its cache\nor finally gets the data.  In the common case, many concurrent\ncache misses across a set of peers for the same key result in just\none cache fill.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/groupcache@0.0.0-20190129154638-5b532d6fd5ef",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/groupcache",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/groupcache",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20190129154638-5b532d6fd5ef"
        },
        {
            "SPDXID": "SPDXRef-Package-63bf917c0af3b102",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/groupcache@v0.0.0-20210331224755-41bb18bfe9da"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package groupcache provides a data loading mechanism with caching\nand de-duplication that works across a set of peer processes.\n\nEach data Get first consults its local cache, otherwise delegates\nto the requested key's canonical owner, which then checks its cache\nor finally gets the data.  In the common case, many concurrent\ncache misses across a set of peers for the same key result in just\none cache fill.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/groupcache@0.0.0-20210331224755-41bb18bfe9da",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/groupcache",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/groupcache",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20210331224755-41bb18bfe9da"
        },
        {
            "SPDXID": "SPDXRef-Package-8ae1273d04dfbe25",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/groupcache@v0.0.0-20190129154638-5b532d6fd5ef"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package groupcache provides a data loading mechanism with caching\nand de-duplication that works across a set of peer processes.\n\nEach data Get first consults its local cache, otherwise delegates\nto the requested key's canonical owner, which then checks its cache\nor finally gets the data.  In the common case, many concurrent\ncache misses across a set of peers for the same key result in just\none cache fill.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/groupcache@0.0.0-20190129154638-5b532d6fd5ef",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/groupcache",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/groupcache",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20190129154638-5b532d6fd5ef"
        },
        {
            "SPDXID": "SPDXRef-Package-a548aed7633d0281",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/groupcache@v0.0.0-20190129154638-5b532d6fd5ef"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package groupcache provides a data loading mechanism with caching\nand de-duplication that works across a set of peer processes.\n\nEach data Get first consults its local cache, otherwise delegates\nto the requested key's canonical owner, which then checks its cache\nor finally gets the data.  In the common case, many concurrent\ncache misses across a set of peers for the same key result in just\none cache fill.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/groupcache@0.0.0-20190129154638-5b532d6fd5ef",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/groupcache",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/groupcache",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20190129154638-5b532d6fd5ef"
        },
        {
            "SPDXID": "SPDXRef-Package-a8c9c2fd03e20f12",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/groupcache@v0.0.0-20210331224755-41bb18bfe9da"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package groupcache provides a data loading mechanism with caching\nand de-duplication that works across a set of peer processes.\n\nEach data Get first consults its local cache, otherwise delegates\nto the requested key's canonical owner, which then checks its cache\nor finally gets the data.  In the common case, many concurrent\ncache misses across a set of peers for the same key result in just\none cache fill.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/groupcache@0.0.0-20210331224755-41bb18bfe9da",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/groupcache",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/groupcache",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20210331224755-41bb18bfe9da"
        },
        {
            "SPDXID": "SPDXRef-Package-aa24cedb836bb4d8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/groupcache@v0.0.0-20190129154638-5b532d6fd5ef"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package groupcache provides a data loading mechanism with caching\nand de-duplication that works across a set of peer processes.\n\nEach data Get first consults its local cache, otherwise delegates\nto the requested key's canonical owner, which then checks its cache\nor finally gets the data.  In the common case, many concurrent\ncache misses across a set of peers for the same key result in just\none cache fill.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/groupcache@0.0.0-20190129154638-5b532d6fd5ef",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/groupcache",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/groupcache",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20190129154638-5b532d6fd5ef"
        },
        {
            "SPDXID": "SPDXRef-Package-f1d513e80df3c68d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/groupcache@v0.0.0-20190129154638-5b532d6fd5ef"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package groupcache provides a data loading mechanism with caching\nand de-duplication that works across a set of peer processes.\n\nEach data Get first consults its local cache, otherwise delegates\nto the requested key's canonical owner, which then checks its cache\nor finally gets the data.  In the common case, many concurrent\ncache misses across a set of peers for the same key result in just\none cache fill.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/groupcache@0.0.0-20190129154638-5b532d6fd5ef",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/groupcache",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/groupcache",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20190129154638-5b532d6fd5ef"
        },
        {
            "SPDXID": "SPDXRef-Package-693ff57298d220b1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/mock@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/mock@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/mock",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/mock",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a1ed70236cd9d624",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/mock@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/mock@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/mock",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/mock",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-cbd08c0706f18ae7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/mock@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/mock@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/mock",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/mock",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d6e184fe7340db91",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/mock@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/mock@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/mock",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/mock",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-e36a6adb01e34559",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/mock@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/mock@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/mock",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/mock",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-22f33c919e64052f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.5.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.5.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.5.3"
        },
        {
            "SPDXID": "SPDXRef-Package-3606e4b929e19ab4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.4.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-3eaf05763910629b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-streaming-protobufs/protogen/go/streaming_protobufs/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-561eb433c5d47a55",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.4.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-606e0fc3b04d93e3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.4.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/reader/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-81e6cf549b9fc90a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-922729d11c75520f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.4.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-93b6afb86c0a05c2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.5.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.5.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.5.3"
        },
        {
            "SPDXID": "SPDXRef-Package-9422702515cc8431",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.5.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.5.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.5.3"
        },
        {
            "SPDXID": "SPDXRef-Package-ab3fc6cb3018493a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.4.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-af4cb7b7d5dfbdd3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.4.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-bb4664d817638e25",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/entities/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-be4d9690c1711256",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.5.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.5.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.5.2"
        },
        {
            "SPDXID": "SPDXRef-Package-c1c6bc1752c7eb8a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.4.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-c3ec3023d24c510c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.5.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.5.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.5.3"
        },
        {
            "SPDXID": "SPDXRef-Package-cd20ad1b0692ffaf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.4.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-d309a54a9be87317",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.5.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.5.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.5.2"
        },
        {
            "SPDXID": "SPDXRef-Package-da8f4b7ed5fa26f0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.5.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.5.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.5.3"
        },
        {
            "SPDXID": "SPDXRef-Package-fab781352528fbe6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b47986aa995ddcee",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golangci/lint-1@v0.0.0-20181222135242-d2cdd8c08219"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package lint contains a linter for Go source code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golangci/lint-1@0.0.0-20181222135242-d2cdd8c08219",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golangci/lint-1",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golangci/lint-1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: GolangCI",
            "versionInfo": "0.0.0-20181222135242-d2cdd8c08219"
        },
        {
            "SPDXID": "SPDXRef-Package-407b512b5e182d50",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/btree@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package btree implements in-memory B-Trees of arbitrary degree.\n\nbtree implements an in-memory B-Tree for use as an ordered data structure.\nIt is not meant for persistent storage solutions.\n\nIt has a flatter structure than an equivalent red-black or other binary tree,\nwhich in some cases yields better memory usage and/or performance.\nSee some discussion on the matter here:\n\nNote, though, that this project is in no way related to the C++ B-Tree\nimplementation written about there.\n\nWithin this tree, each node contains a slice of items and a (possibly nil)\nslice of children.  For basic numeric values or raw structs, this can cause\nefficiency differences when compared to equivalent C++ template code that\nstores values in arrays within the node:\n\nThese issues don't tend to matter, though, when working with strings or other\nheap-allocated structures, since C++-equivalent structures also must store\npointers and also distribute their values across the heap.\n\nThis implementation is designed to be a drop-in replacement to gollrb.LLRB\ntrees, (http://github.com/petar/gollrb), an excellent and probably the most\nwidely used ordered tree implementation in the Go ecosystem currently.\nIts functions, therefore, exactly mirror those of\nllrb.LLRB where possible.  Unlike gollrb, though, we currently don't\nsupport storing multiple equivalent values.\n\nThere are two implementations; those suffixed with 'G' are generics, usable\nfor any type, and require a passed-in \"less\" function to define their ordering.\nThose without this prefix are specific to the 'Item' interface, and use\nits 'Less' function for ordering.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/btree@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/btree",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/btree",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-493ecb46d2e908fd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/btree@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package btree implements in-memory B-Trees of arbitrary degree.\n\nbtree implements an in-memory B-Tree for use as an ordered data structure.\nIt is not meant for persistent storage solutions.\n\nIt has a flatter structure than an equivalent red-black or other binary tree,\nwhich in some cases yields better memory usage and/or performance.\nSee some discussion on the matter here:\n\nNote, though, that this project is in no way related to the C++ B-Tree\nimplementation written about there.\n\nWithin this tree, each node contains a slice of items and a (possibly nil)\nslice of children.  For basic numeric values or raw structs, this can cause\nefficiency differences when compared to equivalent C++ template code that\nstores values in arrays within the node:\n\nThese issues don't tend to matter, though, when working with strings or other\nheap-allocated structures, since C++-equivalent structures also must store\npointers and also distribute their values across the heap.\n\nThis implementation is designed to be a drop-in replacement to gollrb.LLRB\ntrees, (http://github.com/petar/gollrb), an excellent and probably the most\nwidely used ordered tree implementation in the Go ecosystem currently.\nIts functions, therefore, exactly mirror those of\nllrb.LLRB where possible.  Unlike gollrb, though, we currently don't\nsupport storing multiple equivalent values.\n\nThere are two implementations; those suffixed with 'G' are generics, usable\nfor any type, and require a passed-in \"less\" function to define their ordering.\nThose without this prefix are specific to the 'Item' interface, and use\nits 'Less' function for ordering.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/btree@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/btree",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/btree",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-791f21ac9fe33838",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/btree@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package btree implements in-memory B-Trees of arbitrary degree.\n\nbtree implements an in-memory B-Tree for use as an ordered data structure.\nIt is not meant for persistent storage solutions.\n\nIt has a flatter structure than an equivalent red-black or other binary tree,\nwhich in some cases yields better memory usage and/or performance.\nSee some discussion on the matter here:\n\nNote, though, that this project is in no way related to the C++ B-Tree\nimplementation written about there.\n\nWithin this tree, each node contains a slice of items and a (possibly nil)\nslice of children.  For basic numeric values or raw structs, this can cause\nefficiency differences when compared to equivalent C++ template code that\nstores values in arrays within the node:\n\nThese issues don't tend to matter, though, when working with strings or other\nheap-allocated structures, since C++-equivalent structures also must store\npointers and also distribute their values across the heap.\n\nThis implementation is designed to be a drop-in replacement to gollrb.LLRB\ntrees, (http://github.com/petar/gollrb), an excellent and probably the most\nwidely used ordered tree implementation in the Go ecosystem currently.\nIts functions, therefore, exactly mirror those of\nllrb.LLRB where possible.  Unlike gollrb, though, we currently don't\nsupport storing multiple equivalent values.\n\nThere are two implementations; those suffixed with 'G' are generics, usable\nfor any type, and require a passed-in \"less\" function to define their ordering.\nThose without this prefix are specific to the 'Item' interface, and use\nits 'Less' function for ordering.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/btree@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/btree",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/btree",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-80ffdc478dc422d3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/btree@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package btree implements in-memory B-Trees of arbitrary degree.\n\nbtree implements an in-memory B-Tree for use as an ordered data structure.\nIt is not meant for persistent storage solutions.\n\nIt has a flatter structure than an equivalent red-black or other binary tree,\nwhich in some cases yields better memory usage and/or performance.\nSee some discussion on the matter here:\n\nNote, though, that this project is in no way related to the C++ B-Tree\nimplementation written about there.\n\nWithin this tree, each node contains a slice of items and a (possibly nil)\nslice of children.  For basic numeric values or raw structs, this can cause\nefficiency differences when compared to equivalent C++ template code that\nstores values in arrays within the node:\n\nThese issues don't tend to matter, though, when working with strings or other\nheap-allocated structures, since C++-equivalent structures also must store\npointers and also distribute their values across the heap.\n\nThis implementation is designed to be a drop-in replacement to gollrb.LLRB\ntrees, (http://github.com/petar/gollrb), an excellent and probably the most\nwidely used ordered tree implementation in the Go ecosystem currently.\nIts functions, therefore, exactly mirror those of\nllrb.LLRB where possible.  Unlike gollrb, though, we currently don't\nsupport storing multiple equivalent values.\n\nThere are two implementations; those suffixed with 'G' are generics, usable\nfor any type, and require a passed-in \"less\" function to define their ordering.\nThose without this prefix are specific to the 'Item' interface, and use\nits 'Less' function for ordering.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/btree@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/btree",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/btree",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d32c777437b8cb82",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/btree@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package btree implements in-memory B-Trees of arbitrary degree.\n\nbtree implements an in-memory B-Tree for use as an ordered data structure.\nIt is not meant for persistent storage solutions.\n\nIt has a flatter structure than an equivalent red-black or other binary tree,\nwhich in some cases yields better memory usage and/or performance.\nSee some discussion on the matter here:\n\nNote, though, that this project is in no way related to the C++ B-Tree\nimplementation written about there.\n\nWithin this tree, each node contains a slice of items and a (possibly nil)\nslice of children.  For basic numeric values or raw structs, this can cause\nefficiency differences when compared to equivalent C++ template code that\nstores values in arrays within the node:\n\nThese issues don't tend to matter, though, when working with strings or other\nheap-allocated structures, since C++-equivalent structures also must store\npointers and also distribute their values across the heap.\n\nThis implementation is designed to be a drop-in replacement to gollrb.LLRB\ntrees, (http://github.com/petar/gollrb), an excellent and probably the most\nwidely used ordered tree implementation in the Go ecosystem currently.\nIts functions, therefore, exactly mirror those of\nllrb.LLRB where possible.  Unlike gollrb, though, we currently don't\nsupport storing multiple equivalent values.\n\nThere are two implementations; those suffixed with 'G' are generics, usable\nfor any type, and require a passed-in \"less\" function to define their ordering.\nThose without this prefix are specific to the 'Item' interface, and use\nits 'Less' function for ordering.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/btree@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/btree",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/btree",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fe88215bd4fca0ef",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/btree@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package btree implements in-memory B-Trees of arbitrary degree.\n\nbtree implements an in-memory B-Tree for use as an ordered data structure.\nIt is not meant for persistent storage solutions.\n\nIt has a flatter structure than an equivalent red-black or other binary tree,\nwhich in some cases yields better memory usage and/or performance.\nSee some discussion on the matter here:\n\nNote, though, that this project is in no way related to the C++ B-Tree\nimplementation written about there.\n\nWithin this tree, each node contains a slice of items and a (possibly nil)\nslice of children.  For basic numeric values or raw structs, this can cause\nefficiency differences when compared to equivalent C++ template code that\nstores values in arrays within the node:\n\nThese issues don't tend to matter, though, when working with strings or other\nheap-allocated structures, since C++-equivalent structures also must store\npointers and also distribute their values across the heap.\n\nThis implementation is designed to be a drop-in replacement to gollrb.LLRB\ntrees, (http://github.com/petar/gollrb), an excellent and probably the most\nwidely used ordered tree implementation in the Go ecosystem currently.\nIts functions, therefore, exactly mirror those of\nllrb.LLRB where possible.  Unlike gollrb, though, we currently don't\nsupport storing multiple equivalent values.\n\nThere are two implementations; those suffixed with 'G' are generics, usable\nfor any type, and require a passed-in \"less\" function to define their ordering.\nThose without this prefix are specific to the 'Item' interface, and use\nits 'Less' function for ordering.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/btree@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/btree",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/btree",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-40cbad20416f47da",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/gnostic@v0.5.7-v3refs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Gnostic is a tool for building better REST APIs through knowledge.\n\nGnostic reads declarative descriptions of REST APIs that conform\nto the OpenAPI Specification, reports errors, resolves internal\ndependencies, and puts the results in a binary form that can\nbe used in any language that is supported by the Protocol Buffer\ntools.\n\nGnostic models are validated and typed. This allows API tool\ndevelopers to focus on their product and not worry about input\nvalidation and type checking.\n\nGnostic calls plugins that implement a variety of API implementation\nand support features including generation of client and server\nsupport code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/gnostic@0.5.7-v3refs",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/gnostic",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/gnostic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.5.7-v3refs"
        },
        {
            "SPDXID": "SPDXRef-Package-b61e92120f2727a2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/gnostic@v0.5.7-v3refs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Gnostic is a tool for building better REST APIs through knowledge.\n\nGnostic reads declarative descriptions of REST APIs that conform\nto the OpenAPI Specification, reports errors, resolves internal\ndependencies, and puts the results in a binary form that can\nbe used in any language that is supported by the Protocol Buffer\ntools.\n\nGnostic models are validated and typed. This allows API tool\ndevelopers to focus on their product and not worry about input\nvalidation and type checking.\n\nGnostic calls plugins that implement a variety of API implementation\nand support features including generation of client and server\nsupport code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/gnostic@0.5.7-v3refs",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/gnostic",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/gnostic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.5.7-v3refs"
        },
        {
            "SPDXID": "SPDXRef-Package-d8297c3d77f92e4c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/gnostic@v0.5.7-v3refs"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Gnostic is a tool for building better REST APIs through knowledge.\n\nGnostic reads declarative descriptions of REST APIs that conform\nto the OpenAPI Specification, reports errors, resolves internal\ndependencies, and puts the results in a binary form that can\nbe used in any language that is supported by the Protocol Buffer\ntools.\n\nGnostic models are validated and typed. This allows API tool\ndevelopers to focus on their product and not worry about input\nvalidation and type checking.\n\nGnostic calls plugins that implement a variety of API implementation\nand support features including generation of client and server\nsupport code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/gnostic@0.5.7-v3refs",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/gnostic",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/gnostic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.5.7-v3refs"
        },
        {
            "SPDXID": "SPDXRef-Package-21b0a2db92dbe365",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-31dd5a51643f0ccd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/e2ap/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-32e073d532a63052",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-streaming-protobufs/protogen/go/streaming_protobufs/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3a1a7dcabcb71906",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.5.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.5.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.5.9"
        },
        {
            "SPDXID": "SPDXRef-Package-4121dfee08d8df31",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.4.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.4.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.4.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4b719d4de90b902",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5b651e0d69f13c39",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5c208519d1ab7b22",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.4.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.4.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/reader/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.4.1"
        },
        {
            "SPDXID": "SPDXRef-Package-8fa5db314fdd467d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.5.8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.5.8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.5.8"
        },
        {
            "SPDXID": "SPDXRef-Package-d1155de0b0972462",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.5.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.5.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.5.9"
        },
        {
            "SPDXID": "SPDXRef-Package-e60152d66a4ae83e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/entities/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ea7e20820a0318c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.4.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.4.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.4.1"
        },
        {
            "SPDXID": "SPDXRef-Package-8e62683cbd6ebe9e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/gofuzz@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fuzz is a library for populating go objects with random values.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/gofuzz@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/gofuzz",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/gofuzz",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a577d82397f2e9c7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/gofuzz@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fuzz is a library for populating go objects with random values.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/gofuzz@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/gofuzz",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/gofuzz",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b93b0519bc262144",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/gofuzz@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fuzz is a library for populating go objects with random values.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/gofuzz@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/gofuzz",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/gofuzz",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e3620f677d8a6ed1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/pprof@v0.0.0-20210720184732-4bb14d4b1be1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "pprof is a tool for collection, manipulation and visualization\nof performance profiles.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/pprof@0.0.0-20210720184732-4bb14d4b1be1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/pprof",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/pprof",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.0.0-20210720184732-4bb14d4b1be1"
        },
        {
            "SPDXID": "SPDXRef-Package-205eab20d74a7a44",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/renameio@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package renameio provides a way to atomically create or replace a file or\nsymbolic link.\n\nCaveat: this package requires the file system rename(2) implementation to be\natomic. Notably, this is not the case when using NFS with multiple clients:\nhttps://stackoverflow.com/a/41396801",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/renameio@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/renameio",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/renameio",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7e96ae3b215997c4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/renameio@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package renameio provides a way to atomically create or replace a file or\nsymbolic link.\n\nCaveat: this package requires the file system rename(2) implementation to be\natomic. Notably, this is not the case when using NFS with multiple clients:\nhttps://stackoverflow.com/a/41396801",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/renameio@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/renameio",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/renameio",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ec37b23b908d2fd3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/renameio@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package renameio provides a way to atomically create or replace a file or\nsymbolic link.\n\nCaveat: this package requires the file system rename(2) implementation to be\natomic. Notably, this is not the case when using NFS with multiple clients:\nhttps://stackoverflow.com/a/41396801",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/renameio@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/renameio",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/renameio",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a8405fb1b2272f06",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/shlex@v0.0.0-20191202100458-e7afc7fbc510"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package shlex implements a simple lexer which splits input in to tokens using\nshell-style rules for quoting and commenting.\n\nThe basic use case uses the default ASCII lexer to split a string into sub-strings:\n\nTo process a stream of strings:\n\nTo access the raw token stream (which includes tokens for comments):",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/shlex@0.0.0-20191202100458-e7afc7fbc510",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/shlex",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/shlex",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20191202100458-e7afc7fbc510"
        },
        {
            "SPDXID": "SPDXRef-Package-32559e438d418b6c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/uuid@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package uuid generates and inspects UUIDs.\n\nUUIDs are based on RFC 4122 and DCE 1.1: Authentication and Security\nServices.\n\nA UUID is a 16 byte (128 bit) array.  UUIDs may be used as keys to\nmaps or compared directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/uuid@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/uuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/uuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-70f3eccf93f99e88",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/uuid@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package uuid generates and inspects UUIDs.\n\nUUIDs are based on RFC 4122 and DCE 1.1: Authentication and Security\nServices.\n\nA UUID is a 16 byte (128 bit) array.  UUIDs may be used as keys to\nmaps or compared directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/uuid@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/uuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/uuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-89d2f7cbdc5cae5b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/uuid@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package uuid generates and inspects UUIDs.\n\nUUIDs are based on RFC 4122 and DCE 1.1: Authentication and Security\nServices.\n\nA UUID is a 16 byte (128 bit) array.  UUIDs may be used as keys to\nmaps or compared directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/uuid@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/uuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/uuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bf50d63b3a4d4d78",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/uuid@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package uuid generates and inspects UUIDs.\n\nUUIDs are based on RFC 4122 and DCE 1.1: Authentication and Security\nServices.\n\nA UUID is a 16 byte (128 bit) array.  UUIDs may be used as keys to\nmaps or compared directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/uuid@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/uuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/uuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-cd5796b92d0ef96c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/uuid@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package uuid generates and inspects UUIDs.\n\nUUIDs are based on RFC 4122 and DCE 1.1: Authentication and Security\nServices.\n\nA UUID is a 16 byte (128 bit) array.  UUIDs may be used as keys to\nmaps or compared directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/uuid@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/uuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/uuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d740b2df817af0d5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/uuid@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package uuid generates and inspects UUIDs.\n\nUUIDs are based on RFC 4122 and DCE 1.1: Authentication and Security\nServices.\n\nA UUID is a 16 byte (128 bit) array.  UUIDs may be used as keys to\nmaps or compared directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/uuid@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/uuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/uuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-267097099fe55051",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gopherjs/gopherjs@v0.0.0-20181017120253-0766667cb4d1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gopherjs/gopherjs@0.0.0-20181017120253-0766667cb4d1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gopherjs/gopherjs",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/gopherjs/gopherjs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: GopherJS",
            "versionInfo": "0.0.0-20181017120253-0766667cb4d1"
        },
        {
            "SPDXID": "SPDXRef-Package-5b0c0ac458531ef4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gopherjs/gopherjs@v0.0.0-20181017120253-0766667cb4d1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gopherjs/gopherjs@0.0.0-20181017120253-0766667cb4d1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gopherjs/gopherjs",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/gopherjs/gopherjs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: GopherJS",
            "versionInfo": "0.0.0-20181017120253-0766667cb4d1"
        },
        {
            "SPDXID": "SPDXRef-Package-2e54ed9e881061d8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-2e99792fc2ca8f9f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-3311bb6e336631ab",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-39e695e4dbe8093",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3d19e4be8f89b56b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4dce88a4d23ab43f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5eae294b30be7d9c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-693f058b7ab96cca",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-91a0944a91d4e5da",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-af9ee34ab701106e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ba46c82b27eb9184",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bbe9715e3a2fe8b3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c03b402398119b93",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d4ac7a4b6bdfec12",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/mux@v1.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mux implements a request router and dispatcher.\n\nThe name mux stands for \"HTTP request multiplexer\". Like the standard\nhttp.ServeMux, mux.Router matches incoming requests against a list of\nregistered routes and calls a handler for the route that matches the URL\nor other conditions. The main features are:\n\nLet's start registering a couple of URL paths and handlers:\n\nHere we register three routes mapping URL paths to handlers. This is\nequivalent to how http.HandleFunc() works: if an incoming request URL matches\none of the paths, the corresponding handler is called passing\n(http.ResponseWriter, *http.Request) as parameters.\n\nPaths can have variables. They are defined using the format {name} or\n{name:pattern}. If a regular expression pattern is not defined, the matched\nvariable will be anything until the next slash. For example:\n\nGroups can be used inside patterns, as long as they are non-capturing (?:re). For example:\n\nThe names are used to create a map of route variables which can be retrieved\ncalling mux.Vars():\n\nNote that if any capturing groups are present, mux will panic() during parsing. To prevent\nthis, convert any capturing groups to non-capturing, e.g. change \"/{sort:(asc|desc)}\" to\n\"/{sort:(?:asc|desc)}\". This is a change from prior versions which behaved unpredictably\nwhen capturing groups were present.\n\nAnd this is all you need to know about the basic usage. More advanced options\nare explained below.\n\nRoutes can also be restricted to a domain or subdomain. Just define a host\npattern to be matched. They can also have variables:\n\nThere are several other matchers that can be added. To match path prefixes:\n\n...or HTTP methods:\n\n...or URL schemes:\n\n...or header values:\n\n...or query values:\n\n...or to use a custom matcher function:\n\n...and finally, it is possible to combine several matchers in a single route:\n\nSetting the same matching conditions again and again can be boring, so we have\na way to group several routes that share the same requirements.\nWe call it \"subrouting\".\n\nFor example, let's say we have several URLs that should only match when the\nhost is \"www.example.com\". Create a route for that host and get a \"subrouter\"\nfrom it:\n\nThen register routes in the subrouter:\n\nThe three URL paths we registered above will only be tested if the domain is\n\"www.example.com\", because the subrouter is tested first. This is not\nonly convenient, but also optimizes request matching. You can create\nsubrouters combining any attribute matchers accepted by a route.\n\nSubrouters can be used to create domain or path \"namespaces\": you define\nsubrouters in a central place and then parts of the app can register its\npaths relatively to a given subrouter.\n\nThere's one more thing about subroutes. When a subrouter has a path prefix,\nthe inner routes use it as base for their paths:\n\nNote that the path provided to PathPrefix() represents a \"wildcard\": calling\nPathPrefix(\"/static/\").Handler(...) means that the handler will be passed any\nrequest that matches \"/static/*\". This makes it easy to serve static files with mux:\n\nNow let's see how to build registered URLs.\n\nRoutes can be named. All routes that define a name can have their URLs built,\nor \"reversed\". We define a name calling Name() on a route. For example:\n\nTo build a URL, get the route and call the URL() method, passing a sequence of\nkey/value pairs for the route variables. For the previous route, we would do:\n\n...and the result will be a url.URL with the following path:\n\nThis also works for host and query value variables:\n\nAll variables defined in the route are required, and their values must\nconform to the corresponding patterns. These requirements guarantee that a\ngenerated URL will always match a registered route -- the only exception is\nfor explicitly defined \"build-only\" routes which never match.\n\nRegex support also exists for matching Headers within a route. For example, we could do:\n\n...and the route will match both requests with a Content-Type of `application/json` as well as\n`application/text`\n\nThere's also a way to build only the URL host or path for a route:\nuse the methods URLHost() or URLPath() instead. For the previous route,\nwe would do:\n\nAnd if you use subrouters, host and path defined separately can be built\nas well:\n\nMux supports the addition of middlewares to a Router, which are executed in the order they are added if a match is found, including its subrouters. Middlewares are (typically) small pieces of code which take one request, do something with it, and pass it down to another middleware or the final handler. Some common use cases for middleware are request logging, header manipulation, or ResponseWriter hijacking.\n\nTypically, the returned handler is a closure which does something with the http.ResponseWriter and http.Request passed to it, and then calls the handler passed as parameter to the MiddlewareFunc (closures can access variables from the context where they are created).\n\nA very basic middleware which logs the URI of the request being handled could be written as:\n\nMiddlewares can be added to a router using `Router.Use()`:\n\nA more complex authentication middleware, which maps session token to users, could be written as:\n\nNote: The handler chain will be stopped if your middleware doesn't call `next.ServeHTTP()` with the corresponding parameters. This can be used to abort a request if the middleware writer wants to.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/mux@1.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/mux",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gorilla/mux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Gorilla Web Toolkit",
            "versionInfo": "1.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5b7d2328cffa936b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/websocket@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package websocket implements the WebSocket protocol defined in RFC 6455.\n\nThe Conn type represents a WebSocket connection. A server application calls\nthe Upgrader.Upgrade method from an HTTP request handler to get a *Conn:\n\nCall the connection's WriteMessage and ReadMessage methods to send and\nreceive messages as a slice of bytes. This snippet of code shows how to echo\nmessages using these methods:\n\nIn above snippet of code, p is a []byte and messageType is an int with value\nwebsocket.BinaryMessage or websocket.TextMessage.\n\nAn application can also send and receive messages using the io.WriteCloser\nand io.Reader interfaces. To send a message, call the connection NextWriter\nmethod to get an io.WriteCloser, write the message to the writer and close\nthe writer when done. To receive a message, call the connection NextReader\nmethod to get an io.Reader and read until io.EOF is returned. This snippet\nshows how to echo messages using the NextWriter and NextReader methods:\n\nThe WebSocket protocol distinguishes between text and binary data messages.\nText messages are interpreted as UTF-8 encoded text. The interpretation of\nbinary messages is left to the application.\n\nThis package uses the TextMessage and BinaryMessage integer constants to\nidentify the two data message types. The ReadMessage and NextReader methods\nreturn the type of the received message. The messageType argument to the\nWriteMessage and NextWriter methods specifies the type of a sent message.\n\nIt is the application's responsibility to ensure that text messages are\nvalid UTF-8 encoded text.\n\nThe WebSocket protocol defines three types of control messages: close, ping\nand pong. Call the connection WriteControl, WriteMessage or NextWriter\nmethods to send a control message to the peer.\n\nConnections handle received close messages by calling the handler function\nset with the SetCloseHandler method and by returning a *CloseError from the\nNextReader, ReadMessage or the message Read method. The default close\nhandler sends a close message to the peer.\n\nConnections handle received ping messages by calling the handler function\nset with the SetPingHandler method. The default ping handler sends a pong\nmessage to the peer.\n\nConnections handle received pong messages by calling the handler function\nset with the SetPongHandler method. The default pong handler does nothing.\nIf an application sends ping messages, then the application should set a\npong handler to receive the corresponding pong.\n\nThe control message handler functions are called from the NextReader,\nReadMessage and message reader Read methods. The default close and ping\nhandlers can block these methods for a short time when the handler writes to\nthe connection.\n\nThe application must read the connection to process close, ping and pong\nmessages sent from the peer. If the application is not otherwise interested\nin messages from the peer, then the application should start a goroutine to\nread and discard messages from the peer. A simple example is:\n\nConnections support one concurrent reader and one concurrent writer.\n\nApplications are responsible for ensuring that no more than one goroutine\ncalls the write methods (NextWriter, SetWriteDeadline, WriteMessage,\nWriteJSON, EnableWriteCompression, SetCompressionLevel) concurrently and\nthat no more than one goroutine calls the read methods (NextReader,\nSetReadDeadline, ReadMessage, ReadJSON, SetPongHandler, SetPingHandler)\nconcurrently.\n\nThe Close and WriteControl methods can be called concurrently with all other\nmethods.\n\nWeb browsers allow Javascript applications to open a WebSocket connection to\nany host. It's up to the server to enforce an origin policy using the Origin\nrequest header sent by the browser.\n\nThe Upgrader calls the function specified in the CheckOrigin field to check\nthe origin. If the CheckOrigin function returns false, then the Upgrade\nmethod fails the WebSocket handshake with HTTP status 403.\n\nIf the CheckOrigin field is nil, then the Upgrader uses a safe default: fail\nthe handshake if the Origin request header is present and the Origin host is\nnot equal to the Host request header.\n\nThe deprecated package-level Upgrade function does not perform origin\nchecking. The application is responsible for checking the Origin header\nbefore calling the Upgrade function.\n\nConnections buffer network input and output to reduce the number\nof system calls when reading or writing messages.\n\nWrite buffers are also used for constructing WebSocket frames. See RFC 6455,\nSection 5 for a discussion of message framing. A WebSocket frame header is\nwritten to the network each time a write buffer is flushed to the network.\nDecreasing the size of the write buffer can increase the amount of framing\noverhead on the connection.\n\nThe buffer sizes in bytes are specified by the ReadBufferSize and\nWriteBufferSize fields in the Dialer and Upgrader. The Dialer uses a default\nsize of 4096 when a buffer size field is set to zero. The Upgrader reuses\nbuffers created by the HTTP server when a buffer size field is set to zero.\nThe HTTP server buffers have a size of 4096 at the time of this writing.\n\nThe buffer sizes do not limit the size of a message that can be read or\nwritten by a connection.\n\nBuffers are held for the lifetime of the connection by default. If the\nDialer or Upgrader WriteBufferPool field is set, then a connection holds the\nwrite buffer only when writing a message.\n\nApplications should tune the buffer sizes to balance memory use and\nperformance. Increasing the buffer size uses more memory, but can reduce the\nnumber of system calls to read or write the network. In the case of writing,\nincreasing the buffer size can reduce the number of frame headers written to\nthe network.\n\nSome guidelines for setting buffer parameters are:\n\nLimit the buffer sizes to the maximum expected message size. Buffers larger\nthan the largest message do not provide any benefit.\n\nDepending on the distribution of message sizes, setting the buffer size to\na value less than the maximum expected message size can greatly reduce memory\nuse with a small impact on performance. Here's an example: If 99% of the\nmessages are smaller than 256 bytes and the maximum message size is 512\nbytes, then a buffer size of 256 bytes will result in 1.01 more system calls\nthan a buffer size of 512 bytes. The memory savings is 50%.\n\nA write buffer pool is useful when the application has a modest number\nwrites over a large number of connections. when buffers are pooled, a larger\nbuffer size has a reduced impact on total memory use and has the benefit of\nreducing system calls and frame overhead.\n\nPer message compression extensions (RFC 7692) are experimentally supported\nby this package in a limited capacity. Setting the EnableCompression option\nto true in Dialer or Upgrader will attempt to negotiate per message deflate\nsupport.\n\nIf compression was successfully negotiated with the connection's peer, any\nmessage received in compressed form will be automatically decompressed.\nAll Read methods will return uncompressed bytes.\n\nPer message compression of messages written to a connection can be enabled\nor disabled by calling the corresponding Conn method:\n\nCurrently this package does not support compression with \"context takeover\".\nThis means that messages must be compressed and decompressed in isolation,\nwithout retaining sliding window or dictionary state across messages. For\nmore details refer to RFC 7692.\n\nUse of compression is experimental and may result in decreased performance.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/websocket@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/websocket",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/gorilla/websocket",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Gorilla web toolkit",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5ee65dcf0e90eeee",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/websocket@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package websocket implements the WebSocket protocol defined in RFC 6455.\n\nThe Conn type represents a WebSocket connection. A server application calls\nthe Upgrader.Upgrade method from an HTTP request handler to get a *Conn:\n\nCall the connection's WriteMessage and ReadMessage methods to send and\nreceive messages as a slice of bytes. This snippet of code shows how to echo\nmessages using these methods:\n\nIn above snippet of code, p is a []byte and messageType is an int with value\nwebsocket.BinaryMessage or websocket.TextMessage.\n\nAn application can also send and receive messages using the io.WriteCloser\nand io.Reader interfaces. To send a message, call the connection NextWriter\nmethod to get an io.WriteCloser, write the message to the writer and close\nthe writer when done. To receive a message, call the connection NextReader\nmethod to get an io.Reader and read until io.EOF is returned. This snippet\nshows how to echo messages using the NextWriter and NextReader methods:\n\nThe WebSocket protocol distinguishes between text and binary data messages.\nText messages are interpreted as UTF-8 encoded text. The interpretation of\nbinary messages is left to the application.\n\nThis package uses the TextMessage and BinaryMessage integer constants to\nidentify the two data message types. The ReadMessage and NextReader methods\nreturn the type of the received message. The messageType argument to the\nWriteMessage and NextWriter methods specifies the type of a sent message.\n\nIt is the application's responsibility to ensure that text messages are\nvalid UTF-8 encoded text.\n\nThe WebSocket protocol defines three types of control messages: close, ping\nand pong. Call the connection WriteControl, WriteMessage or NextWriter\nmethods to send a control message to the peer.\n\nConnections handle received close messages by calling the handler function\nset with the SetCloseHandler method and by returning a *CloseError from the\nNextReader, ReadMessage or the message Read method. The default close\nhandler sends a close message to the peer.\n\nConnections handle received ping messages by calling the handler function\nset with the SetPingHandler method. The default ping handler sends a pong\nmessage to the peer.\n\nConnections handle received pong messages by calling the handler function\nset with the SetPongHandler method. The default pong handler does nothing.\nIf an application sends ping messages, then the application should set a\npong handler to receive the corresponding pong.\n\nThe control message handler functions are called from the NextReader,\nReadMessage and message reader Read methods. The default close and ping\nhandlers can block these methods for a short time when the handler writes to\nthe connection.\n\nThe application must read the connection to process close, ping and pong\nmessages sent from the peer. If the application is not otherwise interested\nin messages from the peer, then the application should start a goroutine to\nread and discard messages from the peer. A simple example is:\n\nConnections support one concurrent reader and one concurrent writer.\n\nApplications are responsible for ensuring that no more than one goroutine\ncalls the write methods (NextWriter, SetWriteDeadline, WriteMessage,\nWriteJSON, EnableWriteCompression, SetCompressionLevel) concurrently and\nthat no more than one goroutine calls the read methods (NextReader,\nSetReadDeadline, ReadMessage, ReadJSON, SetPongHandler, SetPingHandler)\nconcurrently.\n\nThe Close and WriteControl methods can be called concurrently with all other\nmethods.\n\nWeb browsers allow Javascript applications to open a WebSocket connection to\nany host. It's up to the server to enforce an origin policy using the Origin\nrequest header sent by the browser.\n\nThe Upgrader calls the function specified in the CheckOrigin field to check\nthe origin. If the CheckOrigin function returns false, then the Upgrade\nmethod fails the WebSocket handshake with HTTP status 403.\n\nIf the CheckOrigin field is nil, then the Upgrader uses a safe default: fail\nthe handshake if the Origin request header is present and the Origin host is\nnot equal to the Host request header.\n\nThe deprecated package-level Upgrade function does not perform origin\nchecking. The application is responsible for checking the Origin header\nbefore calling the Upgrade function.\n\nConnections buffer network input and output to reduce the number\nof system calls when reading or writing messages.\n\nWrite buffers are also used for constructing WebSocket frames. See RFC 6455,\nSection 5 for a discussion of message framing. A WebSocket frame header is\nwritten to the network each time a write buffer is flushed to the network.\nDecreasing the size of the write buffer can increase the amount of framing\noverhead on the connection.\n\nThe buffer sizes in bytes are specified by the ReadBufferSize and\nWriteBufferSize fields in the Dialer and Upgrader. The Dialer uses a default\nsize of 4096 when a buffer size field is set to zero. The Upgrader reuses\nbuffers created by the HTTP server when a buffer size field is set to zero.\nThe HTTP server buffers have a size of 4096 at the time of this writing.\n\nThe buffer sizes do not limit the size of a message that can be read or\nwritten by a connection.\n\nBuffers are held for the lifetime of the connection by default. If the\nDialer or Upgrader WriteBufferPool field is set, then a connection holds the\nwrite buffer only when writing a message.\n\nApplications should tune the buffer sizes to balance memory use and\nperformance. Increasing the buffer size uses more memory, but can reduce the\nnumber of system calls to read or write the network. In the case of writing,\nincreasing the buffer size can reduce the number of frame headers written to\nthe network.\n\nSome guidelines for setting buffer parameters are:\n\nLimit the buffer sizes to the maximum expected message size. Buffers larger\nthan the largest message do not provide any benefit.\n\nDepending on the distribution of message sizes, setting the buffer size to\na value less than the maximum expected message size can greatly reduce memory\nuse with a small impact on performance. Here's an example: If 99% of the\nmessages are smaller than 256 bytes and the maximum message size is 512\nbytes, then a buffer size of 256 bytes will result in 1.01 more system calls\nthan a buffer size of 512 bytes. The memory savings is 50%.\n\nA write buffer pool is useful when the application has a modest number\nwrites over a large number of connections. when buffers are pooled, a larger\nbuffer size has a reduced impact on total memory use and has the benefit of\nreducing system calls and frame overhead.\n\nPer message compression extensions (RFC 7692) are experimentally supported\nby this package in a limited capacity. Setting the EnableCompression option\nto true in Dialer or Upgrader will attempt to negotiate per message deflate\nsupport.\n\nIf compression was successfully negotiated with the connection's peer, any\nmessage received in compressed form will be automatically decompressed.\nAll Read methods will return uncompressed bytes.\n\nPer message compression of messages written to a connection can be enabled\nor disabled by calling the corresponding Conn method:\n\nCurrently this package does not support compression with \"context takeover\".\nThis means that messages must be compressed and decompressed in isolation,\nwithout retaining sliding window or dictionary state across messages. For\nmore details refer to RFC 7692.\n\nUse of compression is experimental and may result in decreased performance.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/websocket@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/websocket",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/gorilla/websocket",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Gorilla web toolkit",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b410fc7c9af5605b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/websocket@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package websocket implements the WebSocket protocol defined in RFC 6455.\n\nThe Conn type represents a WebSocket connection. A server application calls\nthe Upgrader.Upgrade method from an HTTP request handler to get a *Conn:\n\nCall the connection's WriteMessage and ReadMessage methods to send and\nreceive messages as a slice of bytes. This snippet of code shows how to echo\nmessages using these methods:\n\nIn above snippet of code, p is a []byte and messageType is an int with value\nwebsocket.BinaryMessage or websocket.TextMessage.\n\nAn application can also send and receive messages using the io.WriteCloser\nand io.Reader interfaces. To send a message, call the connection NextWriter\nmethod to get an io.WriteCloser, write the message to the writer and close\nthe writer when done. To receive a message, call the connection NextReader\nmethod to get an io.Reader and read until io.EOF is returned. This snippet\nshows how to echo messages using the NextWriter and NextReader methods:\n\nThe WebSocket protocol distinguishes between text and binary data messages.\nText messages are interpreted as UTF-8 encoded text. The interpretation of\nbinary messages is left to the application.\n\nThis package uses the TextMessage and BinaryMessage integer constants to\nidentify the two data message types. The ReadMessage and NextReader methods\nreturn the type of the received message. The messageType argument to the\nWriteMessage and NextWriter methods specifies the type of a sent message.\n\nIt is the application's responsibility to ensure that text messages are\nvalid UTF-8 encoded text.\n\nThe WebSocket protocol defines three types of control messages: close, ping\nand pong. Call the connection WriteControl, WriteMessage or NextWriter\nmethods to send a control message to the peer.\n\nConnections handle received close messages by calling the handler function\nset with the SetCloseHandler method and by returning a *CloseError from the\nNextReader, ReadMessage or the message Read method. The default close\nhandler sends a close message to the peer.\n\nConnections handle received ping messages by calling the handler function\nset with the SetPingHandler method. The default ping handler sends a pong\nmessage to the peer.\n\nConnections handle received pong messages by calling the handler function\nset with the SetPongHandler method. The default pong handler does nothing.\nIf an application sends ping messages, then the application should set a\npong handler to receive the corresponding pong.\n\nThe control message handler functions are called from the NextReader,\nReadMessage and message reader Read methods. The default close and ping\nhandlers can block these methods for a short time when the handler writes to\nthe connection.\n\nThe application must read the connection to process close, ping and pong\nmessages sent from the peer. If the application is not otherwise interested\nin messages from the peer, then the application should start a goroutine to\nread and discard messages from the peer. A simple example is:\n\nConnections support one concurrent reader and one concurrent writer.\n\nApplications are responsible for ensuring that no more than one goroutine\ncalls the write methods (NextWriter, SetWriteDeadline, WriteMessage,\nWriteJSON, EnableWriteCompression, SetCompressionLevel) concurrently and\nthat no more than one goroutine calls the read methods (NextReader,\nSetReadDeadline, ReadMessage, ReadJSON, SetPongHandler, SetPingHandler)\nconcurrently.\n\nThe Close and WriteControl methods can be called concurrently with all other\nmethods.\n\nWeb browsers allow Javascript applications to open a WebSocket connection to\nany host. It's up to the server to enforce an origin policy using the Origin\nrequest header sent by the browser.\n\nThe Upgrader calls the function specified in the CheckOrigin field to check\nthe origin. If the CheckOrigin function returns false, then the Upgrade\nmethod fails the WebSocket handshake with HTTP status 403.\n\nIf the CheckOrigin field is nil, then the Upgrader uses a safe default: fail\nthe handshake if the Origin request header is present and the Origin host is\nnot equal to the Host request header.\n\nThe deprecated package-level Upgrade function does not perform origin\nchecking. The application is responsible for checking the Origin header\nbefore calling the Upgrade function.\n\nConnections buffer network input and output to reduce the number\nof system calls when reading or writing messages.\n\nWrite buffers are also used for constructing WebSocket frames. See RFC 6455,\nSection 5 for a discussion of message framing. A WebSocket frame header is\nwritten to the network each time a write buffer is flushed to the network.\nDecreasing the size of the write buffer can increase the amount of framing\noverhead on the connection.\n\nThe buffer sizes in bytes are specified by the ReadBufferSize and\nWriteBufferSize fields in the Dialer and Upgrader. The Dialer uses a default\nsize of 4096 when a buffer size field is set to zero. The Upgrader reuses\nbuffers created by the HTTP server when a buffer size field is set to zero.\nThe HTTP server buffers have a size of 4096 at the time of this writing.\n\nThe buffer sizes do not limit the size of a message that can be read or\nwritten by a connection.\n\nBuffers are held for the lifetime of the connection by default. If the\nDialer or Upgrader WriteBufferPool field is set, then a connection holds the\nwrite buffer only when writing a message.\n\nApplications should tune the buffer sizes to balance memory use and\nperformance. Increasing the buffer size uses more memory, but can reduce the\nnumber of system calls to read or write the network. In the case of writing,\nincreasing the buffer size can reduce the number of frame headers written to\nthe network.\n\nSome guidelines for setting buffer parameters are:\n\nLimit the buffer sizes to the maximum expected message size. Buffers larger\nthan the largest message do not provide any benefit.\n\nDepending on the distribution of message sizes, setting the buffer size to\na value less than the maximum expected message size can greatly reduce memory\nuse with a small impact on performance. Here's an example: If 99% of the\nmessages are smaller than 256 bytes and the maximum message size is 512\nbytes, then a buffer size of 256 bytes will result in 1.01 more system calls\nthan a buffer size of 512 bytes. The memory savings is 50%.\n\nA write buffer pool is useful when the application has a modest number\nwrites over a large number of connections. when buffers are pooled, a larger\nbuffer size has a reduced impact on total memory use and has the benefit of\nreducing system calls and frame overhead.\n\nPer message compression extensions (RFC 7692) are experimentally supported\nby this package in a limited capacity. Setting the EnableCompression option\nto true in Dialer or Upgrader will attempt to negotiate per message deflate\nsupport.\n\nIf compression was successfully negotiated with the connection's peer, any\nmessage received in compressed form will be automatically decompressed.\nAll Read methods will return uncompressed bytes.\n\nPer message compression of messages written to a connection can be enabled\nor disabled by calling the corresponding Conn method:\n\nCurrently this package does not support compression with \"context takeover\".\nThis means that messages must be compressed and decompressed in isolation,\nwithout retaining sliding window or dictionary state across messages. For\nmore details refer to RFC 7692.\n\nUse of compression is experimental and may result in decreased performance.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/websocket@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/websocket",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/gorilla/websocket",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Gorilla web toolkit",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-dcb6f6dfd255fdfc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/websocket@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package websocket implements the WebSocket protocol defined in RFC 6455.\n\nThe Conn type represents a WebSocket connection. A server application calls\nthe Upgrader.Upgrade method from an HTTP request handler to get a *Conn:\n\nCall the connection's WriteMessage and ReadMessage methods to send and\nreceive messages as a slice of bytes. This snippet of code shows how to echo\nmessages using these methods:\n\nIn above snippet of code, p is a []byte and messageType is an int with value\nwebsocket.BinaryMessage or websocket.TextMessage.\n\nAn application can also send and receive messages using the io.WriteCloser\nand io.Reader interfaces. To send a message, call the connection NextWriter\nmethod to get an io.WriteCloser, write the message to the writer and close\nthe writer when done. To receive a message, call the connection NextReader\nmethod to get an io.Reader and read until io.EOF is returned. This snippet\nshows how to echo messages using the NextWriter and NextReader methods:\n\nThe WebSocket protocol distinguishes between text and binary data messages.\nText messages are interpreted as UTF-8 encoded text. The interpretation of\nbinary messages is left to the application.\n\nThis package uses the TextMessage and BinaryMessage integer constants to\nidentify the two data message types. The ReadMessage and NextReader methods\nreturn the type of the received message. The messageType argument to the\nWriteMessage and NextWriter methods specifies the type of a sent message.\n\nIt is the application's responsibility to ensure that text messages are\nvalid UTF-8 encoded text.\n\nThe WebSocket protocol defines three types of control messages: close, ping\nand pong. Call the connection WriteControl, WriteMessage or NextWriter\nmethods to send a control message to the peer.\n\nConnections handle received close messages by calling the handler function\nset with the SetCloseHandler method and by returning a *CloseError from the\nNextReader, ReadMessage or the message Read method. The default close\nhandler sends a close message to the peer.\n\nConnections handle received ping messages by calling the handler function\nset with the SetPingHandler method. The default ping handler sends a pong\nmessage to the peer.\n\nConnections handle received pong messages by calling the handler function\nset with the SetPongHandler method. The default pong handler does nothing.\nIf an application sends ping messages, then the application should set a\npong handler to receive the corresponding pong.\n\nThe control message handler functions are called from the NextReader,\nReadMessage and message reader Read methods. The default close and ping\nhandlers can block these methods for a short time when the handler writes to\nthe connection.\n\nThe application must read the connection to process close, ping and pong\nmessages sent from the peer. If the application is not otherwise interested\nin messages from the peer, then the application should start a goroutine to\nread and discard messages from the peer. A simple example is:\n\nConnections support one concurrent reader and one concurrent writer.\n\nApplications are responsible for ensuring that no more than one goroutine\ncalls the write methods (NextWriter, SetWriteDeadline, WriteMessage,\nWriteJSON, EnableWriteCompression, SetCompressionLevel) concurrently and\nthat no more than one goroutine calls the read methods (NextReader,\nSetReadDeadline, ReadMessage, ReadJSON, SetPongHandler, SetPingHandler)\nconcurrently.\n\nThe Close and WriteControl methods can be called concurrently with all other\nmethods.\n\nWeb browsers allow Javascript applications to open a WebSocket connection to\nany host. It's up to the server to enforce an origin policy using the Origin\nrequest header sent by the browser.\n\nThe Upgrader calls the function specified in the CheckOrigin field to check\nthe origin. If the CheckOrigin function returns false, then the Upgrade\nmethod fails the WebSocket handshake with HTTP status 403.\n\nIf the CheckOrigin field is nil, then the Upgrader uses a safe default: fail\nthe handshake if the Origin request header is present and the Origin host is\nnot equal to the Host request header.\n\nThe deprecated package-level Upgrade function does not perform origin\nchecking. The application is responsible for checking the Origin header\nbefore calling the Upgrade function.\n\nConnections buffer network input and output to reduce the number\nof system calls when reading or writing messages.\n\nWrite buffers are also used for constructing WebSocket frames. See RFC 6455,\nSection 5 for a discussion of message framing. A WebSocket frame header is\nwritten to the network each time a write buffer is flushed to the network.\nDecreasing the size of the write buffer can increase the amount of framing\noverhead on the connection.\n\nThe buffer sizes in bytes are specified by the ReadBufferSize and\nWriteBufferSize fields in the Dialer and Upgrader. The Dialer uses a default\nsize of 4096 when a buffer size field is set to zero. The Upgrader reuses\nbuffers created by the HTTP server when a buffer size field is set to zero.\nThe HTTP server buffers have a size of 4096 at the time of this writing.\n\nThe buffer sizes do not limit the size of a message that can be read or\nwritten by a connection.\n\nBuffers are held for the lifetime of the connection by default. If the\nDialer or Upgrader WriteBufferPool field is set, then a connection holds the\nwrite buffer only when writing a message.\n\nApplications should tune the buffer sizes to balance memory use and\nperformance. Increasing the buffer size uses more memory, but can reduce the\nnumber of system calls to read or write the network. In the case of writing,\nincreasing the buffer size can reduce the number of frame headers written to\nthe network.\n\nSome guidelines for setting buffer parameters are:\n\nLimit the buffer sizes to the maximum expected message size. Buffers larger\nthan the largest message do not provide any benefit.\n\nDepending on the distribution of message sizes, setting the buffer size to\na value less than the maximum expected message size can greatly reduce memory\nuse with a small impact on performance. Here's an example: If 99% of the\nmessages are smaller than 256 bytes and the maximum message size is 512\nbytes, then a buffer size of 256 bytes will result in 1.01 more system calls\nthan a buffer size of 512 bytes. The memory savings is 50%.\n\nA write buffer pool is useful when the application has a modest number\nwrites over a large number of connections. when buffers are pooled, a larger\nbuffer size has a reduced impact on total memory use and has the benefit of\nreducing system calls and frame overhead.\n\nPer message compression extensions (RFC 7692) are experimentally supported\nby this package in a limited capacity. Setting the EnableCompression option\nto true in Dialer or Upgrader will attempt to negotiate per message deflate\nsupport.\n\nIf compression was successfully negotiated with the connection's peer, any\nmessage received in compressed form will be automatically decompressed.\nAll Read methods will return uncompressed bytes.\n\nPer message compression of messages written to a connection can be enabled\nor disabled by calling the corresponding Conn method:\n\nCurrently this package does not support compression with \"context takeover\".\nThis means that messages must be compressed and decompressed in isolation,\nwithout retaining sliding window or dictionary state across messages. For\nmore details refer to RFC 7692.\n\nUse of compression is experimental and may result in decreased performance.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/websocket@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/websocket",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/gorilla/websocket",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Gorilla web toolkit",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e70572c59c2e170e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gorilla/websocket@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package websocket implements the WebSocket protocol defined in RFC 6455.\n\nThe Conn type represents a WebSocket connection. A server application calls\nthe Upgrader.Upgrade method from an HTTP request handler to get a *Conn:\n\nCall the connection's WriteMessage and ReadMessage methods to send and\nreceive messages as a slice of bytes. This snippet of code shows how to echo\nmessages using these methods:\n\nIn above snippet of code, p is a []byte and messageType is an int with value\nwebsocket.BinaryMessage or websocket.TextMessage.\n\nAn application can also send and receive messages using the io.WriteCloser\nand io.Reader interfaces. To send a message, call the connection NextWriter\nmethod to get an io.WriteCloser, write the message to the writer and close\nthe writer when done. To receive a message, call the connection NextReader\nmethod to get an io.Reader and read until io.EOF is returned. This snippet\nshows how to echo messages using the NextWriter and NextReader methods:\n\nThe WebSocket protocol distinguishes between text and binary data messages.\nText messages are interpreted as UTF-8 encoded text. The interpretation of\nbinary messages is left to the application.\n\nThis package uses the TextMessage and BinaryMessage integer constants to\nidentify the two data message types. The ReadMessage and NextReader methods\nreturn the type of the received message. The messageType argument to the\nWriteMessage and NextWriter methods specifies the type of a sent message.\n\nIt is the application's responsibility to ensure that text messages are\nvalid UTF-8 encoded text.\n\nThe WebSocket protocol defines three types of control messages: close, ping\nand pong. Call the connection WriteControl, WriteMessage or NextWriter\nmethods to send a control message to the peer.\n\nConnections handle received close messages by calling the handler function\nset with the SetCloseHandler method and by returning a *CloseError from the\nNextReader, ReadMessage or the message Read method. The default close\nhandler sends a close message to the peer.\n\nConnections handle received ping messages by calling the handler function\nset with the SetPingHandler method. The default ping handler sends a pong\nmessage to the peer.\n\nConnections handle received pong messages by calling the handler function\nset with the SetPongHandler method. The default pong handler does nothing.\nIf an application sends ping messages, then the application should set a\npong handler to receive the corresponding pong.\n\nThe control message handler functions are called from the NextReader,\nReadMessage and message reader Read methods. The default close and ping\nhandlers can block these methods for a short time when the handler writes to\nthe connection.\n\nThe application must read the connection to process close, ping and pong\nmessages sent from the peer. If the application is not otherwise interested\nin messages from the peer, then the application should start a goroutine to\nread and discard messages from the peer. A simple example is:\n\nConnections support one concurrent reader and one concurrent writer.\n\nApplications are responsible for ensuring that no more than one goroutine\ncalls the write methods (NextWriter, SetWriteDeadline, WriteMessage,\nWriteJSON, EnableWriteCompression, SetCompressionLevel) concurrently and\nthat no more than one goroutine calls the read methods (NextReader,\nSetReadDeadline, ReadMessage, ReadJSON, SetPongHandler, SetPingHandler)\nconcurrently.\n\nThe Close and WriteControl methods can be called concurrently with all other\nmethods.\n\nWeb browsers allow Javascript applications to open a WebSocket connection to\nany host. It's up to the server to enforce an origin policy using the Origin\nrequest header sent by the browser.\n\nThe Upgrader calls the function specified in the CheckOrigin field to check\nthe origin. If the CheckOrigin function returns false, then the Upgrade\nmethod fails the WebSocket handshake with HTTP status 403.\n\nIf the CheckOrigin field is nil, then the Upgrader uses a safe default: fail\nthe handshake if the Origin request header is present and the Origin host is\nnot equal to the Host request header.\n\nThe deprecated package-level Upgrade function does not perform origin\nchecking. The application is responsible for checking the Origin header\nbefore calling the Upgrade function.\n\nConnections buffer network input and output to reduce the number\nof system calls when reading or writing messages.\n\nWrite buffers are also used for constructing WebSocket frames. See RFC 6455,\nSection 5 for a discussion of message framing. A WebSocket frame header is\nwritten to the network each time a write buffer is flushed to the network.\nDecreasing the size of the write buffer can increase the amount of framing\noverhead on the connection.\n\nThe buffer sizes in bytes are specified by the ReadBufferSize and\nWriteBufferSize fields in the Dialer and Upgrader. The Dialer uses a default\nsize of 4096 when a buffer size field is set to zero. The Upgrader reuses\nbuffers created by the HTTP server when a buffer size field is set to zero.\nThe HTTP server buffers have a size of 4096 at the time of this writing.\n\nThe buffer sizes do not limit the size of a message that can be read or\nwritten by a connection.\n\nBuffers are held for the lifetime of the connection by default. If the\nDialer or Upgrader WriteBufferPool field is set, then a connection holds the\nwrite buffer only when writing a message.\n\nApplications should tune the buffer sizes to balance memory use and\nperformance. Increasing the buffer size uses more memory, but can reduce the\nnumber of system calls to read or write the network. In the case of writing,\nincreasing the buffer size can reduce the number of frame headers written to\nthe network.\n\nSome guidelines for setting buffer parameters are:\n\nLimit the buffer sizes to the maximum expected message size. Buffers larger\nthan the largest message do not provide any benefit.\n\nDepending on the distribution of message sizes, setting the buffer size to\na value less than the maximum expected message size can greatly reduce memory\nuse with a small impact on performance. Here's an example: If 99% of the\nmessages are smaller than 256 bytes and the maximum message size is 512\nbytes, then a buffer size of 256 bytes will result in 1.01 more system calls\nthan a buffer size of 512 bytes. The memory savings is 50%.\n\nA write buffer pool is useful when the application has a modest number\nwrites over a large number of connections. when buffers are pooled, a larger\nbuffer size has a reduced impact on total memory use and has the benefit of\nreducing system calls and frame overhead.\n\nPer message compression extensions (RFC 7692) are experimentally supported\nby this package in a limited capacity. Setting the EnableCompression option\nto true in Dialer or Upgrader will attempt to negotiate per message deflate\nsupport.\n\nIf compression was successfully negotiated with the connection's peer, any\nmessage received in compressed form will be automatically decompressed.\nAll Read methods will return uncompressed bytes.\n\nPer message compression of messages written to a connection can be enabled\nor disabled by calling the corresponding Conn method:\n\nCurrently this package does not support compression with \"context takeover\".\nThis means that messages must be compressed and decompressed in isolation,\nwithout retaining sliding window or dictionary state across messages. For\nmore details refer to RFC 7692.\n\nUse of compression is experimental and may result in decreased performance.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gorilla/websocket@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gorilla/websocket",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/gorilla/websocket",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Gorilla web toolkit",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b268a766ee63def9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gosuri/uitable@v0.0.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package uitable provides a decorator for formating data as a table",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gosuri/uitable@0.0.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gosuri/uitable",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/gosuri/uitable",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Greg Osuri",
            "versionInfo": "0.0.4"
        },
        {
            "SPDXID": "SPDXRef-Package-afc706b6ca32c637",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gregjones/httpcache@v0.0.0-20180305231024-9cad4c3443a7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package httpcache provides a http.RoundTripper implementation that works as a\nmostly RFC-compliant cache for http responses.\n\nIt is only suitable for use as a 'private' cache (i.e. for a web-browser or an API-client\nand not for a shared proxy).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gregjones/httpcache@0.0.0-20180305231024-9cad4c3443a7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gregjones/httpcache",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/gregjones/httpcache",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Greg Jones",
            "versionInfo": "0.0.0-20180305231024-9cad4c3443a7"
        },
        {
            "SPDXID": "SPDXRef-Package-27f870cdf73e5acd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/go-grpc-middleware@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "`grpc_middleware` is a collection of gRPC middleware packages: interceptors, helpers and tools.\n\ngRPC is a fantastic RPC middleware, which sees a lot of adoption in the Golang world. However, the\nupstream gRPC codebase is relatively bare bones.\n\nThis package, and most of its child packages provides commonly needed middleware for gRPC:\nclient-side interceptors for retires, server-side interceptors for input validation and auth,\nfunctions for chaining said interceptors, metadata convenience methods and more.\n\nBy default, gRPC doesn't allow one to have more than one interceptor either on the client nor on\nthe server side. `grpc_middleware` provides convenient chaining methods\n\nSimple way of turning a multiple interceptors into a single interceptor. Here's an example for\nserver chaining:\n\nThese interceptors will be executed from left to right: logging, monitoring and auth.\n\nHere's an example for client side chaining:\n\nThese interceptors will be executed from left to right: monitoring and then retry logic.\n\nThe retry interceptor will call every interceptor that follows it whenever when a retry happens.\n\nImplementing your own interceptor is pretty trivial: there are interfaces for that. But the interesting\nbit exposing common data to handlers (and other middleware), similarly to HTTP Middleware design.\nFor example, you may want to pass the identity of the caller from the auth interceptor all the way\nto the handling function.\n\nFor example, a client side interceptor example for auth looks like:\n\nUnfortunately, it's not as easy for streaming RPCs. These have the `context.Context` embedded within\nthe `grpc.ServerStream` object. To pass values through context, a wrapper (`WrappedServerStream`) is\nneeded. For example:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/go-grpc-middleware@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/go-grpc-middleware",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/grpc-ecosystem/go-grpc-middleware",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5980ddcbe71ba4c2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/go-grpc-middleware@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "`grpc_middleware` is a collection of gRPC middleware packages: interceptors, helpers and tools.\n\ngRPC is a fantastic RPC middleware, which sees a lot of adoption in the Golang world. However, the\nupstream gRPC codebase is relatively bare bones.\n\nThis package, and most of its child packages provides commonly needed middleware for gRPC:\nclient-side interceptors for retires, server-side interceptors for input validation and auth,\nfunctions for chaining said interceptors, metadata convenience methods and more.\n\nBy default, gRPC doesn't allow one to have more than one interceptor either on the client nor on\nthe server side. `grpc_middleware` provides convenient chaining methods\n\nSimple way of turning a multiple interceptors into a single interceptor. Here's an example for\nserver chaining:\n\nThese interceptors will be executed from left to right: logging, monitoring and auth.\n\nHere's an example for client side chaining:\n\nThese interceptors will be executed from left to right: monitoring and then retry logic.\n\nThe retry interceptor will call every interceptor that follows it whenever when a retry happens.\n\nImplementing your own interceptor is pretty trivial: there are interfaces for that. But the interesting\nbit exposing common data to handlers (and other middleware), similarly to HTTP Middleware design.\nFor example, you may want to pass the identity of the caller from the auth interceptor all the way\nto the handling function.\n\nFor example, a client side interceptor example for auth looks like:\n\nUnfortunately, it's not as easy for streaming RPCs. These have the `context.Context` embedded within\nthe `grpc.ServerStream` object. To pass values through context, a wrapper (`WrappedServerStream`) is\nneeded. For example:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/go-grpc-middleware@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/go-grpc-middleware",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/grpc-ecosystem/go-grpc-middleware",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7ce38a3abb8210c1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/go-grpc-middleware@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "`grpc_middleware` is a collection of gRPC middleware packages: interceptors, helpers and tools.\n\ngRPC is a fantastic RPC middleware, which sees a lot of adoption in the Golang world. However, the\nupstream gRPC codebase is relatively bare bones.\n\nThis package, and most of its child packages provides commonly needed middleware for gRPC:\nclient-side interceptors for retires, server-side interceptors for input validation and auth,\nfunctions for chaining said interceptors, metadata convenience methods and more.\n\nBy default, gRPC doesn't allow one to have more than one interceptor either on the client nor on\nthe server side. `grpc_middleware` provides convenient chaining methods\n\nSimple way of turning a multiple interceptors into a single interceptor. Here's an example for\nserver chaining:\n\nThese interceptors will be executed from left to right: logging, monitoring and auth.\n\nHere's an example for client side chaining:\n\nThese interceptors will be executed from left to right: monitoring and then retry logic.\n\nThe retry interceptor will call every interceptor that follows it whenever when a retry happens.\n\nImplementing your own interceptor is pretty trivial: there are interfaces for that. But the interesting\nbit exposing common data to handlers (and other middleware), similarly to HTTP Middleware design.\nFor example, you may want to pass the identity of the caller from the auth interceptor all the way\nto the handling function.\n\nFor example, a client side interceptor example for auth looks like:\n\nUnfortunately, it's not as easy for streaming RPCs. These have the `context.Context` embedded within\nthe `grpc.ServerStream` object. To pass values through context, a wrapper (`WrappedServerStream`) is\nneeded. For example:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/go-grpc-middleware@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/go-grpc-middleware",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/grpc-ecosystem/go-grpc-middleware",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7e950e00c5f6d134",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/go-grpc-middleware@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "`grpc_middleware` is a collection of gRPC middleware packages: interceptors, helpers and tools.\n\ngRPC is a fantastic RPC middleware, which sees a lot of adoption in the Golang world. However, the\nupstream gRPC codebase is relatively bare bones.\n\nThis package, and most of its child packages provides commonly needed middleware for gRPC:\nclient-side interceptors for retires, server-side interceptors for input validation and auth,\nfunctions for chaining said interceptors, metadata convenience methods and more.\n\nBy default, gRPC doesn't allow one to have more than one interceptor either on the client nor on\nthe server side. `grpc_middleware` provides convenient chaining methods\n\nSimple way of turning a multiple interceptors into a single interceptor. Here's an example for\nserver chaining:\n\nThese interceptors will be executed from left to right: logging, monitoring and auth.\n\nHere's an example for client side chaining:\n\nThese interceptors will be executed from left to right: monitoring and then retry logic.\n\nThe retry interceptor will call every interceptor that follows it whenever when a retry happens.\n\nImplementing your own interceptor is pretty trivial: there are interfaces for that. But the interesting\nbit exposing common data to handlers (and other middleware), similarly to HTTP Middleware design.\nFor example, you may want to pass the identity of the caller from the auth interceptor all the way\nto the handling function.\n\nFor example, a client side interceptor example for auth looks like:\n\nUnfortunately, it's not as easy for streaming RPCs. These have the `context.Context` embedded within\nthe `grpc.ServerStream` object. To pass values through context, a wrapper (`WrappedServerStream`) is\nneeded. For example:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/go-grpc-middleware@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/go-grpc-middleware",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/grpc-ecosystem/go-grpc-middleware",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ecaa8cf3f76e384f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/go-grpc-middleware@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "`grpc_middleware` is a collection of gRPC middleware packages: interceptors, helpers and tools.\n\ngRPC is a fantastic RPC middleware, which sees a lot of adoption in the Golang world. However, the\nupstream gRPC codebase is relatively bare bones.\n\nThis package, and most of its child packages provides commonly needed middleware for gRPC:\nclient-side interceptors for retires, server-side interceptors for input validation and auth,\nfunctions for chaining said interceptors, metadata convenience methods and more.\n\nBy default, gRPC doesn't allow one to have more than one interceptor either on the client nor on\nthe server side. `grpc_middleware` provides convenient chaining methods\n\nSimple way of turning a multiple interceptors into a single interceptor. Here's an example for\nserver chaining:\n\nThese interceptors will be executed from left to right: logging, monitoring and auth.\n\nHere's an example for client side chaining:\n\nThese interceptors will be executed from left to right: monitoring and then retry logic.\n\nThe retry interceptor will call every interceptor that follows it whenever when a retry happens.\n\nImplementing your own interceptor is pretty trivial: there are interfaces for that. But the interesting\nbit exposing common data to handlers (and other middleware), similarly to HTTP Middleware design.\nFor example, you may want to pass the identity of the caller from the auth interceptor all the way\nto the handling function.\n\nFor example, a client side interceptor example for auth looks like:\n\nUnfortunately, it's not as easy for streaming RPCs. These have the `context.Context` embedded within\nthe `grpc.ServerStream` object. To pass values through context, a wrapper (`WrappedServerStream`) is\nneeded. For example:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/go-grpc-middleware@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/go-grpc-middleware",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/grpc-ecosystem/go-grpc-middleware",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3aa3689bcffce799",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/go-grpc-prometheus@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/go-grpc-prometheus@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/go-grpc-prometheus",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/grpc-ecosystem/go-grpc-prometheus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-46ba61a13d02ade7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/go-grpc-prometheus@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/go-grpc-prometheus@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/go-grpc-prometheus",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/grpc-ecosystem/go-grpc-prometheus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8149c39bc044974a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/go-grpc-prometheus@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/go-grpc-prometheus@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/go-grpc-prometheus",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/grpc-ecosystem/go-grpc-prometheus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f9ca0be06ce00cf1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/go-grpc-prometheus@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/go-grpc-prometheus@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/go-grpc-prometheus",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/grpc-ecosystem/go-grpc-prometheus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fef67622805a1def",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/go-grpc-prometheus@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/go-grpc-prometheus@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/go-grpc-prometheus",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/grpc-ecosystem/go-grpc-prometheus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1bc8b846e8bbe77a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/grpc-gateway@v1.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/grpc-gateway@1.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/grpc-gateway",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/grpc-ecosystem/grpc-gateway",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-235adefd0700b5e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/grpc-gateway@v1.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/grpc-gateway@1.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/grpc-gateway",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/grpc-ecosystem/grpc-gateway",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3eec46c909ea13ed",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/grpc-gateway@v1.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/grpc-gateway@1.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/grpc-gateway",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/grpc-ecosystem/grpc-gateway",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d13c91b1699b05b9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/grpc-gateway@v1.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/grpc-gateway@1.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/grpc-gateway",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/grpc-ecosystem/grpc-gateway",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-dc182d090be15964",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/grpc-ecosystem/grpc-gateway@v1.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/grpc-ecosystem/grpc-gateway@1.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc-ecosystem/grpc-gateway",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/grpc-ecosystem/grpc-gateway",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: gRPC Ecosystem",
            "versionInfo": "1.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-310cce76f2d05fe9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4c2abd6324a3091",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-500fda77f411deb6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-89b919cf47d8da61",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8d32d8826cfd6659",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-966af6870b6842f9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a705dcf2c99fa99c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a93f87263bec52a9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c96a2974a120995c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-cacafadefda1d181",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-cde95afe005f58bb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e913b5be68721a50",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hashicorp/hcl@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package hcl decodes HCL into usable Go structures.\n\nhcl input can come in either pure HCL format or JSON format.\nIt can be parsed into an AST, and then decoded into a structure,\nor it can be decoded directly from a string into a structure.\n\nIf you choose to parse HCL into a raw AST, the benefit is that you\ncan write custom visitor implementations to implement custom\nsemantic checks. By default, HCL does not perform any semantic\nchecks.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hashicorp/hcl@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hashicorp/hcl",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/hashicorp/hcl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: HashiCorp",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a1eab023a83dd6f0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hpcloud/tail@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hpcloud/tail@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hpcloud/tail",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/hpcloud/tail",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: HPE Helion",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b03a1cc325bb68da",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hpcloud/tail@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hpcloud/tail@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hpcloud/tail",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/hpcloud/tail",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: HPE Helion",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ef2cf8101d4d6aef",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/hpcloud/tail@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/hpcloud/tail@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/hpcloud/tail",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/hpcloud/tail",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: HPE Helion",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ab3c87b77ac53c85",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/huandu/xstrings@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xstrings is to provide string algorithms which are useful but not included in `strings` package.\nSee project home page for details. https://github.com/huandu/xstrings\n\nPackage xstrings assumes all strings are encoded in utf8.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/huandu/xstrings@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/huandu/xstrings",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/huandu/xstrings",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Huan Du",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-5538982cb1f08162",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/imdario/mergo@v0.3.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "A helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.\n\nMergo merges same-type structs and maps by setting default values in zero-value fields. Mergo won't merge unexported (private) fields. It will do recursively any exported one. It also won't merge structs inside maps (because they are not addressable using Go reflection).\n\nIt is ready for production use. It is used in several projects by Docker, Google, The Linux Foundation, VMWare, Shopify, etc.\n\nPlease keep in mind that a problematic PR broke 0.3.9. We reverted it in 0.3.10. We consider 0.3.10 as stable but not bug-free. . Also, this version adds suppot for go modules.\n\nKeep in mind that in 0.3.2, Mergo changed Merge() and Map() signatures to support transformers. We added an optional/variadic argument so that it won't break the existing code.\n\nIf you were using Mergo before April 6th, 2015, please check your project works as intended after updating your local copy with go get -u github.com/imdario/mergo. I apologize for any issue caused by its previous behavior and any future bug that Mergo could cause in existing projects after the change (release 0.2.0).\n\nDo your usual installation procedure:\n\nYou can only merge same-type structs with exported fields initialized as zero value of their type and same-types maps. Mergo won't merge unexported (private) fields but will do recursively any exported one. It won't merge empty structs value as they are zero values too. Also, maps will be merged recursively except for structs inside maps (because they are not addressable using Go reflection).\n\nAlso, you can merge overwriting values using the transformer WithOverride.\n\nAdditionally, you can map a map[string]interface{} to a struct (and otherwise, from struct to map), following the same restrictions as in Merge(). Keys are capitalized to find each corresponding exported field.\n\nWarning: if you map a struct to map, it won't do it recursively. Don't expect Mergo to map struct members of your struct as map[string]interface{}. They will be just assigned as values.\n\nHere is a nice example:\n\nTransformers allow to merge specific types differently than in the default behavior. In other words, now you can customize how some types are merged. For example, time.Time is a struct; it doesn't have zero value but IsZero can return true because it has fields with zero value. How can we merge a non-zero time.Time?\n\nIf I can help you, you have an idea or you are using Mergo in your projects, don't hesitate to drop me a line (or a pull request): https://twitter.com/im_dario\n\nWritten by Dario Casta\u00f1\u00e9: https://da.rio.hn\n\nBSD 3-Clause license, as Go language.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/imdario/mergo@0.3.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/imdario/mergo",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/imdario/mergo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Dario Casta\u00f1\u00e9",
            "versionInfo": "0.3.6"
        },
        {
            "SPDXID": "SPDXRef-Package-b8e891030be801be",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/imdario/mergo@v0.3.12"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "A helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.\n\nMergo merges same-type structs and maps by setting default values in zero-value fields. Mergo won't merge unexported (private) fields. It will do recursively any exported one. It also won't merge structs inside maps (because they are not addressable using Go reflection).\n\nIt is ready for production use. It is used in several projects by Docker, Google, The Linux Foundation, VMWare, Shopify, etc.\n\nPlease keep in mind that a problematic PR broke 0.3.9. We reverted it in 0.3.10. We consider 0.3.10 as stable but not bug-free. . Also, this version adds suppot for go modules.\n\nKeep in mind that in 0.3.2, Mergo changed Merge() and Map() signatures to support transformers. We added an optional/variadic argument so that it won't break the existing code.\n\nIf you were using Mergo before April 6th, 2015, please check your project works as intended after updating your local copy with go get -u github.com/imdario/mergo. I apologize for any issue caused by its previous behavior and any future bug that Mergo could cause in existing projects after the change (release 0.2.0).\n\nDo your usual installation procedure:\n\nYou can only merge same-type structs with exported fields initialized as zero value of their type and same-types maps. Mergo won't merge unexported (private) fields but will do recursively any exported one. It won't merge empty structs value as they are zero values too. Also, maps will be merged recursively except for structs inside maps (because they are not addressable using Go reflection).\n\nAlso, you can merge overwriting values using the transformer WithOverride.\n\nAdditionally, you can map a map[string]interface{} to a struct (and otherwise, from struct to map), following the same restrictions as in Merge(). Keys are capitalized to find each corresponding exported field.\n\nWarning: if you map a struct to map, it won't do it recursively. Don't expect Mergo to map struct members of your struct as map[string]interface{}. They will be just assigned as values.\n\nHere is a nice example:\n\nTransformers allow to merge specific types differently than in the default behavior. In other words, now you can customize how some types are merged. For example, time.Time is a struct; it doesn't have zero value but IsZero can return true because it has fields with zero value. How can we merge a non-zero time.Time?\n\nIf I can help you, you have an idea or you are using Mergo in your projects, don't hesitate to drop me a line (or a pull request): https://twitter.com/im_dario\n\nWritten by Dario Casta\u00f1\u00e9: https://da.rio.hn\n\nBSD 3-Clause license, as Go language.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/imdario/mergo@0.3.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/imdario/mergo",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/imdario/mergo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Dario Casta\u00f1\u00e9",
            "versionInfo": "0.3.12"
        },
        {
            "SPDXID": "SPDXRef-Package-f11f4e1946857703",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/imdario/mergo@v0.3.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "A helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.\n\nMergo merges same-type structs and maps by setting default values in zero-value fields. Mergo won't merge unexported (private) fields. It will do recursively any exported one. It also won't merge structs inside maps (because they are not addressable using Go reflection).\n\nIt is ready for production use. It is used in several projects by Docker, Google, The Linux Foundation, VMWare, Shopify, etc.\n\nPlease keep in mind that a problematic PR broke 0.3.9. We reverted it in 0.3.10. We consider 0.3.10 as stable but not bug-free. . Also, this version adds suppot for go modules.\n\nKeep in mind that in 0.3.2, Mergo changed Merge() and Map() signatures to support transformers. We added an optional/variadic argument so that it won't break the existing code.\n\nIf you were using Mergo before April 6th, 2015, please check your project works as intended after updating your local copy with go get -u github.com/imdario/mergo. I apologize for any issue caused by its previous behavior and any future bug that Mergo could cause in existing projects after the change (release 0.2.0).\n\nDo your usual installation procedure:\n\nYou can only merge same-type structs with exported fields initialized as zero value of their type and same-types maps. Mergo won't merge unexported (private) fields but will do recursively any exported one. It won't merge empty structs value as they are zero values too. Also, maps will be merged recursively except for structs inside maps (because they are not addressable using Go reflection).\n\nAlso, you can merge overwriting values using the transformer WithOverride.\n\nAdditionally, you can map a map[string]interface{} to a struct (and otherwise, from struct to map), following the same restrictions as in Merge(). Keys are capitalized to find each corresponding exported field.\n\nWarning: if you map a struct to map, it won't do it recursively. Don't expect Mergo to map struct members of your struct as map[string]interface{}. They will be just assigned as values.\n\nHere is a nice example:\n\nTransformers allow to merge specific types differently than in the default behavior. In other words, now you can customize how some types are merged. For example, time.Time is a struct; it doesn't have zero value but IsZero can return true because it has fields with zero value. How can we merge a non-zero time.Time?\n\nIf I can help you, you have an idea or you are using Mergo in your projects, don't hesitate to drop me a line (or a pull request): https://twitter.com/im_dario\n\nWritten by Dario Casta\u00f1\u00e9: https://da.rio.hn\n\nBSD 3-Clause license, as Go language.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/imdario/mergo@0.3.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/imdario/mergo",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/imdario/mergo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Dario Casta\u00f1\u00e9",
            "versionInfo": "0.3.6"
        },
        {
            "SPDXID": "SPDXRef-Package-21aab698f29f30a3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/inconshreveable/mousetrap@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/inconshreveable/mousetrap@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/inconshreveable/mousetrap",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/inconshreveable/mousetrap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3e18b65bedfa8b51",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/inconshreveable/mousetrap@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/inconshreveable/mousetrap@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/inconshreveable/mousetrap",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/inconshreveable/mousetrap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7463407eef45ff37",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/influxdata/influxdb-client-go/v2@v2.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package influxdb2 provides API for using InfluxDB client in Go.\nIt's intended to use with InfluxDB 2 server. WriteAPI, QueryAPI and Health work also with InfluxDB 1.8",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/influxdata/influxdb-client-go/v2@2.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/influxdata/influxdb-client-go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/influxdata/influxdb-client-go/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "2.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-56592957203e65e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/influxdata/line-protocol@v0.0.0-20200327222509-2487e7298839"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/influxdata/line-protocol@0.0.0-20200327222509-2487e7298839",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/influxdata/line-protocol",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/influxdata/line-protocol",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200327222509-2487e7298839"
        },
        {
            "SPDXID": "SPDXRef-Package-ab407ad4f830c220",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jedib0t/go-pretty@v4.3.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jedib0t/go-pretty@4.3.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jedib0t/go-pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/jedib0t/go-pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Naveen Mahalingam",
            "versionInfo": "4.3.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-3538a73e63019494",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jessevdk/go-flags@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package flags provides an extensive command line option parser.\nThe flags package is similar in functionality to the go built-in flag package\nbut provides more options and uses reflection to provide a convenient and\nsuccinct way of specifying command line options.\n\nThe following features are supported in go-flags:\n\nAdditional features specific to Windows:\n\nThe flags package uses structs, reflection and struct field tags\nto allow users to specify command line options. This results in very simple\nand concise specification of your application options. For example:\n\nThis specifies one option with a short name -v and a long name --verbose.\nWhen either -v or --verbose is found on the command line, a 'true' value\nwill be appended to the Verbose field. e.g. when specifying -vvv, the\nresulting value of Verbose will be {[true, true, true]}.\n\nSlice options work exactly the same as primitive type options, except that\nwhenever the option is encountered, a value is appended to the slice.\n\nMap options from string to primitive type are also supported. On the command\nline, you specify the value for such an option as key:value. For example\n\nThen, the AuthorInfo map can be filled with something like\n-a name:Jesse -a \"surname:van den Kieboom\".\n\nFinally, for full control over the conversion between command line argument\nvalues and options, user defined types can choose to implement the Marshaler\nand Unmarshaler interfaces.\n\nThe following is a list of tags for struct fields supported by go-flags:\n\nEither the `short:` tag or the `long:` must be specified to make the field eligible as an\noption.\n\nOption groups are a simple way to semantically separate your options. All\noptions in a particular group are shown together in the help under the name\nof the group. Namespaces can be used to specify option long names more\nprecisely and emphasize the options affiliation to their group.\n\nThere are currently three ways to specify option groups.\n\nThe flags package also has basic support for commands. Commands are often\nused in monolithic applications that support various commands or actions.\nTake git for example, all of the add, commit, checkout, etc. are called\ncommands. Using commands you can easily separate multiple functions of your\napplication.\n\nThere are currently two ways to specify a command.\n\nThe most common, idiomatic way to implement commands is to define a global\nparser instance and implement each command in a separate file. These\ncommand files should define a go init function which calls AddCommand on\nthe global parser.\n\nWhen parsing ends and there is an active command and that command implements\nthe Commander interface, then its Execute method will be run with the\nremaining command line arguments.\n\nCommand structs can have options which become valid to parse after the\ncommand has been specified on the command line, in addition to the options\nof all the parent commands. I.e. considering a -v flag on the parser and an\nadd command, the following are equivalent:\n\nHowever, if the -v flag is defined on the add command, then the first of\nthe two examples above would fail since the -v flag is not defined before\nthe add command.\n\ngo-flags has builtin support to provide bash completion of flags, commands\nand argument values. To use completion, the binary which uses go-flags\ncan be invoked in a special environment to list completion of the current\ncommand line argument. It should be noted that this `executes` your application,\nand it is up to the user to make sure there are no negative side effects (for\nexample from init functions).\n\nSetting the environment variable `GO_FLAGS_COMPLETION=1` enables completion\nby replacing the argument parsing routine with the completion routine which\noutputs completions for the passed arguments. The basic invocation to\ncomplete a set of arguments is therefore:\n\nwhere `completion-example` is the binary, `arg1` and `arg2` are\nthe current arguments, and `arg3` (the last argument) is the argument\nto be completed. If the GO_FLAGS_COMPLETION is set to \"verbose\", then\ndescriptions of possible completion items will also be shown, if there\nare more than 1 completion items.\n\nTo use this with bash completion, a simple file can be written which\ncalls the binary which supports go-flags completion:\n\nCompletion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n\nCustomized completion for argument values is supported by implementing\nthe flags.Completer interface for the argument value type. An example\nof a type which does so is the flags.Filename type, an alias of string\nallowing simple filename completion. A slice or array argument value\nwhose element type implements flags.Completer will also be completed.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jessevdk/go-flags@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jessevdk/go-flags",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/jessevdk/go-flags",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Jesse van den Kieboom",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-45d016d6c82a8faf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jessevdk/go-flags@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package flags provides an extensive command line option parser.\nThe flags package is similar in functionality to the go built-in flag package\nbut provides more options and uses reflection to provide a convenient and\nsuccinct way of specifying command line options.\n\nThe following features are supported in go-flags:\n\nAdditional features specific to Windows:\n\nThe flags package uses structs, reflection and struct field tags\nto allow users to specify command line options. This results in very simple\nand concise specification of your application options. For example:\n\nThis specifies one option with a short name -v and a long name --verbose.\nWhen either -v or --verbose is found on the command line, a 'true' value\nwill be appended to the Verbose field. e.g. when specifying -vvv, the\nresulting value of Verbose will be {[true, true, true]}.\n\nSlice options work exactly the same as primitive type options, except that\nwhenever the option is encountered, a value is appended to the slice.\n\nMap options from string to primitive type are also supported. On the command\nline, you specify the value for such an option as key:value. For example\n\nThen, the AuthorInfo map can be filled with something like\n-a name:Jesse -a \"surname:van den Kieboom\".\n\nFinally, for full control over the conversion between command line argument\nvalues and options, user defined types can choose to implement the Marshaler\nand Unmarshaler interfaces.\n\nThe following is a list of tags for struct fields supported by go-flags:\n\nEither the `short:` tag or the `long:` must be specified to make the field eligible as an\noption.\n\nOption groups are a simple way to semantically separate your options. All\noptions in a particular group are shown together in the help under the name\nof the group. Namespaces can be used to specify option long names more\nprecisely and emphasize the options affiliation to their group.\n\nThere are currently three ways to specify option groups.\n\nThe flags package also has basic support for commands. Commands are often\nused in monolithic applications that support various commands or actions.\nTake git for example, all of the add, commit, checkout, etc. are called\ncommands. Using commands you can easily separate multiple functions of your\napplication.\n\nThere are currently two ways to specify a command.\n\nThe most common, idiomatic way to implement commands is to define a global\nparser instance and implement each command in a separate file. These\ncommand files should define a go init function which calls AddCommand on\nthe global parser.\n\nWhen parsing ends and there is an active command and that command implements\nthe Commander interface, then its Execute method will be run with the\nremaining command line arguments.\n\nCommand structs can have options which become valid to parse after the\ncommand has been specified on the command line, in addition to the options\nof all the parent commands. I.e. considering a -v flag on the parser and an\nadd command, the following are equivalent:\n\nHowever, if the -v flag is defined on the add command, then the first of\nthe two examples above would fail since the -v flag is not defined before\nthe add command.\n\ngo-flags has builtin support to provide bash completion of flags, commands\nand argument values. To use completion, the binary which uses go-flags\ncan be invoked in a special environment to list completion of the current\ncommand line argument. It should be noted that this `executes` your application,\nand it is up to the user to make sure there are no negative side effects (for\nexample from init functions).\n\nSetting the environment variable `GO_FLAGS_COMPLETION=1` enables completion\nby replacing the argument parsing routine with the completion routine which\noutputs completions for the passed arguments. The basic invocation to\ncomplete a set of arguments is therefore:\n\nwhere `completion-example` is the binary, `arg1` and `arg2` are\nthe current arguments, and `arg3` (the last argument) is the argument\nto be completed. If the GO_FLAGS_COMPLETION is set to \"verbose\", then\ndescriptions of possible completion items will also be shown, if there\nare more than 1 completion items.\n\nTo use this with bash completion, a simple file can be written which\ncalls the binary which supports go-flags completion:\n\nCompletion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n\nCustomized completion for argument values is supported by implementing\nthe flags.Completer interface for the argument value type. An example\nof a type which does so is the flags.Filename type, an alias of string\nallowing simple filename completion. A slice or array argument value\nwhose element type implements flags.Completer will also be completed.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jessevdk/go-flags@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jessevdk/go-flags",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/jessevdk/go-flags",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Jesse van den Kieboom",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5232bbe38a4142fa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jessevdk/go-flags@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package flags provides an extensive command line option parser.\nThe flags package is similar in functionality to the go built-in flag package\nbut provides more options and uses reflection to provide a convenient and\nsuccinct way of specifying command line options.\n\nThe following features are supported in go-flags:\n\nAdditional features specific to Windows:\n\nThe flags package uses structs, reflection and struct field tags\nto allow users to specify command line options. This results in very simple\nand concise specification of your application options. For example:\n\nThis specifies one option with a short name -v and a long name --verbose.\nWhen either -v or --verbose is found on the command line, a 'true' value\nwill be appended to the Verbose field. e.g. when specifying -vvv, the\nresulting value of Verbose will be {[true, true, true]}.\n\nSlice options work exactly the same as primitive type options, except that\nwhenever the option is encountered, a value is appended to the slice.\n\nMap options from string to primitive type are also supported. On the command\nline, you specify the value for such an option as key:value. For example\n\nThen, the AuthorInfo map can be filled with something like\n-a name:Jesse -a \"surname:van den Kieboom\".\n\nFinally, for full control over the conversion between command line argument\nvalues and options, user defined types can choose to implement the Marshaler\nand Unmarshaler interfaces.\n\nThe following is a list of tags for struct fields supported by go-flags:\n\nEither the `short:` tag or the `long:` must be specified to make the field eligible as an\noption.\n\nOption groups are a simple way to semantically separate your options. All\noptions in a particular group are shown together in the help under the name\nof the group. Namespaces can be used to specify option long names more\nprecisely and emphasize the options affiliation to their group.\n\nThere are currently three ways to specify option groups.\n\nThe flags package also has basic support for commands. Commands are often\nused in monolithic applications that support various commands or actions.\nTake git for example, all of the add, commit, checkout, etc. are called\ncommands. Using commands you can easily separate multiple functions of your\napplication.\n\nThere are currently two ways to specify a command.\n\nThe most common, idiomatic way to implement commands is to define a global\nparser instance and implement each command in a separate file. These\ncommand files should define a go init function which calls AddCommand on\nthe global parser.\n\nWhen parsing ends and there is an active command and that command implements\nthe Commander interface, then its Execute method will be run with the\nremaining command line arguments.\n\nCommand structs can have options which become valid to parse after the\ncommand has been specified on the command line, in addition to the options\nof all the parent commands. I.e. considering a -v flag on the parser and an\nadd command, the following are equivalent:\n\nHowever, if the -v flag is defined on the add command, then the first of\nthe two examples above would fail since the -v flag is not defined before\nthe add command.\n\ngo-flags has builtin support to provide bash completion of flags, commands\nand argument values. To use completion, the binary which uses go-flags\ncan be invoked in a special environment to list completion of the current\ncommand line argument. It should be noted that this `executes` your application,\nand it is up to the user to make sure there are no negative side effects (for\nexample from init functions).\n\nSetting the environment variable `GO_FLAGS_COMPLETION=1` enables completion\nby replacing the argument parsing routine with the completion routine which\noutputs completions for the passed arguments. The basic invocation to\ncomplete a set of arguments is therefore:\n\nwhere `completion-example` is the binary, `arg1` and `arg2` are\nthe current arguments, and `arg3` (the last argument) is the argument\nto be completed. If the GO_FLAGS_COMPLETION is set to \"verbose\", then\ndescriptions of possible completion items will also be shown, if there\nare more than 1 completion items.\n\nTo use this with bash completion, a simple file can be written which\ncalls the binary which supports go-flags completion:\n\nCompletion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n\nCustomized completion for argument values is supported by implementing\nthe flags.Completer interface for the argument value type. An example\nof a type which does so is the flags.Filename type, an alias of string\nallowing simple filename completion. A slice or array argument value\nwhose element type implements flags.Completer will also be completed.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jessevdk/go-flags@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jessevdk/go-flags",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/jessevdk/go-flags",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Jesse van den Kieboom",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-671fce428b3a39aa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jessevdk/go-flags@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package flags provides an extensive command line option parser.\nThe flags package is similar in functionality to the go built-in flag package\nbut provides more options and uses reflection to provide a convenient and\nsuccinct way of specifying command line options.\n\nThe following features are supported in go-flags:\n\nAdditional features specific to Windows:\n\nThe flags package uses structs, reflection and struct field tags\nto allow users to specify command line options. This results in very simple\nand concise specification of your application options. For example:\n\nThis specifies one option with a short name -v and a long name --verbose.\nWhen either -v or --verbose is found on the command line, a 'true' value\nwill be appended to the Verbose field. e.g. when specifying -vvv, the\nresulting value of Verbose will be {[true, true, true]}.\n\nSlice options work exactly the same as primitive type options, except that\nwhenever the option is encountered, a value is appended to the slice.\n\nMap options from string to primitive type are also supported. On the command\nline, you specify the value for such an option as key:value. For example\n\nThen, the AuthorInfo map can be filled with something like\n-a name:Jesse -a \"surname:van den Kieboom\".\n\nFinally, for full control over the conversion between command line argument\nvalues and options, user defined types can choose to implement the Marshaler\nand Unmarshaler interfaces.\n\nThe following is a list of tags for struct fields supported by go-flags:\n\nEither the `short:` tag or the `long:` must be specified to make the field eligible as an\noption.\n\nOption groups are a simple way to semantically separate your options. All\noptions in a particular group are shown together in the help under the name\nof the group. Namespaces can be used to specify option long names more\nprecisely and emphasize the options affiliation to their group.\n\nThere are currently three ways to specify option groups.\n\nThe flags package also has basic support for commands. Commands are often\nused in monolithic applications that support various commands or actions.\nTake git for example, all of the add, commit, checkout, etc. are called\ncommands. Using commands you can easily separate multiple functions of your\napplication.\n\nThere are currently two ways to specify a command.\n\nThe most common, idiomatic way to implement commands is to define a global\nparser instance and implement each command in a separate file. These\ncommand files should define a go init function which calls AddCommand on\nthe global parser.\n\nWhen parsing ends and there is an active command and that command implements\nthe Commander interface, then its Execute method will be run with the\nremaining command line arguments.\n\nCommand structs can have options which become valid to parse after the\ncommand has been specified on the command line, in addition to the options\nof all the parent commands. I.e. considering a -v flag on the parser and an\nadd command, the following are equivalent:\n\nHowever, if the -v flag is defined on the add command, then the first of\nthe two examples above would fail since the -v flag is not defined before\nthe add command.\n\ngo-flags has builtin support to provide bash completion of flags, commands\nand argument values. To use completion, the binary which uses go-flags\ncan be invoked in a special environment to list completion of the current\ncommand line argument. It should be noted that this `executes` your application,\nand it is up to the user to make sure there are no negative side effects (for\nexample from init functions).\n\nSetting the environment variable `GO_FLAGS_COMPLETION=1` enables completion\nby replacing the argument parsing routine with the completion routine which\noutputs completions for the passed arguments. The basic invocation to\ncomplete a set of arguments is therefore:\n\nwhere `completion-example` is the binary, `arg1` and `arg2` are\nthe current arguments, and `arg3` (the last argument) is the argument\nto be completed. If the GO_FLAGS_COMPLETION is set to \"verbose\", then\ndescriptions of possible completion items will also be shown, if there\nare more than 1 completion items.\n\nTo use this with bash completion, a simple file can be written which\ncalls the binary which supports go-flags completion:\n\nCompletion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n\nCustomized completion for argument values is supported by implementing\nthe flags.Completer interface for the argument value type. An example\nof a type which does so is the flags.Filename type, an alias of string\nallowing simple filename completion. A slice or array argument value\nwhose element type implements flags.Completer will also be completed.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jessevdk/go-flags@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jessevdk/go-flags",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/jessevdk/go-flags",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Jesse van den Kieboom",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6a5d1853a8c1a562",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jessevdk/go-flags@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package flags provides an extensive command line option parser.\nThe flags package is similar in functionality to the go built-in flag package\nbut provides more options and uses reflection to provide a convenient and\nsuccinct way of specifying command line options.\n\nThe following features are supported in go-flags:\n\nAdditional features specific to Windows:\n\nThe flags package uses structs, reflection and struct field tags\nto allow users to specify command line options. This results in very simple\nand concise specification of your application options. For example:\n\nThis specifies one option with a short name -v and a long name --verbose.\nWhen either -v or --verbose is found on the command line, a 'true' value\nwill be appended to the Verbose field. e.g. when specifying -vvv, the\nresulting value of Verbose will be {[true, true, true]}.\n\nSlice options work exactly the same as primitive type options, except that\nwhenever the option is encountered, a value is appended to the slice.\n\nMap options from string to primitive type are also supported. On the command\nline, you specify the value for such an option as key:value. For example\n\nThen, the AuthorInfo map can be filled with something like\n-a name:Jesse -a \"surname:van den Kieboom\".\n\nFinally, for full control over the conversion between command line argument\nvalues and options, user defined types can choose to implement the Marshaler\nand Unmarshaler interfaces.\n\nThe following is a list of tags for struct fields supported by go-flags:\n\nEither the `short:` tag or the `long:` must be specified to make the field eligible as an\noption.\n\nOption groups are a simple way to semantically separate your options. All\noptions in a particular group are shown together in the help under the name\nof the group. Namespaces can be used to specify option long names more\nprecisely and emphasize the options affiliation to their group.\n\nThere are currently three ways to specify option groups.\n\nThe flags package also has basic support for commands. Commands are often\nused in monolithic applications that support various commands or actions.\nTake git for example, all of the add, commit, checkout, etc. are called\ncommands. Using commands you can easily separate multiple functions of your\napplication.\n\nThere are currently two ways to specify a command.\n\nThe most common, idiomatic way to implement commands is to define a global\nparser instance and implement each command in a separate file. These\ncommand files should define a go init function which calls AddCommand on\nthe global parser.\n\nWhen parsing ends and there is an active command and that command implements\nthe Commander interface, then its Execute method will be run with the\nremaining command line arguments.\n\nCommand structs can have options which become valid to parse after the\ncommand has been specified on the command line, in addition to the options\nof all the parent commands. I.e. considering a -v flag on the parser and an\nadd command, the following are equivalent:\n\nHowever, if the -v flag is defined on the add command, then the first of\nthe two examples above would fail since the -v flag is not defined before\nthe add command.\n\ngo-flags has builtin support to provide bash completion of flags, commands\nand argument values. To use completion, the binary which uses go-flags\ncan be invoked in a special environment to list completion of the current\ncommand line argument. It should be noted that this `executes` your application,\nand it is up to the user to make sure there are no negative side effects (for\nexample from init functions).\n\nSetting the environment variable `GO_FLAGS_COMPLETION=1` enables completion\nby replacing the argument parsing routine with the completion routine which\noutputs completions for the passed arguments. The basic invocation to\ncomplete a set of arguments is therefore:\n\nwhere `completion-example` is the binary, `arg1` and `arg2` are\nthe current arguments, and `arg3` (the last argument) is the argument\nto be completed. If the GO_FLAGS_COMPLETION is set to \"verbose\", then\ndescriptions of possible completion items will also be shown, if there\nare more than 1 completion items.\n\nTo use this with bash completion, a simple file can be written which\ncalls the binary which supports go-flags completion:\n\nCompletion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n\nCustomized completion for argument values is supported by implementing\nthe flags.Completer interface for the argument value type. An example\nof a type which does so is the flags.Filename type, an alias of string\nallowing simple filename completion. A slice or array argument value\nwhose element type implements flags.Completer will also be completed.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jessevdk/go-flags@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jessevdk/go-flags",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/jessevdk/go-flags",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Jesse van den Kieboom",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7ca1c746b6e68f7c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jessevdk/go-flags@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package flags provides an extensive command line option parser.\nThe flags package is similar in functionality to the go built-in flag package\nbut provides more options and uses reflection to provide a convenient and\nsuccinct way of specifying command line options.\n\nThe following features are supported in go-flags:\n\nAdditional features specific to Windows:\n\nThe flags package uses structs, reflection and struct field tags\nto allow users to specify command line options. This results in very simple\nand concise specification of your application options. For example:\n\nThis specifies one option with a short name -v and a long name --verbose.\nWhen either -v or --verbose is found on the command line, a 'true' value\nwill be appended to the Verbose field. e.g. when specifying -vvv, the\nresulting value of Verbose will be {[true, true, true]}.\n\nSlice options work exactly the same as primitive type options, except that\nwhenever the option is encountered, a value is appended to the slice.\n\nMap options from string to primitive type are also supported. On the command\nline, you specify the value for such an option as key:value. For example\n\nThen, the AuthorInfo map can be filled with something like\n-a name:Jesse -a \"surname:van den Kieboom\".\n\nFinally, for full control over the conversion between command line argument\nvalues and options, user defined types can choose to implement the Marshaler\nand Unmarshaler interfaces.\n\nThe following is a list of tags for struct fields supported by go-flags:\n\nEither the `short:` tag or the `long:` must be specified to make the field eligible as an\noption.\n\nOption groups are a simple way to semantically separate your options. All\noptions in a particular group are shown together in the help under the name\nof the group. Namespaces can be used to specify option long names more\nprecisely and emphasize the options affiliation to their group.\n\nThere are currently three ways to specify option groups.\n\nThe flags package also has basic support for commands. Commands are often\nused in monolithic applications that support various commands or actions.\nTake git for example, all of the add, commit, checkout, etc. are called\ncommands. Using commands you can easily separate multiple functions of your\napplication.\n\nThere are currently two ways to specify a command.\n\nThe most common, idiomatic way to implement commands is to define a global\nparser instance and implement each command in a separate file. These\ncommand files should define a go init function which calls AddCommand on\nthe global parser.\n\nWhen parsing ends and there is an active command and that command implements\nthe Commander interface, then its Execute method will be run with the\nremaining command line arguments.\n\nCommand structs can have options which become valid to parse after the\ncommand has been specified on the command line, in addition to the options\nof all the parent commands. I.e. considering a -v flag on the parser and an\nadd command, the following are equivalent:\n\nHowever, if the -v flag is defined on the add command, then the first of\nthe two examples above would fail since the -v flag is not defined before\nthe add command.\n\ngo-flags has builtin support to provide bash completion of flags, commands\nand argument values. To use completion, the binary which uses go-flags\ncan be invoked in a special environment to list completion of the current\ncommand line argument. It should be noted that this `executes` your application,\nand it is up to the user to make sure there are no negative side effects (for\nexample from init functions).\n\nSetting the environment variable `GO_FLAGS_COMPLETION=1` enables completion\nby replacing the argument parsing routine with the completion routine which\noutputs completions for the passed arguments. The basic invocation to\ncomplete a set of arguments is therefore:\n\nwhere `completion-example` is the binary, `arg1` and `arg2` are\nthe current arguments, and `arg3` (the last argument) is the argument\nto be completed. If the GO_FLAGS_COMPLETION is set to \"verbose\", then\ndescriptions of possible completion items will also be shown, if there\nare more than 1 completion items.\n\nTo use this with bash completion, a simple file can be written which\ncalls the binary which supports go-flags completion:\n\nCompletion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n\nCustomized completion for argument values is supported by implementing\nthe flags.Completer interface for the argument value type. An example\nof a type which does so is the flags.Filename type, an alias of string\nallowing simple filename completion. A slice or array argument value\nwhose element type implements flags.Completer will also be completed.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jessevdk/go-flags@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jessevdk/go-flags",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/jessevdk/go-flags",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Jesse van den Kieboom",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-82a057a240ef86b4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jessevdk/go-flags@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package flags provides an extensive command line option parser.\nThe flags package is similar in functionality to the go built-in flag package\nbut provides more options and uses reflection to provide a convenient and\nsuccinct way of specifying command line options.\n\nThe following features are supported in go-flags:\n\nAdditional features specific to Windows:\n\nThe flags package uses structs, reflection and struct field tags\nto allow users to specify command line options. This results in very simple\nand concise specification of your application options. For example:\n\nThis specifies one option with a short name -v and a long name --verbose.\nWhen either -v or --verbose is found on the command line, a 'true' value\nwill be appended to the Verbose field. e.g. when specifying -vvv, the\nresulting value of Verbose will be {[true, true, true]}.\n\nSlice options work exactly the same as primitive type options, except that\nwhenever the option is encountered, a value is appended to the slice.\n\nMap options from string to primitive type are also supported. On the command\nline, you specify the value for such an option as key:value. For example\n\nThen, the AuthorInfo map can be filled with something like\n-a name:Jesse -a \"surname:van den Kieboom\".\n\nFinally, for full control over the conversion between command line argument\nvalues and options, user defined types can choose to implement the Marshaler\nand Unmarshaler interfaces.\n\nThe following is a list of tags for struct fields supported by go-flags:\n\nEither the `short:` tag or the `long:` must be specified to make the field eligible as an\noption.\n\nOption groups are a simple way to semantically separate your options. All\noptions in a particular group are shown together in the help under the name\nof the group. Namespaces can be used to specify option long names more\nprecisely and emphasize the options affiliation to their group.\n\nThere are currently three ways to specify option groups.\n\nThe flags package also has basic support for commands. Commands are often\nused in monolithic applications that support various commands or actions.\nTake git for example, all of the add, commit, checkout, etc. are called\ncommands. Using commands you can easily separate multiple functions of your\napplication.\n\nThere are currently two ways to specify a command.\n\nThe most common, idiomatic way to implement commands is to define a global\nparser instance and implement each command in a separate file. These\ncommand files should define a go init function which calls AddCommand on\nthe global parser.\n\nWhen parsing ends and there is an active command and that command implements\nthe Commander interface, then its Execute method will be run with the\nremaining command line arguments.\n\nCommand structs can have options which become valid to parse after the\ncommand has been specified on the command line, in addition to the options\nof all the parent commands. I.e. considering a -v flag on the parser and an\nadd command, the following are equivalent:\n\nHowever, if the -v flag is defined on the add command, then the first of\nthe two examples above would fail since the -v flag is not defined before\nthe add command.\n\ngo-flags has builtin support to provide bash completion of flags, commands\nand argument values. To use completion, the binary which uses go-flags\ncan be invoked in a special environment to list completion of the current\ncommand line argument. It should be noted that this `executes` your application,\nand it is up to the user to make sure there are no negative side effects (for\nexample from init functions).\n\nSetting the environment variable `GO_FLAGS_COMPLETION=1` enables completion\nby replacing the argument parsing routine with the completion routine which\noutputs completions for the passed arguments. The basic invocation to\ncomplete a set of arguments is therefore:\n\nwhere `completion-example` is the binary, `arg1` and `arg2` are\nthe current arguments, and `arg3` (the last argument) is the argument\nto be completed. If the GO_FLAGS_COMPLETION is set to \"verbose\", then\ndescriptions of possible completion items will also be shown, if there\nare more than 1 completion items.\n\nTo use this with bash completion, a simple file can be written which\ncalls the binary which supports go-flags completion:\n\nCompletion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n\nCustomized completion for argument values is supported by implementing\nthe flags.Completer interface for the argument value type. An example\nof a type which does so is the flags.Filename type, an alias of string\nallowing simple filename completion. A slice or array argument value\nwhose element type implements flags.Completer will also be completed.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jessevdk/go-flags@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jessevdk/go-flags",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/jessevdk/go-flags",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Jesse van den Kieboom",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-86fc2155ee96b6aa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jessevdk/go-flags@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package flags provides an extensive command line option parser.\nThe flags package is similar in functionality to the go built-in flag package\nbut provides more options and uses reflection to provide a convenient and\nsuccinct way of specifying command line options.\n\nThe following features are supported in go-flags:\n\nAdditional features specific to Windows:\n\nThe flags package uses structs, reflection and struct field tags\nto allow users to specify command line options. This results in very simple\nand concise specification of your application options. For example:\n\nThis specifies one option with a short name -v and a long name --verbose.\nWhen either -v or --verbose is found on the command line, a 'true' value\nwill be appended to the Verbose field. e.g. when specifying -vvv, the\nresulting value of Verbose will be {[true, true, true]}.\n\nSlice options work exactly the same as primitive type options, except that\nwhenever the option is encountered, a value is appended to the slice.\n\nMap options from string to primitive type are also supported. On the command\nline, you specify the value for such an option as key:value. For example\n\nThen, the AuthorInfo map can be filled with something like\n-a name:Jesse -a \"surname:van den Kieboom\".\n\nFinally, for full control over the conversion between command line argument\nvalues and options, user defined types can choose to implement the Marshaler\nand Unmarshaler interfaces.\n\nThe following is a list of tags for struct fields supported by go-flags:\n\nEither the `short:` tag or the `long:` must be specified to make the field eligible as an\noption.\n\nOption groups are a simple way to semantically separate your options. All\noptions in a particular group are shown together in the help under the name\nof the group. Namespaces can be used to specify option long names more\nprecisely and emphasize the options affiliation to their group.\n\nThere are currently three ways to specify option groups.\n\nThe flags package also has basic support for commands. Commands are often\nused in monolithic applications that support various commands or actions.\nTake git for example, all of the add, commit, checkout, etc. are called\ncommands. Using commands you can easily separate multiple functions of your\napplication.\n\nThere are currently two ways to specify a command.\n\nThe most common, idiomatic way to implement commands is to define a global\nparser instance and implement each command in a separate file. These\ncommand files should define a go init function which calls AddCommand on\nthe global parser.\n\nWhen parsing ends and there is an active command and that command implements\nthe Commander interface, then its Execute method will be run with the\nremaining command line arguments.\n\nCommand structs can have options which become valid to parse after the\ncommand has been specified on the command line, in addition to the options\nof all the parent commands. I.e. considering a -v flag on the parser and an\nadd command, the following are equivalent:\n\nHowever, if the -v flag is defined on the add command, then the first of\nthe two examples above would fail since the -v flag is not defined before\nthe add command.\n\ngo-flags has builtin support to provide bash completion of flags, commands\nand argument values. To use completion, the binary which uses go-flags\ncan be invoked in a special environment to list completion of the current\ncommand line argument. It should be noted that this `executes` your application,\nand it is up to the user to make sure there are no negative side effects (for\nexample from init functions).\n\nSetting the environment variable `GO_FLAGS_COMPLETION=1` enables completion\nby replacing the argument parsing routine with the completion routine which\noutputs completions for the passed arguments. The basic invocation to\ncomplete a set of arguments is therefore:\n\nwhere `completion-example` is the binary, `arg1` and `arg2` are\nthe current arguments, and `arg3` (the last argument) is the argument\nto be completed. If the GO_FLAGS_COMPLETION is set to \"verbose\", then\ndescriptions of possible completion items will also be shown, if there\nare more than 1 completion items.\n\nTo use this with bash completion, a simple file can be written which\ncalls the binary which supports go-flags completion:\n\nCompletion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n\nCustomized completion for argument values is supported by implementing\nthe flags.Completer interface for the argument value type. An example\nof a type which does so is the flags.Filename type, an alias of string\nallowing simple filename completion. A slice or array argument value\nwhose element type implements flags.Completer will also be completed.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jessevdk/go-flags@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jessevdk/go-flags",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/jessevdk/go-flags",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Jesse van den Kieboom",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b2b5a4aa4268b6ce",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jessevdk/go-flags@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package flags provides an extensive command line option parser.\nThe flags package is similar in functionality to the go built-in flag package\nbut provides more options and uses reflection to provide a convenient and\nsuccinct way of specifying command line options.\n\nThe following features are supported in go-flags:\n\nAdditional features specific to Windows:\n\nThe flags package uses structs, reflection and struct field tags\nto allow users to specify command line options. This results in very simple\nand concise specification of your application options. For example:\n\nThis specifies one option with a short name -v and a long name --verbose.\nWhen either -v or --verbose is found on the command line, a 'true' value\nwill be appended to the Verbose field. e.g. when specifying -vvv, the\nresulting value of Verbose will be {[true, true, true]}.\n\nSlice options work exactly the same as primitive type options, except that\nwhenever the option is encountered, a value is appended to the slice.\n\nMap options from string to primitive type are also supported. On the command\nline, you specify the value for such an option as key:value. For example\n\nThen, the AuthorInfo map can be filled with something like\n-a name:Jesse -a \"surname:van den Kieboom\".\n\nFinally, for full control over the conversion between command line argument\nvalues and options, user defined types can choose to implement the Marshaler\nand Unmarshaler interfaces.\n\nThe following is a list of tags for struct fields supported by go-flags:\n\nEither the `short:` tag or the `long:` must be specified to make the field eligible as an\noption.\n\nOption groups are a simple way to semantically separate your options. All\noptions in a particular group are shown together in the help under the name\nof the group. Namespaces can be used to specify option long names more\nprecisely and emphasize the options affiliation to their group.\n\nThere are currently three ways to specify option groups.\n\nThe flags package also has basic support for commands. Commands are often\nused in monolithic applications that support various commands or actions.\nTake git for example, all of the add, commit, checkout, etc. are called\ncommands. Using commands you can easily separate multiple functions of your\napplication.\n\nThere are currently two ways to specify a command.\n\nThe most common, idiomatic way to implement commands is to define a global\nparser instance and implement each command in a separate file. These\ncommand files should define a go init function which calls AddCommand on\nthe global parser.\n\nWhen parsing ends and there is an active command and that command implements\nthe Commander interface, then its Execute method will be run with the\nremaining command line arguments.\n\nCommand structs can have options which become valid to parse after the\ncommand has been specified on the command line, in addition to the options\nof all the parent commands. I.e. considering a -v flag on the parser and an\nadd command, the following are equivalent:\n\nHowever, if the -v flag is defined on the add command, then the first of\nthe two examples above would fail since the -v flag is not defined before\nthe add command.\n\ngo-flags has builtin support to provide bash completion of flags, commands\nand argument values. To use completion, the binary which uses go-flags\ncan be invoked in a special environment to list completion of the current\ncommand line argument. It should be noted that this `executes` your application,\nand it is up to the user to make sure there are no negative side effects (for\nexample from init functions).\n\nSetting the environment variable `GO_FLAGS_COMPLETION=1` enables completion\nby replacing the argument parsing routine with the completion routine which\noutputs completions for the passed arguments. The basic invocation to\ncomplete a set of arguments is therefore:\n\nwhere `completion-example` is the binary, `arg1` and `arg2` are\nthe current arguments, and `arg3` (the last argument) is the argument\nto be completed. If the GO_FLAGS_COMPLETION is set to \"verbose\", then\ndescriptions of possible completion items will also be shown, if there\nare more than 1 completion items.\n\nTo use this with bash completion, a simple file can be written which\ncalls the binary which supports go-flags completion:\n\nCompletion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n\nCustomized completion for argument values is supported by implementing\nthe flags.Completer interface for the argument value type. An example\nof a type which does so is the flags.Filename type, an alias of string\nallowing simple filename completion. A slice or array argument value\nwhose element type implements flags.Completer will also be completed.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jessevdk/go-flags@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jessevdk/go-flags",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/jessevdk/go-flags",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Jesse van den Kieboom",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-cf915da42e01d747",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jessevdk/go-flags@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package flags provides an extensive command line option parser.\nThe flags package is similar in functionality to the go built-in flag package\nbut provides more options and uses reflection to provide a convenient and\nsuccinct way of specifying command line options.\n\nThe following features are supported in go-flags:\n\nAdditional features specific to Windows:\n\nThe flags package uses structs, reflection and struct field tags\nto allow users to specify command line options. This results in very simple\nand concise specification of your application options. For example:\n\nThis specifies one option with a short name -v and a long name --verbose.\nWhen either -v or --verbose is found on the command line, a 'true' value\nwill be appended to the Verbose field. e.g. when specifying -vvv, the\nresulting value of Verbose will be {[true, true, true]}.\n\nSlice options work exactly the same as primitive type options, except that\nwhenever the option is encountered, a value is appended to the slice.\n\nMap options from string to primitive type are also supported. On the command\nline, you specify the value for such an option as key:value. For example\n\nThen, the AuthorInfo map can be filled with something like\n-a name:Jesse -a \"surname:van den Kieboom\".\n\nFinally, for full control over the conversion between command line argument\nvalues and options, user defined types can choose to implement the Marshaler\nand Unmarshaler interfaces.\n\nThe following is a list of tags for struct fields supported by go-flags:\n\nEither the `short:` tag or the `long:` must be specified to make the field eligible as an\noption.\n\nOption groups are a simple way to semantically separate your options. All\noptions in a particular group are shown together in the help under the name\nof the group. Namespaces can be used to specify option long names more\nprecisely and emphasize the options affiliation to their group.\n\nThere are currently three ways to specify option groups.\n\nThe flags package also has basic support for commands. Commands are often\nused in monolithic applications that support various commands or actions.\nTake git for example, all of the add, commit, checkout, etc. are called\ncommands. Using commands you can easily separate multiple functions of your\napplication.\n\nThere are currently two ways to specify a command.\n\nThe most common, idiomatic way to implement commands is to define a global\nparser instance and implement each command in a separate file. These\ncommand files should define a go init function which calls AddCommand on\nthe global parser.\n\nWhen parsing ends and there is an active command and that command implements\nthe Commander interface, then its Execute method will be run with the\nremaining command line arguments.\n\nCommand structs can have options which become valid to parse after the\ncommand has been specified on the command line, in addition to the options\nof all the parent commands. I.e. considering a -v flag on the parser and an\nadd command, the following are equivalent:\n\nHowever, if the -v flag is defined on the add command, then the first of\nthe two examples above would fail since the -v flag is not defined before\nthe add command.\n\ngo-flags has builtin support to provide bash completion of flags, commands\nand argument values. To use completion, the binary which uses go-flags\ncan be invoked in a special environment to list completion of the current\ncommand line argument. It should be noted that this `executes` your application,\nand it is up to the user to make sure there are no negative side effects (for\nexample from init functions).\n\nSetting the environment variable `GO_FLAGS_COMPLETION=1` enables completion\nby replacing the argument parsing routine with the completion routine which\noutputs completions for the passed arguments. The basic invocation to\ncomplete a set of arguments is therefore:\n\nwhere `completion-example` is the binary, `arg1` and `arg2` are\nthe current arguments, and `arg3` (the last argument) is the argument\nto be completed. If the GO_FLAGS_COMPLETION is set to \"verbose\", then\ndescriptions of possible completion items will also be shown, if there\nare more than 1 completion items.\n\nTo use this with bash completion, a simple file can be written which\ncalls the binary which supports go-flags completion:\n\nCompletion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n\nCustomized completion for argument values is supported by implementing\nthe flags.Completer interface for the argument value type. An example\nof a type which does so is the flags.Filename type, an alias of string\nallowing simple filename completion. A slice or array argument value\nwhose element type implements flags.Completer will also be completed.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jessevdk/go-flags@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jessevdk/go-flags",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/jessevdk/go-flags",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Jesse van den Kieboom",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e676fd08d4a8100f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jessevdk/go-flags@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package flags provides an extensive command line option parser.\nThe flags package is similar in functionality to the go built-in flag package\nbut provides more options and uses reflection to provide a convenient and\nsuccinct way of specifying command line options.\n\nThe following features are supported in go-flags:\n\nAdditional features specific to Windows:\n\nThe flags package uses structs, reflection and struct field tags\nto allow users to specify command line options. This results in very simple\nand concise specification of your application options. For example:\n\nThis specifies one option with a short name -v and a long name --verbose.\nWhen either -v or --verbose is found on the command line, a 'true' value\nwill be appended to the Verbose field. e.g. when specifying -vvv, the\nresulting value of Verbose will be {[true, true, true]}.\n\nSlice options work exactly the same as primitive type options, except that\nwhenever the option is encountered, a value is appended to the slice.\n\nMap options from string to primitive type are also supported. On the command\nline, you specify the value for such an option as key:value. For example\n\nThen, the AuthorInfo map can be filled with something like\n-a name:Jesse -a \"surname:van den Kieboom\".\n\nFinally, for full control over the conversion between command line argument\nvalues and options, user defined types can choose to implement the Marshaler\nand Unmarshaler interfaces.\n\nThe following is a list of tags for struct fields supported by go-flags:\n\nEither the `short:` tag or the `long:` must be specified to make the field eligible as an\noption.\n\nOption groups are a simple way to semantically separate your options. All\noptions in a particular group are shown together in the help under the name\nof the group. Namespaces can be used to specify option long names more\nprecisely and emphasize the options affiliation to their group.\n\nThere are currently three ways to specify option groups.\n\nThe flags package also has basic support for commands. Commands are often\nused in monolithic applications that support various commands or actions.\nTake git for example, all of the add, commit, checkout, etc. are called\ncommands. Using commands you can easily separate multiple functions of your\napplication.\n\nThere are currently two ways to specify a command.\n\nThe most common, idiomatic way to implement commands is to define a global\nparser instance and implement each command in a separate file. These\ncommand files should define a go init function which calls AddCommand on\nthe global parser.\n\nWhen parsing ends and there is an active command and that command implements\nthe Commander interface, then its Execute method will be run with the\nremaining command line arguments.\n\nCommand structs can have options which become valid to parse after the\ncommand has been specified on the command line, in addition to the options\nof all the parent commands. I.e. considering a -v flag on the parser and an\nadd command, the following are equivalent:\n\nHowever, if the -v flag is defined on the add command, then the first of\nthe two examples above would fail since the -v flag is not defined before\nthe add command.\n\ngo-flags has builtin support to provide bash completion of flags, commands\nand argument values. To use completion, the binary which uses go-flags\ncan be invoked in a special environment to list completion of the current\ncommand line argument. It should be noted that this `executes` your application,\nand it is up to the user to make sure there are no negative side effects (for\nexample from init functions).\n\nSetting the environment variable `GO_FLAGS_COMPLETION=1` enables completion\nby replacing the argument parsing routine with the completion routine which\noutputs completions for the passed arguments. The basic invocation to\ncomplete a set of arguments is therefore:\n\nwhere `completion-example` is the binary, `arg1` and `arg2` are\nthe current arguments, and `arg3` (the last argument) is the argument\nto be completed. If the GO_FLAGS_COMPLETION is set to \"verbose\", then\ndescriptions of possible completion items will also be shown, if there\nare more than 1 completion items.\n\nTo use this with bash completion, a simple file can be written which\ncalls the binary which supports go-flags completion:\n\nCompletion requires the parser option PassDoubleDash and is therefore enforced if the environment variable GO_FLAGS_COMPLETION is set.\n\nCustomized completion for argument values is supported by implementing\nthe flags.Completer interface for the argument value type. An example\nof a type which does so is the flags.Filename type, an alias of string\nallowing simple filename completion. A slice or array argument value\nwhose element type implements flags.Completer will also be completed.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jessevdk/go-flags@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jessevdk/go-flags",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/jessevdk/go-flags",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Jesse van den Kieboom",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-47d7ae3a17fa663",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jmoiron/sqlx@v1.3.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package sqlx provides general purpose extensions to database/sql.\n\nIt is intended to seamlessly wrap database/sql and provide convenience\nmethods which are useful in the development of database driven applications.\nNone of the underlying database/sql methods are changed.  Instead all extended\nbehavior is implemented through new methods defined on wrapper types.\n\nAdditions include scanning into structs, named query support, rebinding\nqueries for different drivers, convenient shorthands for common error handling\nand more.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jmoiron/sqlx@1.3.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jmoiron/sqlx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/jmoiron/sqlx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Jason Moiron",
            "versionInfo": "1.3.5"
        },
        {
            "SPDXID": "SPDXRef-Package-1a24e91a44a878d6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jonboulle/clockwork@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jonboulle/clockwork@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jonboulle/clockwork",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/jonboulle/clockwork",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-27a1dbac5356ee5f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jonboulle/clockwork@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jonboulle/clockwork@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jonboulle/clockwork",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/jonboulle/clockwork",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6f20a03b99d7a959",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jonboulle/clockwork@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jonboulle/clockwork@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jonboulle/clockwork",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/jonboulle/clockwork",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8c433a92e7a11fa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jonboulle/clockwork@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jonboulle/clockwork@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jonboulle/clockwork",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/jonboulle/clockwork",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e435bae6dd30ed7e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jonboulle/clockwork@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jonboulle/clockwork@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jonboulle/clockwork",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/jonboulle/clockwork",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1ea51742b4c4d103",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/josharian/intern@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package intern interns strings.\nInterning is best effort only.\nInterned strings may be removed automatically\nat any time without notification.\nAll functions may be called concurrently\nwith themselves and each other.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/josharian/intern@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/josharian/intern",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/josharian/intern",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-21b4533c5aebff09",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/josharian/intern@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package intern interns strings.\nInterning is best effort only.\nInterned strings may be removed automatically\nat any time without notification.\nAll functions may be called concurrently\nwith themselves and each other.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/josharian/intern@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/josharian/intern",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/josharian/intern",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-408af1136ce09e8d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/josharian/intern@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package intern interns strings.\nInterning is best effort only.\nInterned strings may be removed automatically\nat any time without notification.\nAll functions may be called concurrently\nwith themselves and each other.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/josharian/intern@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/josharian/intern",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/josharian/intern",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4847834209ef5c7e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/josharian/intern@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package intern interns strings.\nInterning is best effort only.\nInterned strings may be removed automatically\nat any time without notification.\nAll functions may be called concurrently\nwith themselves and each other.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/josharian/intern@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/josharian/intern",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/josharian/intern",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9aeddbd30f2c5ab5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/josharian/intern@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package intern interns strings.\nInterning is best effort only.\nInterned strings may be removed automatically\nat any time without notification.\nAll functions may be called concurrently\nwith themselves and each other.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/josharian/intern@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/josharian/intern",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/josharian/intern",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9c6ee8e6a804a840",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/josharian/intern@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package intern interns strings.\nInterning is best effort only.\nInterned strings may be removed automatically\nat any time without notification.\nAll functions may be called concurrently\nwith themselves and each other.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/josharian/intern@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/josharian/intern",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/josharian/intern",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e9d1b05320d3bbc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/josharian/intern@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package intern interns strings.\nInterning is best effort only.\nInterned strings may be removed automatically\nat any time without notification.\nAll functions may be called concurrently\nwith themselves and each other.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/josharian/intern@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/josharian/intern",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/josharian/intern",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9446cc4f3d684163",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/json-iterator/go@v1.1.12"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jsoniter implements encoding and decoding of JSON as defined in\nRFC 4627 and provides interfaces with identical syntax of standard lib encoding/json.\nConverting from encoding/json to jsoniter is no more than replacing the package with jsoniter\nand variable type declarations (if any).\njsoniter interfaces gives 100% compatibility with code using standard lib.\n\n\"JSON and Go\"\n(https://golang.org/doc/articles/json_and_go.html)\ngives a description of how Marshal/Unmarshal operate\nbetween arbitrary or predefined json objects and bytes,\nand it applies to jsoniter.Marshal/Unmarshal as well.\n\nBesides, jsoniter.Iterator provides a different set of interfaces\niterating given bytes/string/reader\nand yielding parsed elements one by one.\nThis set of interfaces reads input as required and gives\nbetter performance.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/json-iterator/go@1.1.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/json-iterator/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/json-iterator/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Jsoniter",
            "versionInfo": "1.1.12"
        },
        {
            "SPDXID": "SPDXRef-Package-dd9715842c477437",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/json-iterator/go@v1.1.12"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jsoniter implements encoding and decoding of JSON as defined in\nRFC 4627 and provides interfaces with identical syntax of standard lib encoding/json.\nConverting from encoding/json to jsoniter is no more than replacing the package with jsoniter\nand variable type declarations (if any).\njsoniter interfaces gives 100% compatibility with code using standard lib.\n\n\"JSON and Go\"\n(https://golang.org/doc/articles/json_and_go.html)\ngives a description of how Marshal/Unmarshal operate\nbetween arbitrary or predefined json objects and bytes,\nand it applies to jsoniter.Marshal/Unmarshal as well.\n\nBesides, jsoniter.Iterator provides a different set of interfaces\niterating given bytes/string/reader\nand yielding parsed elements one by one.\nThis set of interfaces reads input as required and gives\nbetter performance.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/json-iterator/go@1.1.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/json-iterator/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/json-iterator/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Jsoniter",
            "versionInfo": "1.1.12"
        },
        {
            "SPDXID": "SPDXRef-Package-fa9e86531a9aea01",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/json-iterator/go@v1.1.12"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jsoniter implements encoding and decoding of JSON as defined in\nRFC 4627 and provides interfaces with identical syntax of standard lib encoding/json.\nConverting from encoding/json to jsoniter is no more than replacing the package with jsoniter\nand variable type declarations (if any).\njsoniter interfaces gives 100% compatibility with code using standard lib.\n\n\"JSON and Go\"\n(https://golang.org/doc/articles/json_and_go.html)\ngives a description of how Marshal/Unmarshal operate\nbetween arbitrary or predefined json objects and bytes,\nand it applies to jsoniter.Marshal/Unmarshal as well.\n\nBesides, jsoniter.Iterator provides a different set of interfaces\niterating given bytes/string/reader\nand yielding parsed elements one by one.\nThis set of interfaces reads input as required and gives\nbetter performance.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/json-iterator/go@1.1.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/json-iterator/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/json-iterator/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Jsoniter",
            "versionInfo": "1.1.12"
        },
        {
            "SPDXID": "SPDXRef-Package-2f4be3792c4a30b8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jtolds/gls@v4.20.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gls implements goroutine-local storage.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jtolds/gls@4.20.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jtolds/gls",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/jtolds/gls",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: JT Olio",
            "versionInfo": "4.20.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-90dad43fd545dc8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/jtolds/gls@v4.20.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gls implements goroutine-local storage.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/jtolds/gls@4.20.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/jtolds/gls",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/jtolds/gls",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: JT Olio",
            "versionInfo": "4.20.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-4f2c4c65613a5a9d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/julienschmidt/httprouter@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package httprouter is a trie based high performance HTTP request router.\n\nA trivial example is:\n\nThe router matches incoming requests by the request method and the path.\nIf a handle is registered for this path and method, the router delegates the\nrequest to that function.\nFor the methods GET, POST, PUT, PATCH and DELETE shortcut functions exist to\nregister handles, for all other methods router.Handle can be used.\n\nThe registered path, against which the router matches incoming requests, can\ncontain two types of parameters:\n\nNamed parameters are dynamic path segments. They match anything until the\nnext '/' or the path end:\n\nCatch-all parameters match anything until the path end, including the\ndirectory index (the '/' before the catch-all). Since they match anything\nuntil the end, catch-all parameters must always be the final path element.\n\nThe value of parameters is saved as a slice of the Param struct, consisting\neach of a key and a value. The slice is passed to the Handle func as a third\nparameter.\nThere are two ways to retrieve the value of a parameter:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/julienschmidt/httprouter@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/julienschmidt/httprouter",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/julienschmidt/httprouter",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Julien Schmidt",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7f2efcbb20d68c2f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/julienschmidt/httprouter@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package httprouter is a trie based high performance HTTP request router.\n\nA trivial example is:\n\nThe router matches incoming requests by the request method and the path.\nIf a handle is registered for this path and method, the router delegates the\nrequest to that function.\nFor the methods GET, POST, PUT, PATCH and DELETE shortcut functions exist to\nregister handles, for all other methods router.Handle can be used.\n\nThe registered path, against which the router matches incoming requests, can\ncontain two types of parameters:\n\nNamed parameters are dynamic path segments. They match anything until the\nnext '/' or the path end:\n\nCatch-all parameters match anything until the path end, including the\ndirectory index (the '/' before the catch-all). Since they match anything\nuntil the end, catch-all parameters must always be the final path element.\n\nThe value of parameters is saved as a slice of the Param struct, consisting\neach of a key and a value. The slice is passed to the Handle func as a third\nparameter.\nThere are two ways to retrieve the value of a parameter:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/julienschmidt/httprouter@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/julienschmidt/httprouter",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/julienschmidt/httprouter",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Julien Schmidt",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-86eec57b41cd0f8f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/julienschmidt/httprouter@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package httprouter is a trie based high performance HTTP request router.\n\nA trivial example is:\n\nThe router matches incoming requests by the request method and the path.\nIf a handle is registered for this path and method, the router delegates the\nrequest to that function.\nFor the methods GET, POST, PUT, PATCH and DELETE shortcut functions exist to\nregister handles, for all other methods router.Handle can be used.\n\nThe registered path, against which the router matches incoming requests, can\ncontain two types of parameters:\n\nNamed parameters are dynamic path segments. They match anything until the\nnext '/' or the path end:\n\nCatch-all parameters match anything until the path end, including the\ndirectory index (the '/' before the catch-all). Since they match anything\nuntil the end, catch-all parameters must always be the final path element.\n\nThe value of parameters is saved as a slice of the Param struct, consisting\neach of a key and a value. The slice is passed to the Handle func as a third\nparameter.\nThere are two ways to retrieve the value of a parameter:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/julienschmidt/httprouter@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/julienschmidt/httprouter",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/julienschmidt/httprouter",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Julien Schmidt",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c82e2e0fc11f98f3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/julienschmidt/httprouter@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package httprouter is a trie based high performance HTTP request router.\n\nA trivial example is:\n\nThe router matches incoming requests by the request method and the path.\nIf a handle is registered for this path and method, the router delegates the\nrequest to that function.\nFor the methods GET, POST, PUT, PATCH and DELETE shortcut functions exist to\nregister handles, for all other methods router.Handle can be used.\n\nThe registered path, against which the router matches incoming requests, can\ncontain two types of parameters:\n\nNamed parameters are dynamic path segments. They match anything until the\nnext '/' or the path end:\n\nCatch-all parameters match anything until the path end, including the\ndirectory index (the '/' before the catch-all). Since they match anything\nuntil the end, catch-all parameters must always be the final path element.\n\nThe value of parameters is saved as a slice of the Param struct, consisting\neach of a key and a value. The slice is passed to the Handle func as a third\nparameter.\nThere are two ways to retrieve the value of a parameter:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/julienschmidt/httprouter@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/julienschmidt/httprouter",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/julienschmidt/httprouter",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Julien Schmidt",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d81aab814967b8e1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/julienschmidt/httprouter@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package httprouter is a trie based high performance HTTP request router.\n\nA trivial example is:\n\nThe router matches incoming requests by the request method and the path.\nIf a handle is registered for this path and method, the router delegates the\nrequest to that function.\nFor the methods GET, POST, PUT, PATCH and DELETE shortcut functions exist to\nregister handles, for all other methods router.Handle can be used.\n\nThe registered path, against which the router matches incoming requests, can\ncontain two types of parameters:\n\nNamed parameters are dynamic path segments. They match anything until the\nnext '/' or the path end:\n\nCatch-all parameters match anything until the path end, including the\ndirectory index (the '/' before the catch-all). Since they match anything\nuntil the end, catch-all parameters must always be the final path element.\n\nThe value of parameters is saved as a slice of the Param struct, consisting\neach of a key and a value. The slice is passed to the Handle func as a third\nparameter.\nThere are two ways to retrieve the value of a parameter:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/julienschmidt/httprouter@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/julienschmidt/httprouter",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/julienschmidt/httprouter",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Julien Schmidt",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-28e939812920a376",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kisielk/errcheck@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kisielk/errcheck@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kisielk/errcheck",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kisielk/errcheck",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Kamil Kisiel",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-51ba42b2a967a27a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kisielk/errcheck@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kisielk/errcheck@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kisielk/errcheck",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kisielk/errcheck",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Kamil Kisiel",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9126a62a7a1f8e1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kisielk/errcheck@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kisielk/errcheck@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kisielk/errcheck",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kisielk/errcheck",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Kamil Kisiel",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-eab036fc7227754",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kisielk/errcheck@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kisielk/errcheck@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kisielk/errcheck",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kisielk/errcheck",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Kamil Kisiel",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-eb91dc1cb7f9042b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kisielk/errcheck@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kisielk/errcheck@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kisielk/errcheck",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kisielk/errcheck",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Kamil Kisiel",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1d1eec47ecb7f71f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kisielk/gotool@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotool contains utility functions used to implement the standard\n\"cmd/go\" tool, provided as a convenience to developers who want to write\ntools with similar semantics.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kisielk/gotool@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kisielk/gotool",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kisielk/gotool",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5fd0707c9e73cffd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kisielk/gotool@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotool contains utility functions used to implement the standard\n\"cmd/go\" tool, provided as a convenience to developers who want to write\ntools with similar semantics.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kisielk/gotool@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kisielk/gotool",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kisielk/gotool",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a0ac46695f2f6680",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kisielk/gotool@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotool contains utility functions used to implement the standard\n\"cmd/go\" tool, provided as a convenience to developers who want to write\ntools with similar semantics.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kisielk/gotool@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kisielk/gotool",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kisielk/gotool",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a4bf0d94bf9eb99a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kisielk/gotool@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotool contains utility functions used to implement the standard\n\"cmd/go\" tool, provided as a convenience to developers who want to write\ntools with similar semantics.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kisielk/gotool@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kisielk/gotool",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kisielk/gotool",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bc8ede85b2339d0c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kisielk/gotool@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotool contains utility functions used to implement the standard\n\"cmd/go\" tool, provided as a convenience to developers who want to write\ntools with similar semantics.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kisielk/gotool@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kisielk/gotool",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kisielk/gotool",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e573640ba532c8d3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kisielk/gotool@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotool contains utility functions used to implement the standard\n\"cmd/go\" tool, provided as a convenience to developers who want to write\ntools with similar semantics.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kisielk/gotool@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kisielk/gotool",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kisielk/gotool",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-15eddcf4dbb1a2b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/klauspost/compress@v1.13.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/klauspost/compress@1.13.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/klauspost/compress",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "licenseDeclared": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "name": "github.com/klauspost/compress",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Klaus Post",
            "versionInfo": "1.13.6"
        },
        {
            "SPDXID": "SPDXRef-Package-34ec2462ec678fe0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/konsorten/go-windows-terminal-sequences@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/konsorten/go-windows-terminal-sequences@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/konsorten/go-windows-terminal-sequences",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/konsorten/go-windows-terminal-sequences",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-574fe1ba2f3a711c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/konsorten/go-windows-terminal-sequences@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/konsorten/go-windows-terminal-sequences@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/konsorten/go-windows-terminal-sequences",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/konsorten/go-windows-terminal-sequences",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-5acda48b81605c4f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/konsorten/go-windows-terminal-sequences@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/konsorten/go-windows-terminal-sequences@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/konsorten/go-windows-terminal-sequences",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/konsorten/go-windows-terminal-sequences",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-8506857f7d3b18ea",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/konsorten/go-windows-terminal-sequences@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/konsorten/go-windows-terminal-sequences@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/konsorten/go-windows-terminal-sequences",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/konsorten/go-windows-terminal-sequences",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a8ff95a83e68be1f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/konsorten/go-windows-terminal-sequences@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/konsorten/go-windows-terminal-sequences@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/konsorten/go-windows-terminal-sequences",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/konsorten/go-windows-terminal-sequences",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-3303f3ad0d47aa27",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/logfmt@v0.0.0-20140226030751-b84e30acd515"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package implements the decoding of logfmt key-value pairs.\n\nExample logfmt message:\n\nExample result in JSON:\n\nEBNFish:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/logfmt@0.0.0-20140226030751-b84e30acd515",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/logfmt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/logfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20140226030751-b84e30acd515"
        },
        {
            "SPDXID": "SPDXRef-Package-58d9a1cf05e57b60",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/logfmt@v0.0.0-20140226030751-b84e30acd515"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package implements the decoding of logfmt key-value pairs.\n\nExample logfmt message:\n\nExample result in JSON:\n\nEBNFish:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/logfmt@0.0.0-20140226030751-b84e30acd515",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/logfmt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/logfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20140226030751-b84e30acd515"
        },
        {
            "SPDXID": "SPDXRef-Package-6fe18635d02c9b62",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/logfmt@v0.0.0-20140226030751-b84e30acd515"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package implements the decoding of logfmt key-value pairs.\n\nExample logfmt message:\n\nExample result in JSON:\n\nEBNFish:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/logfmt@0.0.0-20140226030751-b84e30acd515",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/logfmt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/logfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20140226030751-b84e30acd515"
        },
        {
            "SPDXID": "SPDXRef-Package-7fa366b1181e9ed2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/logfmt@v0.0.0-20140226030751-b84e30acd515"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package implements the decoding of logfmt key-value pairs.\n\nExample logfmt message:\n\nExample result in JSON:\n\nEBNFish:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/logfmt@0.0.0-20140226030751-b84e30acd515",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/logfmt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/logfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20140226030751-b84e30acd515"
        },
        {
            "SPDXID": "SPDXRef-Package-f80c1da0e7fe9e84",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/logfmt@v0.0.0-20140226030751-b84e30acd515"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package implements the decoding of logfmt key-value pairs.\n\nExample logfmt message:\n\nExample result in JSON:\n\nEBNFish:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/logfmt@0.0.0-20140226030751-b84e30acd515",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/logfmt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/logfmt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20140226030751-b84e30acd515"
        },
        {
            "SPDXID": "SPDXRef-Package-2047c45c07c436bd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pretty@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pretty provides pretty-printing for Go values. This is\nuseful during debugging, to avoid wrapping long output lines in\nthe terminal.\n\nIt provides a function, Formatter, that can be used with any\nfunction that accepts a format string. It also provides\nconvenience wrappers for functions in packages fmt and log.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pretty@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-70baea2bea2c6710",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pretty@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pretty provides pretty-printing for Go values. This is\nuseful during debugging, to avoid wrapping long output lines in\nthe terminal.\n\nIt provides a function, Formatter, that can be used with any\nfunction that accepts a format string. It also provides\nconvenience wrappers for functions in packages fmt and log.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pretty@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8d9a8a7d22d8b4b2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pretty@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pretty provides pretty-printing for Go values. This is\nuseful during debugging, to avoid wrapping long output lines in\nthe terminal.\n\nIt provides a function, Formatter, that can be used with any\nfunction that accepts a format string. It also provides\nconvenience wrappers for functions in packages fmt and log.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pretty@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a98713f8a8ce1c80",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pretty@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pretty provides pretty-printing for Go values. This is\nuseful during debugging, to avoid wrapping long output lines in\nthe terminal.\n\nIt provides a function, Formatter, that can be used with any\nfunction that accepts a format string. It also provides\nconvenience wrappers for functions in packages fmt and log.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pretty@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-afcc5a6498c29ef2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pretty@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pretty provides pretty-printing for Go values. This is\nuseful during debugging, to avoid wrapping long output lines in\nthe terminal.\n\nIt provides a function, Formatter, that can be used with any\nfunction that accepts a format string. It also provides\nconvenience wrappers for functions in packages fmt and log.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pretty@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b1b383aeb9f998f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pretty@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pretty provides pretty-printing for Go values. This is\nuseful during debugging, to avoid wrapping long output lines in\nthe terminal.\n\nIt provides a function, Formatter, that can be used with any\nfunction that accepts a format string. It also provides\nconvenience wrappers for functions in packages fmt and log.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pretty@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b65a0b706586f74b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pretty@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pretty provides pretty-printing for Go values. This is\nuseful during debugging, to avoid wrapping long output lines in\nthe terminal.\n\nIt provides a function, Formatter, that can be used with any\nfunction that accepts a format string. It also provides\nconvenience wrappers for functions in packages fmt and log.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pretty@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d42890b4546b57b2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pretty@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pretty provides pretty-printing for Go values. This is\nuseful during debugging, to avoid wrapping long output lines in\nthe terminal.\n\nIt provides a function, Formatter, that can be used with any\nfunction that accepts a format string. It also provides\nconvenience wrappers for functions in packages fmt and log.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pretty@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f2659c4fcaedbc7c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pretty@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pretty provides pretty-printing for Go values. This is\nuseful during debugging, to avoid wrapping long output lines in\nthe terminal.\n\nIt provides a function, Formatter, that can be used with any\nfunction that accepts a format string. It also provides\nconvenience wrappers for functions in packages fmt and log.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pretty@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1cd3e846be3d704c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pty@v1.1.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pty is a wrapper for github.com/creack/pty, which provides\nfunctions for working with Unix terminals.\n\nThis package is deprecated. Existing clients will continue to work,\nbut no further updates will happen here. New clients should use\ngithub.com/creack/pty directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pty@1.1.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.5"
        },
        {
            "SPDXID": "SPDXRef-Package-3150439459f53bfb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pty@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pty is a wrapper for github.com/creack/pty, which provides\nfunctions for working with Unix terminals.\n\nThis package is deprecated. Existing clients will continue to work,\nbut no further updates will happen here. New clients should use\ngithub.com/creack/pty directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pty@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-53987fc4235f4c2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pty@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pty is a wrapper for github.com/creack/pty, which provides\nfunctions for working with Unix terminals.\n\nThis package is deprecated. Existing clients will continue to work,\nbut no further updates will happen here. New clients should use\ngithub.com/creack/pty directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pty@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-60ebe41f2e6814b0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pty@v1.1.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pty is a wrapper for github.com/creack/pty, which provides\nfunctions for working with Unix terminals.\n\nThis package is deprecated. Existing clients will continue to work,\nbut no further updates will happen here. New clients should use\ngithub.com/creack/pty directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pty@1.1.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.5"
        },
        {
            "SPDXID": "SPDXRef-Package-73bc928fc5f43001",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pty@v1.1.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pty is a wrapper for github.com/creack/pty, which provides\nfunctions for working with Unix terminals.\n\nThis package is deprecated. Existing clients will continue to work,\nbut no further updates will happen here. New clients should use\ngithub.com/creack/pty directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pty@1.1.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.5"
        },
        {
            "SPDXID": "SPDXRef-Package-7dcc28213e77ca10",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pty@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pty is a wrapper for github.com/creack/pty, which provides\nfunctions for working with Unix terminals.\n\nThis package is deprecated. Existing clients will continue to work,\nbut no further updates will happen here. New clients should use\ngithub.com/creack/pty directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pty@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-aa2f9afc27a3efcf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/pty@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pty is a wrapper for github.com/creack/pty, which provides\nfunctions for working with Unix terminals.\n\nThis package is deprecated. Existing clients will continue to work,\nbut no further updates will happen here. New clients should use\ngithub.com/creack/pty directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/pty@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/pty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/pty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-1e0ace02da3712f6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/text@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package text provides rudimentary functions for manipulating text in\nparagraphs.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/text@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/text",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-25c4f302493eee5b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/text@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package text provides rudimentary functions for manipulating text in\nparagraphs.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/text@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/text",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-363b8957865cb4e1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/text@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package text provides rudimentary functions for manipulating text in\nparagraphs.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/text@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/text",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-adaa156a03f86923",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/text@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package text provides rudimentary functions for manipulating text in\nparagraphs.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/text@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/text",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-cf00ff91628d8b55",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/text@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package text provides rudimentary functions for manipulating text in\nparagraphs.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/text@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/text",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d07a3eb1c0fba23e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/text@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package text provides rudimentary functions for manipulating text in\nparagraphs.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/text@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/text",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d145bf924a23c2df",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/kr/text@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package text provides rudimentary functions for manipulating text in\nparagraphs.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/kr/text@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kr/text",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/kr/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4e30daa11022667c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/labstack/echo/v4@v4.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package echo implements high performance, minimalist Go web framework.\n\nExample:\n\nLearn more at https://echo.labstack.com",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/labstack/echo/v4@4.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/labstack/echo",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/labstack/echo/v4",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: LabStack LLC",
            "versionInfo": "4.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-7bb4c0384e7b9bd2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/labstack/gommon@v0.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/labstack/gommon@0.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/labstack/gommon",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/labstack/gommon",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: LabStack LLC",
            "versionInfo": "0.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e0318d305d821251",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/lann/builder@v0.0.0-20180802200727-47ae307949d0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package builder provides a method for writing fluent immutable builders.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/lann/builder@0.0.0-20180802200727-47ae307949d0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/lann/builder",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/lann/builder",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180802200727-47ae307949d0"
        },
        {
            "SPDXID": "SPDXRef-Package-903194f8f87e3e85",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/lann/ps@v0.0.0-20150810152359-62de8c46ede0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Fully persistent data structures. A persistent data structure is a data\nstructure that always preserves the previous version of itself when\nit is modified. Such data structures are effectively immutable,\nas their operations do not update the structure in-place, but instead\nalways yield a new structure.\n\nPersistent\ndata structures typically share structure among themselves.  This allows\noperations to avoid copying the entire data structure.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/lann/ps@0.0.0-20150810152359-62de8c46ede0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/lann/ps",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/lann/ps",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20150810152359-62de8c46ede0"
        },
        {
            "SPDXID": "SPDXRef-Package-12a31c13e96b6da5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/lib/pq@v1.10.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pq is a pure Go Postgres driver for the database/sql package.\n\nIn most cases clients will use the database/sql package instead of\nusing this package directly. For example:\n\nYou can also connect to a database using a URL. For example:\n\nSimilarly to libpq, when establishing a connection using pq you are expected to\nsupply a connection string containing zero or more parameters.\nA subset of the connection parameters supported by libpq are also supported by pq.\nAdditionally, pq also lets you specify run-time parameters (such as search_path or work_mem)\ndirectly in the connection string.  This is different from libpq, which does not allow\nrun-time parameters in the connection string, instead requiring you to supply\nthem in the options parameter.\n\nFor compatibility with libpq, the following special connection parameters are\nsupported:\n\nValid values for sslmode are:\n\nSee http://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING\nfor more information about connection string parameters.\n\nUse single quotes for values that contain whitespace:\n\nA backslash will escape the next character in values:\n\nNote that the connection parameter client_encoding (which sets the\ntext encoding for the connection) may be set but must be \"UTF8\",\nmatching with the same rules as Postgres. It is an error to provide\nany other value.\n\nIn addition to the parameters listed above, any run-time parameter that can be\nset at backend start time can be set in the connection string.  For more\ninformation, see\nhttp://www.postgresql.org/docs/current/static/runtime-config.html.\n\nMost environment variables as specified at http://www.postgresql.org/docs/current/static/libpq-envars.html\nsupported by libpq are also supported by pq.  If any of the environment\nvariables not supported by pq are set, pq will panic during connection\nestablishment.  Environment variables have a lower precedence than explicitly\nprovided connection parameters.\n\nThe pgpass mechanism as described in http://www.postgresql.org/docs/current/static/libpq-pgpass.html\nis supported, but on Windows PGPASSFILE must be specified explicitly.\n\ndatabase/sql does not dictate any specific format for parameter\nmarkers in query strings, and pq uses the Postgres-native ordinal markers,\nas shown above. The same marker can be reused for the same parameter:\n\npq does not support the LastInsertId() method of the Result type in database/sql.\nTo return the identifier of an INSERT (or UPDATE or DELETE), use the Postgres\nRETURNING clause with a standard Query or QueryRow call:\n\nFor more details on RETURNING, see the Postgres documentation:\n\nFor additional instructions on querying see the documentation for the database/sql package.\n\nParameters pass through driver.DefaultParameterConverter before they are handled\nby this package. When the binary_parameters connection option is enabled,\n[]byte values are sent directly to the backend as data in binary format.\n\nThis package returns the following types for values from the PostgreSQL backend:\n\nAll other types are returned directly from the backend as []byte values in text format.\n\npq may return errors of type *pq.Error which can be interrogated for error details:\n\nSee the pq.Error type for details.\n\nYou can perform bulk imports by preparing a statement returned by pq.CopyIn (or\npq.CopyInSchema) in an explicit transaction (sql.Tx). The returned statement\nhandle can then be repeatedly \"executed\" to copy data into the target table.\nAfter all data has been processed you should call Exec() once with no arguments\nto flush all buffered data. Any call to Exec() might return an error which\nshould be handled appropriately, but because of the internal buffering an error\nreturned by Exec() might not be related to the data passed in the call that\nfailed.\n\nCopyIn uses COPY FROM internally. It is not possible to COPY outside of an\nexplicit transaction in pq.\n\nUsage example:\n\nPostgreSQL supports a simple publish/subscribe model over database\nconnections.  See http://www.postgresql.org/docs/current/static/sql-notify.html\nfor more information about the general mechanism.\n\nTo start listening for notifications, you first have to open a new connection\nto the database by calling NewListener.  This connection can not be used for\nanything other than LISTEN / NOTIFY.  Calling Listen will open a \"notification\nchannel\"; once a notification channel is open, a notification generated on that\nchannel will effect a send on the Listener.Notify channel.  A notification\nchannel will remain open until Unlisten is called, though connection loss might\nresult in some notifications being lost.  To solve this problem, Listener sends\na nil pointer over the Notify channel any time the connection is re-established\nfollowing a connection loss.  The application can get information about the\nstate of the underlying connection by setting an event callback in the call to\nNewListener.\n\nA single Listener can safely be used from concurrent goroutines, which means\nthat there is often no need to create more than one Listener in your\napplication.  However, a Listener is always connected to a single database, so\nyou will need to create a new Listener instance for every database you want to\nreceive notifications in.\n\nThe channel name in both Listen and Unlisten is case sensitive, and can contain\nany characters legal in an identifier (see\nhttp://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS\nfor more information).  Note that the channel name will be truncated to 63\nbytes by the PostgreSQL server.\n\nYou can find a complete, working example of Listener usage at\nhttps://godoc.org/github.com/lib/pq/example/listen.\n\nIf you need support for Kerberos authentication, add the following to your main\npackage:\n\nThis package is in a separate module so that users who don't need Kerberos\ndon't have to download unnecessary dependencies.\n\nWhen imported, additional connection string parameters are supported:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/lib/pq@1.10.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/lib/pq",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/lib/pq",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: lib",
            "versionInfo": "1.10.6"
        },
        {
            "SPDXID": "SPDXRef-Package-efe0aefc3eb9e93d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/liggitt/tabwriter@v0.0.0-20181228230101-89fcab3d43de"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package tabwriter implements a write filter (tabwriter.Writer) that\ntranslates tabbed columns in input into properly aligned text.\n\nIt is a drop-in replacement for the golang text/tabwriter package (https://golang.org/pkg/text/tabwriter),\nbased on that package at https://github.com/golang/go/tree/cf2c2ea89d09d486bb018b1817c5874388038c3a\nwith support for additional features.\n\nThe package is using the Elastic Tabstops algorithm described at\nhttp://nickgravgaard.com/elastictabstops/index.html.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/liggitt/tabwriter@0.0.0-20181228230101-89fcab3d43de",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/liggitt/tabwriter",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/liggitt/tabwriter",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Jordan Liggitt",
            "versionInfo": "0.0.0-20181228230101-89fcab3d43de"
        },
        {
            "SPDXID": "SPDXRef-Package-109a6cc15e60bc8c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-20a2781e6b76083e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2dfe041912593b38",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-3a91acfdeff6f52",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4ecc0900c9519ca7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a890bd506ca8761f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b29895681dfec53",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c3dd236c54c934a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.7"
        },
        {
            "SPDXID": "SPDXRef-Package-c42d04808ffe7e8f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c5d8aad3270dd619",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d8b319733c41ebc2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-e936e34ee9cf76fd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.7"
        },
        {
            "SPDXID": "SPDXRef-Package-f22abda13ab5f4b6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/magiconair/properties@v1.8.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package properties provides functions for reading and writing\nISO-8859-1 and UTF-8 encoded .properties files and has\nsupport for recursive property expansion.\n\nJava properties files are ISO-8859-1 encoded and use Unicode\nliterals for characters outside the ISO character set. Unicode\nliterals can be used in UTF-8 encoded properties files but\naren't necessary.\n\nTo load a single properties file use MustLoadFile():\n\nTo load multiple properties files use MustLoadFiles()\nwhich loads the files in the given order and merges the\nresult. Missing properties files can be ignored if the\n'ignoreMissing' flag is set to true.\n\nFilenames can contain environment variables which are expanded\nbefore loading.\n\nAll of the different key/value delimiters ' ', ':' and '=' are\nsupported as well as the comment characters '!' and '#' and\nmulti-line values.\n\nProperties stores all comments preceding a key and provides\nGetComments() and SetComments() methods to retrieve and\nupdate them. The convenience functions GetComment() and\nSetComment() allow access to the last comment. The\nWriteComment() method writes properties files including\nthe comments and with the keys in the original order.\nThis can be used for sanitizing properties files.\n\nProperty expansion is recursive and circular references\nand malformed expressions are not allowed and cause an\nerror. Expansion of environment variables is supported.\n\nThe default property expansion format is ${key} but can be\nchanged by setting different pre- and postfix values on the\nProperties object.\n\nProperties provides convenience functions for getting typed\nvalues with default values if the key does not exist or the\ntype conversion failed.\n\nAs an alternative properties may be applied with the standard\nlibrary's flag implementation at any time.\n\nProperties provides several MustXXX() convenience functions\nwhich will terminate the app if an error occurs. The behavior\nof the failure is configurable and the default is to call\nlog.Fatal(err). To have the MustXXX() functions panic instead\nof logging the error set a different ErrorHandler before\nyou use the Properties package.\n\nYou can also provide your own ErrorHandler function. The only requirement\nis that the error handler function must exit after handling the error.\n\nProperties can also be loaded into a struct via the `Decode`\nmethod, e.g.\n\nSee `Decode()` method for the full documentation.\n\nThe following documents provide a description of the properties\nfile format.\n\nhttp://en.wikipedia.org/wiki/.properties\n\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/magiconair/properties@1.8.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/magiconair/properties",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/magiconair/properties",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Frank Schr\u00f6der",
            "versionInfo": "1.8.7"
        },
        {
            "SPDXID": "SPDXRef-Package-2ce4c0c5e1ee5420",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-552127d1aa8fb355",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.7"
        },
        {
            "SPDXID": "SPDXRef-Package-77327cb32bf95850",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.7"
        },
        {
            "SPDXID": "SPDXRef-Package-7c43f780ca90f9ca",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.6"
        },
        {
            "SPDXID": "SPDXRef-Package-7eb6859ee2900a09",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.0.0-20190626092158-b2ccc519800e"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.0.0-20190626092158-b2ccc519800e",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.0.0-20190626092158-b2ccc519800e"
        },
        {
            "SPDXID": "SPDXRef-Package-8fe3b934fb61fcf1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.0.0-20190626092158-b2ccc519800e"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.0.0-20190626092158-b2ccc519800e",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.0.0-20190626092158-b2ccc519800e"
        },
        {
            "SPDXID": "SPDXRef-Package-a87530321d3f0de5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b1568297d0cbf639",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b8f5562588f96883",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.7"
        },
        {
            "SPDXID": "SPDXRef-Package-ca9e1581ea9f7a90",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.7"
        },
        {
            "SPDXID": "SPDXRef-Package-ccdb3a56b723a0b8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-dfb381a597b028de",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fbcec774f036125c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.7"
        },
        {
            "SPDXID": "SPDXRef-Package-fcacb38c3f44c24e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.7"
        },
        {
            "SPDXID": "SPDXRef-Package-49d50980c7cfc331",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matryer/moq@v0.0.0-20190312154309-6cfb0558e1bd"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matryer/moq@0.0.0-20190312154309-6cfb0558e1bd",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matryer/moq",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/matryer/moq",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Mat Ryer",
            "versionInfo": "0.0.0-20190312154309-6cfb0558e1bd"
        },
        {
            "SPDXID": "SPDXRef-Package-30557bb4282a0206",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mattn/go-colorable@v0.1.12"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mattn/go-colorable@0.1.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mattn/go-colorable",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mattn/go-colorable",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: mattn",
            "versionInfo": "0.1.12"
        },
        {
            "SPDXID": "SPDXRef-Package-5159838af7f01f66",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mattn/go-colorable@v0.1.12"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mattn/go-colorable@0.1.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mattn/go-colorable",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mattn/go-colorable",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: mattn",
            "versionInfo": "0.1.12"
        },
        {
            "SPDXID": "SPDXRef-Package-84e99bb4996b9414",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mattn/go-isatty@v0.0.14"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package isatty implements interface to isatty",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mattn/go-isatty@0.0.14",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mattn/go-isatty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mattn/go-isatty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: mattn",
            "versionInfo": "0.0.14"
        },
        {
            "SPDXID": "SPDXRef-Package-e824feb1e6845b4c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mattn/go-isatty@v0.0.14"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package isatty implements interface to isatty",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mattn/go-isatty@0.0.14",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mattn/go-isatty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mattn/go-isatty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: mattn",
            "versionInfo": "0.0.14"
        },
        {
            "SPDXID": "SPDXRef-Package-1540e017ea1bcc84",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mattn/go-runewidth@v0.0.14"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mattn/go-runewidth@0.0.14",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mattn/go-runewidth",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mattn/go-runewidth",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: mattn",
            "versionInfo": "0.0.14"
        },
        {
            "SPDXID": "SPDXRef-Package-a2866f3c8ae310bf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mattn/go-runewidth@v0.0.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mattn/go-runewidth@0.0.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mattn/go-runewidth",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mattn/go-runewidth",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: mattn",
            "versionInfo": "0.0.9"
        },
        {
            "SPDXID": "SPDXRef-Package-2f504fc23676cedb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-593fd701ab897b9d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.2-0.20181231171920-c182affec369"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.2-0.20181231171920-c182affec369",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.2-0.20181231171920-c182affec369"
        },
        {
            "SPDXID": "SPDXRef-Package-60582731c84b91c9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.4"
        },
        {
            "SPDXID": "SPDXRef-Package-64976de915af4eb4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.4"
        },
        {
            "SPDXID": "SPDXRef-Package-8551795144e8ffad",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-8a5009e065c1853c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.4"
        },
        {
            "SPDXID": "SPDXRef-Package-99b09761af0effcb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b6176e8ed35f11a3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b7080b790b7503e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-bf4132a70996b8b9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c1e0ddae4971ed0d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-ca6cf9cfeaf155c5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d88e1cb456f6f13f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.4"
        },
        {
            "SPDXID": "SPDXRef-Package-fad7762f8b504e02",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.4"
        },
        {
            "SPDXID": "SPDXRef-Package-d455c4161d676a19",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/copystructure@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/copystructure@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/copystructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/copystructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-21332107558c01b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/go-wordwrap@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/go-wordwrap@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/go-wordwrap",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/go-wordwrap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1b4ac2224e11e063",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-2a15e58e24a0c33e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.4.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.4.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.4.3"
        },
        {
            "SPDXID": "SPDXRef-Package-2d5302ba1805f9fc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2f1d4a65e0dd597e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2f9d862698f69fc2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-439e2b07aae76aa8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-4d97b63be4deb123",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-6aa19559f68045e5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-6e86e1959c1608e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-76f8608053ca51c7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-7cacd64432ed4618",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-a3b39241949d2935",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-c997883c00276722",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-e1c57930cf1d6188",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/mapstructure@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mapstructure exposes functionality to convert one arbitrary\nGo type into another, typically to convert a map[string]interface{}\ninto a native Go structure.\n\nThe Go structure can be arbitrarily complex, containing slices,\nother structs, etc. and the decoder will properly decode nested\nmaps and so on into the proper structures in the native Go struct.\nSee the examples to see what the decoder is capable of.\n\nThe simplest function to start with is Decode.\n\nWhen decoding to a struct, mapstructure will use the field name by\ndefault to perform the mapping. For example, if a struct has a field\n\"Username\" then mapstructure will look for a key in the source value\nof \"username\" (case insensitive).\n\nYou can change the behavior of mapstructure by using struct tags.\nThe default struct tag that mapstructure looks for is \"mapstructure\"\nbut you can customize it using DecoderConfig.\n\nTo rename the key that mapstructure looks for, use the \"mapstructure\"\ntag and set a value directly. For example, to change the \"username\" example\nabove to \"user\":\n\nEmbedded structs are treated as if they're another field with that name.\nBy default, the two structs below are equivalent when decoding with\nmapstructure:\n\nThis would require an input that looks like below:\n\nIf your \"person\" value is NOT nested, then you can append \",squash\" to\nyour tag value and mapstructure will treat it as if the embedded struct\nwere part of the struct directly. Example:\n\nNow the following input would be accepted:\n\nWhen decoding from a struct to a map, the squash tag squashes the struct\nfields into a single map. Using the example structs from above:\n\nWill be decoded into a map:\n\nDecoderConfig has a field that changes the behavior of mapstructure\nto always squash embedded structs.\n\nIf there are any unmapped keys in the source value, mapstructure by\ndefault will silently ignore them. You can error by setting ErrorUnused\nin DecoderConfig. If you're using Metadata you can also maintain a slice\nof the unused keys.\n\nYou can also use the \",remain\" suffix on your tag to collect all unused\nvalues in a map. The field with this tag MUST be a map type and should\nprobably be a \"map[string]interface{}\" or \"map[interface{}]interface{}\".\nSee example below:\n\nGiven the input below, Other would be populated with the other\nvalues that weren't used (everything but \"name\"):\n\nWhen decoding from a struct to any other value, you may use the\n\",omitempty\" suffix on your tag to omit that value if it equates to\nthe zero value. The zero value of all types is specified in the Go\nspecification.\n\nFor example, the zero type of a numeric type is zero (\"0\"). If the struct\nfield value is zero and a numeric type, the field is empty, and it won't\nbe encoded into the destination type.\n\nSince unexported (private) struct fields cannot be set outside the package\nwhere they are defined, the decoder will simply skip them.\n\nFor this output type definition:\n\nUsing this map as input:\n\nThe following struct will be decoded:\n\nmapstructure is highly configurable. See the DecoderConfig struct\nfor other features and options that are supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/mapstructure@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/mapstructure",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/mapstructure",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Mitchell Hashimoto",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-bad172524fe5455f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mitchellh/reflectwalk@v1.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "reflectwalk is a package that allows you to \"walk\" complex structures\nsimilar to how you may \"walk\" a filesystem: visiting every element one\nby one and calling callback functions allowing you to handle and manipulate\nthose elements.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mitchellh/reflectwalk@1.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mitchellh/reflectwalk",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mitchellh/reflectwalk",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-4de3e5c8acf1ff95",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/moby/locker@v1.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package locker provides a mechanism for creating finer-grained locking to help\nfree up more global locks to handle other tasks.\n\nThe implementation looks close to a sync.Mutex, however the user must provide a\nreference to use to refer to the underlying lock when locking and unlocking,\nand unlock may generate an error.\n\nIf a lock with a given name does not exist when `Lock` is called, one is\ncreated.\nLock references are automatically cleaned up on `Unlock` if nothing else is\nwaiting for the lock.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/moby/locker@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/moby/locker",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/moby/locker",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Moby",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-12c10e62f49922e8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/moby/spdystream@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/moby/spdystream@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/moby/spdystream",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/moby/spdystream",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fba833ea2f73bfb6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/moby/term@v0.0.0-20210619224110-3f7ff695adc6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package term provides structures and helper functions to work with\nterminal (state, sizes).",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/moby/term@0.0.0-20210619224110-3f7ff695adc6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/moby/term",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/moby/term",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20210619224110-3f7ff695adc6"
        },
        {
            "SPDXID": "SPDXRef-Package-9656dcd84d07c4f5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/concurrent@v0.0.0-20180306012644-bacd9c7ef1dd"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/concurrent@0.0.0-20180306012644-bacd9c7ef1dd",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/concurrent",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/concurrent",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180306012644-bacd9c7ef1dd"
        },
        {
            "SPDXID": "SPDXRef-Package-a2324029db0de420",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/concurrent@v0.0.0-20180306012644-bacd9c7ef1dd"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/concurrent@0.0.0-20180306012644-bacd9c7ef1dd",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/concurrent",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/concurrent",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180306012644-bacd9c7ef1dd"
        },
        {
            "SPDXID": "SPDXRef-Package-a347e159689838a8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/concurrent@v0.0.0-20180306012644-bacd9c7ef1dd"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/concurrent@0.0.0-20180306012644-bacd9c7ef1dd",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/concurrent",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/concurrent",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180306012644-bacd9c7ef1dd"
        },
        {
            "SPDXID": "SPDXRef-Package-2f7ee80f8665dc79",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/reflect2@v1.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/reflect2@1.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/reflect2",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/reflect2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Modern Go Programming",
            "versionInfo": "1.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-cea52996d2eab1ed",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/reflect2@v1.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/reflect2@1.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/reflect2",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/reflect2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Modern Go Programming",
            "versionInfo": "1.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-d288062c8cdc782",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/reflect2@v1.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/reflect2@1.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/reflect2",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/reflect2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Modern Go Programming",
            "versionInfo": "1.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-be11a052a27e5166",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/monochromegane/go-gitignore@v0.0.0-20200626010858-205db1a8cc00"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/monochromegane/go-gitignore@0.0.0-20200626010858-205db1a8cc00",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/monochromegane/go-gitignore",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/monochromegane/go-gitignore",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200626010858-205db1a8cc00"
        },
        {
            "SPDXID": "SPDXRef-Package-73aa8832f0eb927f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/morikuni/aec@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/morikuni/aec@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/morikuni/aec",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/morikuni/aec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-40423bb145ed268b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/munnerz/goautoneg@v0.0.0-20191010083416-a7dc8b61c822"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/munnerz/goautoneg@0.0.0-20191010083416-a7dc8b61c822",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/munnerz/goautoneg",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/munnerz/goautoneg",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: James Munnelly",
            "versionInfo": "0.0.0-20191010083416-a7dc8b61c822"
        },
        {
            "SPDXID": "SPDXRef-Package-64b1103e539bd70d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/munnerz/goautoneg@v0.0.0-20191010083416-a7dc8b61c822"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/munnerz/goautoneg@0.0.0-20191010083416-a7dc8b61c822",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/munnerz/goautoneg",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/munnerz/goautoneg",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: James Munnelly",
            "versionInfo": "0.0.0-20191010083416-a7dc8b61c822"
        },
        {
            "SPDXID": "SPDXRef-Package-d7514982d7b68ea6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/munnerz/goautoneg@v0.0.0-20191010083416-a7dc8b61c822"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/munnerz/goautoneg@0.0.0-20191010083416-a7dc8b61c822",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/munnerz/goautoneg",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/munnerz/goautoneg",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: James Munnelly",
            "versionInfo": "0.0.0-20191010083416-a7dc8b61c822"
        },
        {
            "SPDXID": "SPDXRef-Package-a92fb3869908eccc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mwitkow/go-conntrack@v0.0.0-20161129095857-cc309e4a2223"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mwitkow/go-conntrack@0.0.0-20161129095857-cc309e4a2223",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mwitkow/go-conntrack",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/mwitkow/go-conntrack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20161129095857-cc309e4a2223"
        },
        {
            "SPDXID": "SPDXRef-Package-bbbd598681c26a73",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mwitkow/go-conntrack@v0.0.0-20161129095857-cc309e4a2223"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mwitkow/go-conntrack@0.0.0-20161129095857-cc309e4a2223",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mwitkow/go-conntrack",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/mwitkow/go-conntrack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20161129095857-cc309e4a2223"
        },
        {
            "SPDXID": "SPDXRef-Package-df39e29d7e5a1b6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mwitkow/go-conntrack@v0.0.0-20161129095857-cc309e4a2223"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mwitkow/go-conntrack@0.0.0-20161129095857-cc309e4a2223",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mwitkow/go-conntrack",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/mwitkow/go-conntrack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20161129095857-cc309e4a2223"
        },
        {
            "SPDXID": "SPDXRef-Package-f52f5771c374aa4d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mwitkow/go-conntrack@v0.0.0-20161129095857-cc309e4a2223"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mwitkow/go-conntrack@0.0.0-20161129095857-cc309e4a2223",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mwitkow/go-conntrack",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/mwitkow/go-conntrack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20161129095857-cc309e4a2223"
        },
        {
            "SPDXID": "SPDXRef-Package-f797c5fca3e42c39",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mwitkow/go-conntrack@v0.0.0-20161129095857-cc309e4a2223"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mwitkow/go-conntrack@0.0.0-20161129095857-cc309e4a2223",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mwitkow/go-conntrack",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/mwitkow/go-conntrack",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20161129095857-cc309e4a2223"
        },
        {
            "SPDXID": "SPDXRef-Package-705cc7e8a726d6f7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/nxadm/tail@v1.4.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "nxadm/tail provides a Go library that emulates the features of the BSD `tail`\nprogram. The library comes with full support for truncation/move detection as\nit is designed to work with log rotation tools. The library works on all\noperating systems supported by Go, including POSIX systems like Linux and\n*BSD, and MS Windows. Go 1.9 is the oldest compiler release supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/nxadm/tail@1.4.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/nxadm/tail",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/nxadm/tail",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.4.4"
        },
        {
            "SPDXID": "SPDXRef-Package-caa895745b69424c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/nxadm/tail@v1.4.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "nxadm/tail provides a Go library that emulates the features of the BSD `tail`\nprogram. The library comes with full support for truncation/move detection as\nit is designed to work with log rotation tools. The library works on all\noperating systems supported by Go, including POSIX systems like Linux and\n*BSD, and MS Windows. Go 1.9 is the oldest compiler release supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/nxadm/tail@1.4.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/nxadm/tail",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/nxadm/tail",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.4.4"
        },
        {
            "SPDXID": "SPDXRef-Package-f11df7d24ba06128",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/nxadm/tail@v1.4.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "nxadm/tail provides a Go library that emulates the features of the BSD `tail`\nprogram. The library comes with full support for truncation/move detection as\nit is designed to work with log rotation tools. The library works on all\noperating systems supported by Go, including POSIX systems like Linux and\n*BSD, and MS Windows. Go 1.9 is the oldest compiler release supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/nxadm/tail@1.4.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/nxadm/tail",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/nxadm/tail",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.4.4"
        },
        {
            "SPDXID": "SPDXRef-Package-6603aa5173f420d7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/oklog/ulid@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oklog/ulid@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oklog/ulid",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/oklog/ulid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: OK Log",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-6efc822929e221a3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/oklog/ulid@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oklog/ulid@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oklog/ulid",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/oklog/ulid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: OK Log",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-855f432b5c662da8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/oklog/ulid@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oklog/ulid@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oklog/ulid",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/oklog/ulid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: OK Log",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-9b3810b95b790cd9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/oklog/ulid@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oklog/ulid@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oklog/ulid",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/oklog/ulid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: OK Log",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a81c9e25bc148296",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/oklog/ulid@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oklog/ulid@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oklog/ulid",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/oklog/ulid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: OK Log",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-e16a8fd54bec6c4c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/oklog/ulid@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oklog/ulid@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oklog/ulid",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/oklog/ulid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: OK Log",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-e29dab2eea4a0324",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/oklog/ulid@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oklog/ulid@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oklog/ulid",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/oklog/ulid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: OK Log",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-f1cfea14d66d5c25",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/oklog/ulid@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oklog/ulid@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oklog/ulid",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/oklog/ulid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: OK Log",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-f2a373fac91cf6f2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/oklog/ulid@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/oklog/ulid@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oklog/ulid",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/oklog/ulid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: OK Log",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b965164931eb1f1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/ginkgo@v1.14.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Ginkgo is a BDD-style testing framework for Golang\n\nThe godoc documentation describes Ginkgo's API.  More comprehensive documentation (with examples!) is available at http://onsi.github.io/ginkgo/\n\nGinkgo's preferred matcher library is [Gomega](http://github.com/onsi/gomega)\n\nGinkgo on Github: http://github.com/onsi/ginkgo\n\nGinkgo is MIT-Licensed",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/ginkgo@1.14.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/ginkgo",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/ginkgo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "1.14.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e0473267349a809f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/ginkgo@v1.14.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Ginkgo is a BDD-style testing framework for Golang\n\nThe godoc documentation describes Ginkgo's API.  More comprehensive documentation (with examples!) is available at http://onsi.github.io/ginkgo/\n\nGinkgo's preferred matcher library is [Gomega](http://github.com/onsi/gomega)\n\nGinkgo on Github: http://github.com/onsi/ginkgo\n\nGinkgo is MIT-Licensed",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/ginkgo@1.14.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/ginkgo",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/ginkgo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "1.14.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f020f93614f247fc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/ginkgo@v1.14.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Ginkgo is a BDD-style testing framework for Golang\n\nThe godoc documentation describes Ginkgo's API.  More comprehensive documentation (with examples!) is available at http://onsi.github.io/ginkgo/\n\nGinkgo's preferred matcher library is [Gomega](http://github.com/onsi/gomega)\n\nGinkgo on Github: http://github.com/onsi/ginkgo\n\nGinkgo is MIT-Licensed",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/ginkgo@1.14.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/ginkgo",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/ginkgo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "1.14.0"
        },
        {
            "SPDXID": "SPDXRef-Package-db0a3b376c45c173",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/ginkgo/v2@v2.9.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Ginkgo is a testing framework for Go designed to help you write expressive tests.\nhttps://github.com/onsi/ginkgo\nMIT-Licensed\n\nThe godoc documentation outlines Ginkgo's API.  Since Ginkgo is a Domain-Specific Language it is important to\nbuild a mental model for Ginkgo - the narrative documentation at https://onsi.github.io/ginkgo/ is designed to help you do that.\nYou should start there - even a brief skim will be helpful.  At minimum you should skim through the https://onsi.github.io/ginkgo/#getting-started chapter.\n\nGinkgo's is best paired with the Gomega matcher library: https://github.com/onsi/gomega\n\nYou can run Ginkgo specs with go test - however we recommend using the ginkgo cli.  It enables functionality\nthat go test does not (especially running suites in parallel).  You can learn more at https://onsi.github.io/ginkgo/#ginkgo-cli-overview\nor by running 'ginkgo help'.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/ginkgo/v2@2.9.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/ginkgo",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/ginkgo/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "2.9.5"
        },
        {
            "SPDXID": "SPDXRef-Package-4565a2839c52c608",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/gomega@v1.10.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Gomega is the Ginkgo BDD-style testing framework's preferred matcher library.\n\nThe godoc documentation describes Gomega's API.  More comprehensive documentation (with examples!) is available at http://onsi.github.io/gomega/\n\nGomega on Github: http://github.com/onsi/gomega\n\nLearn more about Ginkgo online: http://onsi.github.io/ginkgo\n\nGinkgo on Github: http://github.com/onsi/ginkgo\n\nGomega is MIT-Licensed",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/gomega@1.10.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/gomega",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/gomega",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "1.10.1"
        },
        {
            "SPDXID": "SPDXRef-Package-52423afde59f9d91",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/gomega@v1.10.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Gomega is the Ginkgo BDD-style testing framework's preferred matcher library.\n\nThe godoc documentation describes Gomega's API.  More comprehensive documentation (with examples!) is available at http://onsi.github.io/gomega/\n\nGomega on Github: http://github.com/onsi/gomega\n\nLearn more about Ginkgo online: http://onsi.github.io/ginkgo\n\nGinkgo on Github: http://github.com/onsi/ginkgo\n\nGomega is MIT-Licensed",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/gomega@1.10.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/gomega",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/gomega",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "1.10.1"
        },
        {
            "SPDXID": "SPDXRef-Package-8e3fa1110ad84c62",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/gomega@v1.10.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Gomega is the Ginkgo BDD-style testing framework's preferred matcher library.\n\nThe godoc documentation describes Gomega's API.  More comprehensive documentation (with examples!) is available at http://onsi.github.io/gomega/\n\nGomega on Github: http://github.com/onsi/gomega\n\nLearn more about Ginkgo online: http://onsi.github.io/ginkgo\n\nGinkgo on Github: http://github.com/onsi/ginkgo\n\nGomega is MIT-Licensed",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/gomega@1.10.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/gomega",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/gomega",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "1.10.1"
        },
        {
            "SPDXID": "SPDXRef-Package-e32b205c62175894",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/gomega@v1.27.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Gomega is the Ginkgo BDD-style testing framework's preferred matcher library.\n\nThe godoc documentation describes Gomega's API.  More comprehensive documentation (with examples!) is available at http://onsi.github.io/gomega/\n\nGomega on Github: http://github.com/onsi/gomega\n\nLearn more about Ginkgo online: http://onsi.github.io/ginkgo\n\nGinkgo on Github: http://github.com/onsi/ginkgo\n\nGomega is MIT-Licensed",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/gomega@1.27.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/gomega",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/gomega",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "1.27.7"
        },
        {
            "SPDXID": "SPDXRef-Package-ae93ad68689a13ca",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/opencontainers/go-digest@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package digest provides a generalized type to opaquely represent message\ndigests and their operations within the registry. The Digest type is\ndesigned to serve as a flexible identifier in a content-addressable system.\nMore importantly, it provides tools and wrappers to work with\nhash.Hash-based digests with little effort.\n\nThe format of a digest is simply a string with two parts, dubbed the\n\"algorithm\" and the \"digest\", separated by a colon:\n\nAn example of a sha256 digest representation follows:\n\nThe \"algorithm\" portion defines both the hashing algorithm used to calculate\nthe digest and the encoding of the resulting digest, which defaults to \"hex\"\nif not otherwise specified. Currently, all supported algorithms have their\ndigests encoded in hex strings.\n\nIn the example above, the string \"sha256\" is the algorithm and the hex bytes\nare the \"digest\".\n\nBecause the Digest type is simply a string, once a valid Digest is\nobtained, comparisons are cheap, quick and simple to express with the\nstandard equality operator.\n\nThe main benefit of using the Digest type is simple verification against a\ngiven digest. The Verifier interface, modeled after the stdlib hash.Hash\ninterface, provides a common write sink for digest verification. After\nwriting is complete, calling the Verifier.Verified method will indicate\nwhether or not the stream of bytes matches the target digest.\n\nIn addition to the above, we intend to add the following features to this\npackage:\n\n1. A Digester type that supports write sink digest calculation.\n\n2. Suspend and resume of ongoing digest calculations to support efficient digest verification in the registry.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/opencontainers/go-digest@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/opencontainers/go-digest",
            "licenseConcluded": "Apache-2.0 OR CC-BY-SA-4.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/opencontainers/go-digest",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1755572320e6c5e9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/opencontainers/image-spec@v1.0.3-0.20211202183452-c5a74bcca799"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/opencontainers/image-spec@1.0.3-0.20211202183452-c5a74bcca799",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/opencontainers/image-spec",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/opencontainers/image-spec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Open Container Initiative",
            "versionInfo": "1.0.3-0.20211202183452-c5a74bcca799"
        },
        {
            "SPDXID": "SPDXRef-Package-2d1a4aa67d47687c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/opentracing/opentracing-go@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/opentracing/opentracing-go@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/opentracing/opentracing-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/opentracing/opentracing-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: OpenTracing API",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-34136e694402c8b6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/opentracing/opentracing-go@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/opentracing/opentracing-go@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/opentracing/opentracing-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/opentracing/opentracing-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: OpenTracing API",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-60a36719923af114",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/opentracing/opentracing-go@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/opentracing/opentracing-go@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/opentracing/opentracing-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/opentracing/opentracing-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: OpenTracing API",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c3d043e928810aa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/opentracing/opentracing-go@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/opentracing/opentracing-go@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/opentracing/opentracing-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/opentracing/opentracing-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: OpenTracing API",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c69a89532f2e158",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/opentracing/opentracing-go@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/opentracing/opentracing-go@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/opentracing/opentracing-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/opentracing/opentracing-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-tracelibgo/go.mod",
            "supplier": "Organization: OpenTracing API",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a221c083458649f7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/orcaman/concurrent-map@v0.0.0-20190314100340-2693aad1ed75"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/orcaman/concurrent-map@0.0.0-20190314100340-2693aad1ed75",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/orcaman/concurrent-map",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/orcaman/concurrent-map",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Or Hiltch",
            "versionInfo": "0.0.0-20190314100340-2693aad1ed75"
        },
        {
            "SPDXID": "SPDXRef-Package-b475087e2da302ed",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pborman/uuid@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "The uuid package generates and inspects UUIDs.\n\nUUIDs are based on RFC 4122 and DCE 1.1: Authentication and Security\nServices.\n\nThis package is a partial wrapper around the github.com/google/uuid package.\nThis package represents a UUID as []byte while github.com/google/uuid\nrepresents a UUID as [16]byte.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pborman/uuid@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pborman/uuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pborman/uuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bd6a8f32cf3dbac4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pborman/uuid@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "The uuid package generates and inspects UUIDs.\n\nUUIDs are based on RFC 4122 and DCE 1.1: Authentication and Security\nServices.\n\nThis package is a partial wrapper around the github.com/google/uuid package.\nThis package represents a UUID as []byte while github.com/google/uuid\nrepresents a UUID as [16]byte.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pborman/uuid@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pborman/uuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pborman/uuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-eb48ef2abec62cb1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pborman/uuid@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "The uuid package generates and inspects UUIDs.\n\nUUIDs are based on RFC 4122 and DCE 1.1: Authentication and Security\nServices.\n\nThis package is a partial wrapper around the github.com/google/uuid package.\nThis package represents a UUID as []byte while github.com/google/uuid\nrepresents a UUID as [16]byte.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pborman/uuid@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pborman/uuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pborman/uuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1995c4039ecb5bab",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a TOML parser and manipulation library.\n\nThis version supports the specification as described in\nhttps://github.com/toml-lang/toml/blob/master/versions/en/toml-v0.5.0.md\n\nGo-toml can marshal and unmarshal TOML documents from and to data\nstructures.\n\nGo-toml can operate on a TOML document as a tree. Use one of the Load*\nfunctions to parse TOML data and obtain a Tree instance, then one of its\nmethods to manipulate the tree.\n\nThe package github.com/pelletier/go-toml/query implements a system\nsimilar to JSONPath to quickly retrieve elements of a TOML document using a\nsingle expression. See the package documentation for more information.\n\nPackage civil implements types for civil time, a time-zone-independent\nrepresentation of time that follows the rules of the proleptic\nGregorian calendar with exactly 24-hour days, 60-minute hours, and 60-second\nminutes.\n\nBecause they lack location information, these types do not represent unique\nmoments or intervals of time. Use time.Time for that purpose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "github.com/pelletier/go-toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3f8b86c20e23a011",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml@v1.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a TOML parser and manipulation library.\n\nThis version supports the specification as described in\nhttps://github.com/toml-lang/toml/blob/master/versions/en/toml-v0.5.0.md\n\nGo-toml can marshal and unmarshal TOML documents from and to data\nstructures.\n\nGo-toml can operate on a TOML document as a tree. Use one of the Load*\nfunctions to parse TOML data and obtain a Tree instance, then one of its\nmethods to manipulate the tree.\n\nThe package github.com/pelletier/go-toml/query implements a system\nsimilar to JSONPath to quickly retrieve elements of a TOML document using a\nsingle expression. See the package documentation for more information.\n\nPackage civil implements types for civil time, a time-zone-independent\nrepresentation of time that follows the rules of the proleptic\nGregorian calendar with exactly 24-hour days, 60-minute hours, and 60-second\nminutes.\n\nBecause they lack location information, these types do not represent unique\nmoments or intervals of time. Use time.Time for that purpose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml@1.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "github.com/pelletier/go-toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "1.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-57b677733df20924",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a TOML parser and manipulation library.\n\nThis version supports the specification as described in\nhttps://github.com/toml-lang/toml/blob/master/versions/en/toml-v0.5.0.md\n\nGo-toml can marshal and unmarshal TOML documents from and to data\nstructures.\n\nGo-toml can operate on a TOML document as a tree. Use one of the Load*\nfunctions to parse TOML data and obtain a Tree instance, then one of its\nmethods to manipulate the tree.\n\nThe package github.com/pelletier/go-toml/query implements a system\nsimilar to JSONPath to quickly retrieve elements of a TOML document using a\nsingle expression. See the package documentation for more information.\n\nPackage civil implements types for civil time, a time-zone-independent\nrepresentation of time that follows the rules of the proleptic\nGregorian calendar with exactly 24-hour days, 60-minute hours, and 60-second\nminutes.\n\nBecause they lack location information, these types do not represent unique\nmoments or intervals of time. Use time.Time for that purpose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "github.com/pelletier/go-toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7376b628f15ff127",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a TOML parser and manipulation library.\n\nThis version supports the specification as described in\nhttps://github.com/toml-lang/toml/blob/master/versions/en/toml-v0.5.0.md\n\nGo-toml can marshal and unmarshal TOML documents from and to data\nstructures.\n\nGo-toml can operate on a TOML document as a tree. Use one of the Load*\nfunctions to parse TOML data and obtain a Tree instance, then one of its\nmethods to manipulate the tree.\n\nThe package github.com/pelletier/go-toml/query implements a system\nsimilar to JSONPath to quickly retrieve elements of a TOML document using a\nsingle expression. See the package documentation for more information.\n\nPackage civil implements types for civil time, a time-zone-independent\nrepresentation of time that follows the rules of the proleptic\nGregorian calendar with exactly 24-hour days, 60-minute hours, and 60-second\nminutes.\n\nBecause they lack location information, these types do not represent unique\nmoments or intervals of time. Use time.Time for that purpose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "github.com/pelletier/go-toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-803ad8fba4bc0923",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a TOML parser and manipulation library.\n\nThis version supports the specification as described in\nhttps://github.com/toml-lang/toml/blob/master/versions/en/toml-v0.5.0.md\n\nGo-toml can marshal and unmarshal TOML documents from and to data\nstructures.\n\nGo-toml can operate on a TOML document as a tree. Use one of the Load*\nfunctions to parse TOML data and obtain a Tree instance, then one of its\nmethods to manipulate the tree.\n\nThe package github.com/pelletier/go-toml/query implements a system\nsimilar to JSONPath to quickly retrieve elements of a TOML document using a\nsingle expression. See the package documentation for more information.\n\nPackage civil implements types for civil time, a time-zone-independent\nrepresentation of time that follows the rules of the proleptic\nGregorian calendar with exactly 24-hour days, 60-minute hours, and 60-second\nminutes.\n\nBecause they lack location information, these types do not represent unique\nmoments or intervals of time. Use time.Time for that purpose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "github.com/pelletier/go-toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8189c34da0fde783",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a TOML parser and manipulation library.\n\nThis version supports the specification as described in\nhttps://github.com/toml-lang/toml/blob/master/versions/en/toml-v0.5.0.md\n\nGo-toml can marshal and unmarshal TOML documents from and to data\nstructures.\n\nGo-toml can operate on a TOML document as a tree. Use one of the Load*\nfunctions to parse TOML data and obtain a Tree instance, then one of its\nmethods to manipulate the tree.\n\nThe package github.com/pelletier/go-toml/query implements a system\nsimilar to JSONPath to quickly retrieve elements of a TOML document using a\nsingle expression. See the package documentation for more information.\n\nPackage civil implements types for civil time, a time-zone-independent\nrepresentation of time that follows the rules of the proleptic\nGregorian calendar with exactly 24-hour days, 60-minute hours, and 60-second\nminutes.\n\nBecause they lack location information, these types do not represent unique\nmoments or intervals of time. Use time.Time for that purpose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "github.com/pelletier/go-toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-889cdeba1b8b0856",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a TOML parser and manipulation library.\n\nThis version supports the specification as described in\nhttps://github.com/toml-lang/toml/blob/master/versions/en/toml-v0.5.0.md\n\nGo-toml can marshal and unmarshal TOML documents from and to data\nstructures.\n\nGo-toml can operate on a TOML document as a tree. Use one of the Load*\nfunctions to parse TOML data and obtain a Tree instance, then one of its\nmethods to manipulate the tree.\n\nThe package github.com/pelletier/go-toml/query implements a system\nsimilar to JSONPath to quickly retrieve elements of a TOML document using a\nsingle expression. See the package documentation for more information.\n\nPackage civil implements types for civil time, a time-zone-independent\nrepresentation of time that follows the rules of the proleptic\nGregorian calendar with exactly 24-hour days, 60-minute hours, and 60-second\nminutes.\n\nBecause they lack location information, these types do not represent unique\nmoments or intervals of time. Use time.Time for that purpose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "github.com/pelletier/go-toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-97ee15f6ddd2003d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a TOML parser and manipulation library.\n\nThis version supports the specification as described in\nhttps://github.com/toml-lang/toml/blob/master/versions/en/toml-v0.5.0.md\n\nGo-toml can marshal and unmarshal TOML documents from and to data\nstructures.\n\nGo-toml can operate on a TOML document as a tree. Use one of the Load*\nfunctions to parse TOML data and obtain a Tree instance, then one of its\nmethods to manipulate the tree.\n\nThe package github.com/pelletier/go-toml/query implements a system\nsimilar to JSONPath to quickly retrieve elements of a TOML document using a\nsingle expression. See the package documentation for more information.\n\nPackage civil implements types for civil time, a time-zone-independent\nrepresentation of time that follows the rules of the proleptic\nGregorian calendar with exactly 24-hour days, 60-minute hours, and 60-second\nminutes.\n\nBecause they lack location information, these types do not represent unique\nmoments or intervals of time. Use time.Time for that purpose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "github.com/pelletier/go-toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-acd89369014ea577",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml@v1.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a TOML parser and manipulation library.\n\nThis version supports the specification as described in\nhttps://github.com/toml-lang/toml/blob/master/versions/en/toml-v0.5.0.md\n\nGo-toml can marshal and unmarshal TOML documents from and to data\nstructures.\n\nGo-toml can operate on a TOML document as a tree. Use one of the Load*\nfunctions to parse TOML data and obtain a Tree instance, then one of its\nmethods to manipulate the tree.\n\nThe package github.com/pelletier/go-toml/query implements a system\nsimilar to JSONPath to quickly retrieve elements of a TOML document using a\nsingle expression. See the package documentation for more information.\n\nPackage civil implements types for civil time, a time-zone-independent\nrepresentation of time that follows the rules of the proleptic\nGregorian calendar with exactly 24-hour days, 60-minute hours, and 60-second\nminutes.\n\nBecause they lack location information, these types do not represent unique\nmoments or intervals of time. Use time.Time for that purpose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml@1.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "github.com/pelletier/go-toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "1.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d219d05b92395818",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml@v1.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a TOML parser and manipulation library.\n\nThis version supports the specification as described in\nhttps://github.com/toml-lang/toml/blob/master/versions/en/toml-v0.5.0.md\n\nGo-toml can marshal and unmarshal TOML documents from and to data\nstructures.\n\nGo-toml can operate on a TOML document as a tree. Use one of the Load*\nfunctions to parse TOML data and obtain a Tree instance, then one of its\nmethods to manipulate the tree.\n\nThe package github.com/pelletier/go-toml/query implements a system\nsimilar to JSONPath to quickly retrieve elements of a TOML document using a\nsingle expression. See the package documentation for more information.\n\nPackage civil implements types for civil time, a time-zone-independent\nrepresentation of time that follows the rules of the proleptic\nGregorian calendar with exactly 24-hour days, 60-minute hours, and 60-second\nminutes.\n\nBecause they lack location information, these types do not represent unique\nmoments or intervals of time. Use time.Time for that purpose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml@1.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "github.com/pelletier/go-toml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "1.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-11dd9eb7c7069eac",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml/v2@v2.0.8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a library to read and write TOML documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml/v2@2.0.8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/pelletier/go-toml/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "2.0.8"
        },
        {
            "SPDXID": "SPDXRef-Package-586f486e90731fa3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml/v2@v2.0.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a library to read and write TOML documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml/v2@2.0.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/pelletier/go-toml/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "2.0.6"
        },
        {
            "SPDXID": "SPDXRef-Package-c7dd935e9d81dfde",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml/v2@v2.0.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a library to read and write TOML documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml/v2@2.0.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/pelletier/go-toml/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "2.0.6"
        },
        {
            "SPDXID": "SPDXRef-Package-aefc4c92a73e2d05",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/peterbourgon/diskv@v2.0.1+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/peterbourgon/diskv@2.0.1%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/peterbourgon/diskv",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/peterbourgon/diskv",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Peter Bourgon",
            "versionInfo": "2.0.1+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-128a2f63f326992b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.9.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-331b195ed35bc8e4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/common/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-5eb690f30a54b71d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-62fb0502d7836207",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-656e2eee3e7b43d5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-7e7e7f2ec3085fdf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-94f74f476e7e236a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.9.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a4cc3fe7b9c9e740",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.9.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a61fb64c9ad4d3cf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.9.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-b1a91591d9ea5a6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d071adbf0e99d8fb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-e7daecd1c38e558d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-f91d87c8904ce840",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/reader/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-fe247c7e1ac8771c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-tracelibgo/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-147b75ed04cf7570",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-157a507c1c05ebf4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1c1b74d1f10304ad",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1fa8dc5ded74082a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2221e882cc834d68",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2deddcf8a11a0d8a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3643b5f37be578c0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3f45aba3583ceef3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/reader/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-493d6e3fec5e1628",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5e476ec854d0aed3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6ecc9a7bd929bd30",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: com-golog/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6f27fdef4a28df0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-75f4f77b76a07804",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9366c39c2711f29d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9c8f377096eabe14",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ab30ee571dc67a85",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-tracelibgo/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bc250780302436bb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c074839c54f5e273",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/common/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c44c790dc7e9a3c4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c87cb18774bc6c7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c91be8ef55a645b9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f1dd2fabcdbebd65",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/alarm/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-343f6a8796d03c8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/alertmanager@v0.20.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/alertmanager@0.20.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/alertmanager",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/alertmanager",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.20.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3a29c670988972fb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/alertmanager@v0.25.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/alertmanager@0.25.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/alertmanager",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/alertmanager",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.25.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1b0a3c3e196f5f07",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v0.9.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@0.9.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.3"
        },
        {
            "SPDXID": "SPDXRef-Package-3de97a44aef66d79",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v0.9.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@0.9.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.3"
        },
        {
            "SPDXID": "SPDXRef-Package-64631462d613369b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v1.15.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@1.15.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "1.15.1"
        },
        {
            "SPDXID": "SPDXRef-Package-9040bb046f9dd5ae",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v0.9.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@0.9.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.3"
        },
        {
            "SPDXID": "SPDXRef-Package-9781ce54a557a1e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v1.15.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@1.15.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "1.15.1"
        },
        {
            "SPDXID": "SPDXRef-Package-ae8fd60d4bb36060",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v0.9.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@0.9.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.3"
        },
        {
            "SPDXID": "SPDXRef-Package-af1b90b666a98f39",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v0.9.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@0.9.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.3"
        },
        {
            "SPDXID": "SPDXRef-Package-bc89ff2361f6df",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v1.15.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@1.15.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "1.15.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c917854003062bc0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v1.12.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@1.12.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "1.12.1"
        },
        {
            "SPDXID": "SPDXRef-Package-cd043aebc5014f20",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v1.15.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@1.15.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "1.15.1"
        },
        {
            "SPDXID": "SPDXRef-Package-dcb9d36e55772f63",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v0.9.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@0.9.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.3"
        },
        {
            "SPDXID": "SPDXRef-Package-ddbe6048ae708419",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v0.9.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@0.9.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.3"
        },
        {
            "SPDXID": "SPDXRef-Package-f39d37dbb158665d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-fc0c391227c1ff84",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v1.15.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@1.15.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "1.15.1"
        },
        {
            "SPDXID": "SPDXRef-Package-238066655dea009a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-455cdc9b157120e1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.0.0-20190812154241-14fe0d1b01d4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.0.0-20190812154241-14fe0d1b01d4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190812154241-14fe0d1b01d4"
        },
        {
            "SPDXID": "SPDXRef-Package-4b218f695b4c5da2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5034dae28a00fe43",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.0.0-20190129233127-fd36f4220a90"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.0.0-20190129233127-fd36f4220a90",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190129233127-fd36f4220a90"
        },
        {
            "SPDXID": "SPDXRef-Package-78e686795cc3a72d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.0.0-20190129233127-fd36f4220a90"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.0.0-20190129233127-fd36f4220a90",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190129233127-fd36f4220a90"
        },
        {
            "SPDXID": "SPDXRef-Package-7ead1ad8324ca82f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8082f8aa173cb098",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.0.0-20190129233127-fd36f4220a90"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.0.0-20190129233127-fd36f4220a90",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190129233127-fd36f4220a90"
        },
        {
            "SPDXID": "SPDXRef-Package-82f06832d4baddb9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8389cdbbcf253d46",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.0.0-20190129233127-fd36f4220a90"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.0.0-20190129233127-fd36f4220a90",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190129233127-fd36f4220a90"
        },
        {
            "SPDXID": "SPDXRef-Package-870607a198bf82d2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-902ba6d92e3f6aed",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.0.0-20190129233127-fd36f4220a90"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.0.0-20190129233127-fd36f4220a90",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190129233127-fd36f4220a90"
        },
        {
            "SPDXID": "SPDXRef-Package-9b1e818439c378e2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f372ddea0813003f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.0.0-20190129233127-fd36f4220a90"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.0.0-20190129233127-fd36f4220a90",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190129233127-fd36f4220a90"
        },
        {
            "SPDXID": "SPDXRef-Package-f41c20a971c851f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.0.0-20190129233127-fd36f4220a90"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.0.0-20190129233127-fd36f4220a90",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190129233127-fd36f4220a90"
        },
        {
            "SPDXID": "SPDXRef-Package-17eb13cc4d3a6f0c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1863ed2791a8ff1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.43.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.43.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.43.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1fb2d3f2ae3db64c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-217cab5979f4b527",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.42.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.42.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.42.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4772a85694921b42",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.43.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.43.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.43.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6d26434fa15235da",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.43.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.43.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.43.0"
        },
        {
            "SPDXID": "SPDXRef-Package-78b097b1d3e9d185",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.42.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.42.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.42.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7ae1bca75307b417",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a17648f592bfe456",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.32.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.32.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.32.1"
        },
        {
            "SPDXID": "SPDXRef-Package-aff45ef00bade10b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c1b680c95e2fc15c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c4b2f3dbf13c1b73",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c94a15f09ae22d7f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f1fefff7d85d88a5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-14bac5d1e8b955ae",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-247589ccfb53e59a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2bbe95e9d4cb4a65",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.0.0-20190507164030-5867b95ac084"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.0.0-20190507164030-5867b95ac084",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.0.0-20190507164030-5867b95ac084"
        },
        {
            "SPDXID": "SPDXRef-Package-38281f5f4a5c3e42",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.0.0-20190507164030-5867b95ac084"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.0.0-20190507164030-5867b95ac084",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.0.0-20190507164030-5867b95ac084"
        },
        {
            "SPDXID": "SPDXRef-Package-714f61ac5ff488e9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.0.0-20190507164030-5867b95ac084"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.0.0-20190507164030-5867b95ac084",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.0.0-20190507164030-5867b95ac084"
        },
        {
            "SPDXID": "SPDXRef-Package-7a79439ee942c090",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.0.0-20190507164030-5867b95ac084"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.0.0-20190507164030-5867b95ac084",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.0.0-20190507164030-5867b95ac084"
        },
        {
            "SPDXID": "SPDXRef-Package-b241a060dc4e5933",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.0.0-20190507164030-5867b95ac084"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.0.0-20190507164030-5867b95ac084",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.0.0-20190507164030-5867b95ac084"
        },
        {
            "SPDXID": "SPDXRef-Package-c4e14388e6e6f781",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c8e1d5a2ac7427ac",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.0.0-20190507164030-5867b95ac084"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.0.0-20190507164030-5867b95ac084",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.0.0-20190507164030-5867b95ac084"
        },
        {
            "SPDXID": "SPDXRef-Package-cd3511a54f7f1a2e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.7.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.7.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.7.3"
        },
        {
            "SPDXID": "SPDXRef-Package-d7ff7b8b86907369",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.0.0-20190507164030-5867b95ac084"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.0.0-20190507164030-5867b95ac084",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.0.0-20190507164030-5867b95ac084"
        },
        {
            "SPDXID": "SPDXRef-Package-db2031691606cd94",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f5c11f30eee33a22",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.0.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-ffdfe872e295ec5f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-16d526465c32a0bf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/tsdb@v0.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package tsdb implements a time series storage for float64 sample data.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/tsdb@0.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/tsdb",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/tsdb",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: prometheus-junkyard",
            "versionInfo": "0.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4546a5d611aa3dc7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/tsdb@v0.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package tsdb implements a time series storage for float64 sample data.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/tsdb@0.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/tsdb",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/tsdb",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: prometheus-junkyard",
            "versionInfo": "0.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-67646b5486c1cbd3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/tsdb@v0.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package tsdb implements a time series storage for float64 sample data.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/tsdb@0.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/tsdb",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/tsdb",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: prometheus-junkyard",
            "versionInfo": "0.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a1654b33cdb2089a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/tsdb@v0.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package tsdb implements a time series storage for float64 sample data.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/tsdb@0.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/tsdb",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/tsdb",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: prometheus-junkyard",
            "versionInfo": "0.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a5a75496e3b07191",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/tsdb@v0.7.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package tsdb implements a time series storage for float64 sample data.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/tsdb@0.7.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/tsdb",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/tsdb",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: prometheus-junkyard",
            "versionInfo": "0.7.1"
        },
        {
            "SPDXID": "SPDXRef-Package-555ae7ea0745d378",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rivo/uniseg@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package uniseg implements Unicode Text Segmentation, Unicode Line Breaking, and\nstring width calculation for monospace fonts. Unicode Text Segmentation conforms\nto Unicode Standard Annex #29 (https://unicode.org/reports/tr29/) and Unicode\nLine Breaking conforms to Unicode Standard Annex #14\n(https://unicode.org/reports/tr14/).\n\nIn short, using this package, you can split a string into grapheme clusters\n(what people would usually refer to as a \"character\"), into words, and into\nsentences. Or, in its simplest case, this package allows you to count the number\nof characters in a string, especially when it contains complex characters such\nas emojis, combining characters, or characters from Asian, Arabic, Hebrew, or\nother languages. Additionally, you can use it to implement line breaking (or\n\"word wrapping\"), that is, to determine where text can be broken over to the\nnext line when the width of the line is not big enough to fit the entire text.\nFinally, you can use it to calculate the display width of a string for monospace\nfonts.\n\nIf you just want to count the number of characters in a string, you can use\nGraphemeClusterCount. If you want to determine the display width of a string,\nyou can use StringWidth. If you want to iterate over a string, you can use\nStep, StepString, or the Graphemes class (more convenient but less\nperformant). This will provide you with all information: grapheme clusters,\nword boundaries, sentence boundaries, line breaks, and monospace character\nwidths. The specialized functions FirstGraphemeCluster,\nFirstGraphemeClusterInString, FirstWord, FirstWordInString,\nFirstSentence, and FirstSentenceInString can be used if only one type of\ninformation is needed.\n\nConsider the rainbow flag emoji: \ud83c\udff3\ufe0f\u200d\ud83c\udf08. On most modern systems, it appears as one\ncharacter. But its string representation actually has 14 bytes, so counting\nbytes (or using len(\"\ud83c\udff3\ufe0f\u200d\ud83c\udf08\")) will not work as expected. Counting runes won't,\neither: The flag has 4 Unicode code points, thus 4 runes. The stdlib function\nutf8.RuneCountInString(\"\ud83c\udff3\ufe0f\u200d\ud83c\udf08\") and len([]rune(\"\ud83c\udff3\ufe0f\u200d\ud83c\udf08\")) will both return 4.\n\nThe GraphemeClusterCount function will return 1 for the rainbow flag emoji.\nThe Graphemes class and a variety of functions in this package will allow you to\nsplit strings into its grapheme clusters.\n\nWord boundaries are used in a number of different contexts. The most familiar\nones are selection (double-click mouse selection), cursor movement (\"move to\nnext word\" control-arrow keys), and the dialog option \"Whole Word Search\" for\nsearch and replace. This package provides methods for determining word\nboundaries.\n\nSentence boundaries are often used for triple-click or some other method of\nselecting or iterating through blocks of text that are larger than single words.\nThey are also used to determine whether words occur within the same sentence in\ndatabase queries. This package provides methods for determining sentence\nboundaries.\n\nLine breaking, also known as word wrapping, is the process of breaking a section\nof text into lines such that it will fit in the available width of a page,\nwindow or other display area. This package provides methods to determine the\npositions in a string where a line must be broken, may be broken, or must not be\nbroken.\n\nMonospace width, as referred to in this package, is the width of a string in a\nmonospace font. This is commonly used in terminal user interfaces or text\ndisplays or editors that don't support proportional fonts. A width of 1\ncorresponds to a single character cell. The C function wcswidth() and its\nimplementation in other programming languages is in widespread use for the same\npurpose. However, there is no standard for the calculation of such widths, and\nthis package differs from wcswidth() in a number of ways, presumably to generate\nmore visually pleasing results.\n\nTo start, we assume that every code point has a width of 1, with the following\nexceptions:\n\nFor Hangul grapheme clusters composed of conjoining Jamo and for Regional\nIndicators (flags), all code points except the first one have a width of 0. For\ngrapheme clusters starting with an Extended Pictographic, any additional code\npoint will force a total width of 2, except if the Variation Selector-15\n(U+FE0E) is included, in which case the total width is always 1. Grapheme\nclusters ending with Variation Selector-16 (U+FE0F) have a width of 2.\n\nNote that whether these widths appear correct depends on your application's\nrender engine, to which extent it conforms to the Unicode Standard, and its\nchoice of font.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rivo/uniseg@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rivo/uniseg",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/rivo/uniseg",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-36a2b00c31597dbe",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rogpeppe/fastuuid@v0.0.0-20150106093220-6724a57986af"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fastuuid provides fast UUID generation of 192 bit\nuniversally unique identifiers.\n\nIt also provides simple support for 128-bit RFC-4122 V4 UUID strings.\n\nNote that the generated UUIDs are not unguessable - each\nUUID generated from a Generator is adjacent to the\npreviously generated UUID.\n\nBy way of comparison with two other popular UUID-generation packages, github.com/satori/go.uuid\nand github.com/google/uuid, here are some benchmarks:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rogpeppe/fastuuid@0.0.0-20150106093220-6724a57986af",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rogpeppe/fastuuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/rogpeppe/fastuuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20150106093220-6724a57986af"
        },
        {
            "SPDXID": "SPDXRef-Package-748c2aeec8a834f9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rogpeppe/fastuuid@v0.0.0-20150106093220-6724a57986af"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fastuuid provides fast UUID generation of 192 bit\nuniversally unique identifiers.\n\nIt also provides simple support for 128-bit RFC-4122 V4 UUID strings.\n\nNote that the generated UUIDs are not unguessable - each\nUUID generated from a Generator is adjacent to the\npreviously generated UUID.\n\nBy way of comparison with two other popular UUID-generation packages, github.com/satori/go.uuid\nand github.com/google/uuid, here are some benchmarks:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rogpeppe/fastuuid@0.0.0-20150106093220-6724a57986af",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rogpeppe/fastuuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/rogpeppe/fastuuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20150106093220-6724a57986af"
        },
        {
            "SPDXID": "SPDXRef-Package-d21f9f2b6b02ea30",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rogpeppe/fastuuid@v0.0.0-20150106093220-6724a57986af"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fastuuid provides fast UUID generation of 192 bit\nuniversally unique identifiers.\n\nIt also provides simple support for 128-bit RFC-4122 V4 UUID strings.\n\nNote that the generated UUIDs are not unguessable - each\nUUID generated from a Generator is adjacent to the\npreviously generated UUID.\n\nBy way of comparison with two other popular UUID-generation packages, github.com/satori/go.uuid\nand github.com/google/uuid, here are some benchmarks:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rogpeppe/fastuuid@0.0.0-20150106093220-6724a57986af",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rogpeppe/fastuuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/rogpeppe/fastuuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20150106093220-6724a57986af"
        },
        {
            "SPDXID": "SPDXRef-Package-e4120a5a99c57ea9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rogpeppe/fastuuid@v0.0.0-20150106093220-6724a57986af"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fastuuid provides fast UUID generation of 192 bit\nuniversally unique identifiers.\n\nIt also provides simple support for 128-bit RFC-4122 V4 UUID strings.\n\nNote that the generated UUIDs are not unguessable - each\nUUID generated from a Generator is adjacent to the\npreviously generated UUID.\n\nBy way of comparison with two other popular UUID-generation packages, github.com/satori/go.uuid\nand github.com/google/uuid, here are some benchmarks:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rogpeppe/fastuuid@0.0.0-20150106093220-6724a57986af",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rogpeppe/fastuuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/rogpeppe/fastuuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20150106093220-6724a57986af"
        },
        {
            "SPDXID": "SPDXRef-Package-e72850ccdbeadb71",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rogpeppe/fastuuid@v0.0.0-20150106093220-6724a57986af"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fastuuid provides fast UUID generation of 192 bit\nuniversally unique identifiers.\n\nIt also provides simple support for 128-bit RFC-4122 V4 UUID strings.\n\nNote that the generated UUIDs are not unguessable - each\nUUID generated from a Generator is adjacent to the\npreviously generated UUID.\n\nBy way of comparison with two other popular UUID-generation packages, github.com/satori/go.uuid\nand github.com/google/uuid, here are some benchmarks:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rogpeppe/fastuuid@0.0.0-20150106093220-6724a57986af",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rogpeppe/fastuuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/rogpeppe/fastuuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20150106093220-6724a57986af"
        },
        {
            "SPDXID": "SPDXRef-Package-1c71d031d5670707",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rogpeppe/go-internal@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rogpeppe/go-internal@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rogpeppe/go-internal",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/rogpeppe/go-internal",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Roger Peppe",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9c0f60495ef53023",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rogpeppe/go-internal@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rogpeppe/go-internal@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rogpeppe/go-internal",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/rogpeppe/go-internal",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Roger Peppe",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c1d3af003b89ec66",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rogpeppe/go-internal@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rogpeppe/go-internal@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rogpeppe/go-internal",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/rogpeppe/go-internal",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Roger Peppe",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-336808ba6ff418d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rs/xid@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xid is a globally unique id generator suited for web scale\n\nXid is using Mongo Object ID algorithm to generate globally unique ids:\nhttps://docs.mongodb.org/manual/reference/object-id/\n\nThe binary representation of the id is compatible with Mongo 12 bytes Object IDs.\nThe string representation is using base32 hex (w/o padding) for better space efficiency\nwhen stored in that form (20 bytes). The hex variant of base32 is used to retain the\nsortable property of the id.\n\nXid doesn't use base64 because case sensitivity and the 2 non alphanum chars may be an\nissue when transported as a string between various systems. Base36 wasn't retained either\nbecause 1/ it's not standard 2/ the resulting size is not predictable (not bit aligned)\nand 3/ it would not remain sortable. To validate a base32 `xid`, expect a 20 chars long,\nall lowercase sequence of `a` to `v` letters and `0` to `9` numbers (`[0-9a-v]{20}`).\n\nUUID is 16 bytes (128 bits), snowflake is 8 bytes (64 bits), xid stands in between\nwith 12 bytes with a more compact string representation ready for the web and no\nrequired configuration or central generation server.\n\nFeatures:\n\nBest used with xlog's RequestIDHandler (https://godoc.org/github.com/rs/xlog#RequestIDHandler).\n\nReferences:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rs/xid@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rs/xid",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/rs/xid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Olivier Poitrey",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-88e9824aa8dee492",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rs/zerolog@v1.27.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zerolog provides a lightweight logging library dedicated to JSON logging.\n\nA global Logger can be use for simple logging:\n\nNOTE: To import the global logger, import the \"log\" subpackage \"github.com/rs/zerolog/log\".\n\nFields can be added to log messages:\n\nCreate logger instance to manage different outputs:\n\nSub-loggers let you chain loggers with additional context:\n\nLevel logging\n\nCustomize automatic field names:\n\nLog with no level and message:\n\nAdd contextual fields to global Logger:\n\nSample logs:\n\nLog with contextual hooks:\n\nField duplication:\n\nThere is no fields deduplication out-of-the-box.\nUsing the same key multiple times creates new key in final JSON each time.\n\nIn this case, many consumers will take the last value,\nbut this is not guaranteed; check yours if in doubt.\n\nConcurrency safety:\n\nBe careful when calling UpdateContext. It is not concurrency safe. Use the With method to create a child logger:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rs/zerolog@1.27.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rs/zerolog",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/rs/zerolog",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Olivier Poitrey",
            "versionInfo": "1.27.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d80f36ed0e88f56f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/rubenv/sql-migrate@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "SQL Schema migration tool for Go.\n\nKey features:\n\nTo install the library and command line program, use the following:\n\nThe main command is called sql-migrate.\n\nEach command requires a configuration file (which defaults to dbconfig.yml, but can be specified with the -config flag). This config file should specify one or more environments:\n\nThe `table` setting is optional and will default to `gorp_migrations`.\n\nThe environment that will be used can be specified with the -env flag (defaults to development).\n\nUse the --help flag in combination with any of the commands to get an overview of its usage:\n\nThe up command applies all available migrations. By contrast, down will only apply one migration by default. This behavior can be changed for both by using the -limit parameter.\n\nThe redo command will unapply the last migration and reapply it. This is useful during development, when you're writing migrations.\n\nUse the status command to see the state of the applied migrations:\n\nIf you are using MySQL, you must append ?parseTime=true to the datasource configuration. For example:\n\nSee https://github.com/go-sql-driver/mysql#parsetime for more information.\n\nImport sql-migrate into your application:\n\nSet up a source of migrations, this can be from memory, from a set of files or from bindata (more on that later):\n\nThen use the Exec function to upgrade your database:\n\nNote that n can be greater than 0 even if there is an error: any migration that succeeded will remain applied even if a later one fails.\n\nThe full set of capabilities can be found in the API docs below.\n\nMigrations are defined in SQL files, which contain a set of SQL statements. Special comments are used to distinguish up and down migrations.\n\nYou can put multiple statements in each block, as long as you end them with a semicolon (;).\n\nIf you have complex statements which contain semicolons, use StatementBegin and StatementEnd to indicate boundaries:\n\nThe order in which migrations are applied is defined through the filename: sql-migrate will sort migrations based on their name. It's recommended to use an increasing version number or a timestamp as the first part of the filename.\n\nNormally each migration is run within a transaction in order to guarantee that it is fully atomic. However some SQL commands (for example creating an index concurrently in PostgreSQL) cannot be executed inside a transaction. In order to execute such a command in a migration, the migration can be run using the notransaction option:\n\nIf you like your Go applications self-contained (that is: a single binary): use packr (https://github.com/gobuffalo/packr) to embed the migration files.\n\nJust write your migration files as usual, as a set of SQL files in a folder.\n\nUse the PackrMigrationSource in your application to find the migrations:\n\nIf you already have a box and would like to use a subdirectory:\n\nAs an alternative, but slightly less maintained, you can use bindata (https://github.com/shuLhan/go-bindata) to embed the migration files.\n\nJust write your migration files as usual, as a set of SQL files in a folder.\n\nThen use bindata to generate a .go file with the migrations embedded:\n\nThe resulting bindata.go file will contain your migrations. Remember to regenerate your bindata.go file whenever you add/modify a migration (go generate will help here, once it arrives).\n\nUse the AssetMigrationSource in your application to find the migrations:\n\nBoth Asset and AssetDir are functions provided by bindata.\n\nThen proceed as usual.\n\nAdding a new migration source means implementing MigrationSource.\n\nThe resulting slice of migrations will be executed in the given order, so it should usually be sorted by the Id field.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/rubenv/sql-migrate@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/rubenv/sql-migrate",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/rubenv/sql-migrate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Ruben Vermeersch",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-740574c73fbe6a66",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/russross/blackfriday@v1.5.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package blackfriday is a Markdown processor.\n\nIt translates plain text with simple formatting rules into HTML or LaTeX.\n\nBlackfriday includes an algorithm for creating sanitized anchor names\ncorresponding to a given input text. This algorithm is used to create\nanchors for headings when EXTENSION_AUTO_HEADER_IDS is enabled. The\nalgorithm is specified below, so that other packages can create\ncompatible anchor names and links to those anchors.\n\nThe algorithm iterates over the input text, interpreted as UTF-8,\none Unicode code point (rune) at a time. All runes that are letters (category L)\nor numbers (category N) are considered valid characters. They are mapped to\nlower case, and included in the output. All other runes are considered\ninvalid characters. Invalid characters that preceed the first valid character,\nas well as invalid character that follow the last valid character\nare dropped completely. All other sequences of invalid characters\nbetween two valid characters are replaced with a single dash character '-'.\n\nSanitizedAnchorName exposes this functionality, and can be used to\ncreate compatible links to the anchor names generated by blackfriday.\nThis algorithm is also implemented in a small standalone package at\ngithub.com/shurcooL/sanitized_anchor_name. It can be useful for clients\nthat want a small package and don't need full functionality of blackfriday.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/russross/blackfriday@1.5.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/russross/blackfriday",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/russross/blackfriday",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Russ Ross",
            "versionInfo": "1.5.2"
        },
        {
            "SPDXID": "SPDXRef-Package-7ef20b77d9a1134c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/santhosh-tekuri/jsonschema/v5@v5.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jsonschema provides json-schema compilation and validation.\n\nFeatures:\n\nThe schema is compiled against the version specified in \"$schema\" property.\nIf \"$schema\" property is missing, it uses latest draft which currently implemented\nby this library.\n\nYou can force to use specific draft,  when \"$schema\" is missing, as follows:\n\nThis package supports loading json-schema from filePath and fileURL.\n\nTo load json-schema from HTTPURL, add following import:\n\nyou can validate yaml documents. see https://play.golang.org/p/sJy1qY7dXgA\n\n\nExample_fromString shows how to load schema from string.\n\nExample_fromStrings shows how to load schema from more than one string.\n\nExample_userDefinedContent shows how to define\n\"hex\" contentEncoding and \"application/xml\" contentMediaType\n\nExample_userDefinedFormat shows how to define 'odd-number' format.\n\nExample_userDefinedLoader shows how to define custom schema loader.\n\nwe are implementing a \"map\" protocol which servers schemas from\ngo map variable.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/santhosh-tekuri/jsonschema/v5@5.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/santhosh-tekuri/jsonschema",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/santhosh-tekuri/jsonschema/v5",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "5.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3c9b355045e22773",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/segmentio/ksuid@v1.0.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/segmentio/ksuid@1.0.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/segmentio/ksuid",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/segmentio/ksuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Segment",
            "versionInfo": "1.0.3"
        },
        {
            "SPDXID": "SPDXRef-Package-f1bae56a258d2f96",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/segmentio/ksuid@v1.0.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/segmentio/ksuid@1.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/segmentio/ksuid",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/segmentio/ksuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Segment",
            "versionInfo": "1.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-407bc0d21ebe8ca3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/sergi/go-diff@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/sergi/go-diff@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/sergi/go-diff",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/sergi/go-diff",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Sergi Mansilla",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e11c20686d0c5714",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/sergi/go-diff@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/sergi/go-diff@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/sergi/go-diff",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/sergi/go-diff",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Sergi Mansilla",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f913c85b7cd23b45",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/sergi/go-diff@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/sergi/go-diff@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/sergi/go-diff",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/sergi/go-diff",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Sergi Mansilla",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-86286354a3b520ff",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/shopspring/decimal@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package decimal implements an arbitrary precision fixed-point decimal.\n\nThe zero-value of a Decimal is 0, as you would expect.\n\nThe best way to create a new Decimal is to use decimal.NewFromString, ex:\n\nTo use Decimal as part of a struct:\n\nNote: This can \"only\" represent numbers with a maximum of 2^31 digits after the decimal point.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/shopspring/decimal@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/shopspring/decimal",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/shopspring/decimal",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Spring Engineering",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-609f94ea5aff173c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/sirupsen/logrus@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logrus is a structured logger for Go, completely API compatible with the standard library logger.\n\nThe simplest way to use Logrus is simply the package-level exported logger:\n\nOutput:\n\nFor a full guide visit https://github.com/sirupsen/logrus\n\n\nAn example on how to use a hook",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/sirupsen/logrus@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/sirupsen/logrus",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/sirupsen/logrus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Simon Eskildsen",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6b9ce27972c27291",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/sirupsen/logrus@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logrus is a structured logger for Go, completely API compatible with the standard library logger.\n\nThe simplest way to use Logrus is simply the package-level exported logger:\n\nOutput:\n\nFor a full guide visit https://github.com/sirupsen/logrus\n\n\nAn example on how to use a hook",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/sirupsen/logrus@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/sirupsen/logrus",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/sirupsen/logrus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Simon Eskildsen",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b19bc63812f3699a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/sirupsen/logrus@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logrus is a structured logger for Go, completely API compatible with the standard library logger.\n\nThe simplest way to use Logrus is simply the package-level exported logger:\n\nOutput:\n\nFor a full guide visit https://github.com/sirupsen/logrus\n\n\nAn example on how to use a hook",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/sirupsen/logrus@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/sirupsen/logrus",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/sirupsen/logrus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Simon Eskildsen",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c11855098d73bd27",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/sirupsen/logrus@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logrus is a structured logger for Go, completely API compatible with the standard library logger.\n\nThe simplest way to use Logrus is simply the package-level exported logger:\n\nOutput:\n\nFor a full guide visit https://github.com/sirupsen/logrus\n\n\nAn example on how to use a hook",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/sirupsen/logrus@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/sirupsen/logrus",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/sirupsen/logrus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Simon Eskildsen",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e5990b84c794c5a4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/sirupsen/logrus@v1.8.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logrus is a structured logger for Go, completely API compatible with the standard library logger.\n\nThe simplest way to use Logrus is simply the package-level exported logger:\n\nOutput:\n\nFor a full guide visit https://github.com/sirupsen/logrus\n\n\nAn example on how to use a hook",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/sirupsen/logrus@1.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/sirupsen/logrus",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/sirupsen/logrus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Simon Eskildsen",
            "versionInfo": "1.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-f08d574b4dba2bd1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/sirupsen/logrus@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logrus is a structured logger for Go, completely API compatible with the standard library logger.\n\nThe simplest way to use Logrus is simply the package-level exported logger:\n\nOutput:\n\nFor a full guide visit https://github.com/sirupsen/logrus\n\n\nAn example on how to use a hook",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/sirupsen/logrus@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/sirupsen/logrus",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/sirupsen/logrus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Simon Eskildsen",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-27caac7f456adbd9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/smartystreets/assertions@v0.0.0-20180927180507-b2de0cb4f26d"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package assertions contains the implementations for all assertions which\nare referenced in goconvey's `convey` package\n(github.com/smartystreets/goconvey/convey) and gunit (github.com/smartystreets/gunit)\nfor use with the So(...) method.\nThey can also be used in traditional Go test functions and even in\napplications.\n\nhttps://smartystreets.com\n\nMany of the assertions lean heavily on work done by Aaron Jacobs in his excellent oglematchers library.\n(https://github.com/jacobsa/oglematchers)\nThe ShouldResemble assertion leans heavily on work done by Daniel Jacques in his very helpful go-render library.\n(https://github.com/luci/go-render)",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/smartystreets/assertions@0.0.0-20180927180507-b2de0cb4f26d",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/smartystreets/assertions",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/smartystreets/assertions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180927180507-b2de0cb4f26d"
        },
        {
            "SPDXID": "SPDXRef-Package-89c3340d50c8c4d0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/smartystreets/assertions@v0.0.0-20180927180507-b2de0cb4f26d"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package assertions contains the implementations for all assertions which\nare referenced in goconvey's `convey` package\n(github.com/smartystreets/goconvey/convey) and gunit (github.com/smartystreets/gunit)\nfor use with the So(...) method.\nThey can also be used in traditional Go test functions and even in\napplications.\n\nhttps://smartystreets.com\n\nMany of the assertions lean heavily on work done by Aaron Jacobs in his excellent oglematchers library.\n(https://github.com/jacobsa/oglematchers)\nThe ShouldResemble assertion leans heavily on work done by Daniel Jacques in his very helpful go-render library.\n(https://github.com/luci/go-render)",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/smartystreets/assertions@0.0.0-20180927180507-b2de0cb4f26d",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/smartystreets/assertions",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/smartystreets/assertions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180927180507-b2de0cb4f26d"
        },
        {
            "SPDXID": "SPDXRef-Package-1b68b153662d76f5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/smartystreets/goconvey@v1.6.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "This executable provides an HTTP server that watches for file system changes\nto .go files within the working directory (and all nested go packages).\nNavigating to the configured host and port in a web browser will display the\nlatest results of running `go test` in each go package.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/smartystreets/goconvey@1.6.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/smartystreets/goconvey",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/smartystreets/goconvey",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Smarty",
            "versionInfo": "1.6.4"
        },
        {
            "SPDXID": "SPDXRef-Package-c8fb32fcb412823f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/smartystreets/goconvey@v1.6.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "This executable provides an HTTP server that watches for file system changes\nto .go files within the working directory (and all nested go packages).\nNavigating to the configured host and port in a web browser will display the\nlatest results of running `go test` in each go package.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/smartystreets/goconvey@1.6.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/smartystreets/goconvey",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/smartystreets/goconvey",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Smarty",
            "versionInfo": "1.6.4"
        },
        {
            "SPDXID": "SPDXRef-Package-3cf6e4dee70f5cb2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/soheilhy/cmux@v0.1.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cmux is a library to multiplex network connections based on\ntheir payload. Using cmux, you can serve different protocols from the\nsame listener.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/soheilhy/cmux@0.1.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/soheilhy/cmux",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/soheilhy/cmux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Soheil Hassas Yeganeh",
            "versionInfo": "0.1.4"
        },
        {
            "SPDXID": "SPDXRef-Package-57cda4317f83bf57",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/soheilhy/cmux@v0.1.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cmux is a library to multiplex network connections based on\ntheir payload. Using cmux, you can serve different protocols from the\nsame listener.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/soheilhy/cmux@0.1.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/soheilhy/cmux",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/soheilhy/cmux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Soheil Hassas Yeganeh",
            "versionInfo": "0.1.4"
        },
        {
            "SPDXID": "SPDXRef-Package-83b38348fed7141a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/soheilhy/cmux@v0.1.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cmux is a library to multiplex network connections based on\ntheir payload. Using cmux, you can serve different protocols from the\nsame listener.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/soheilhy/cmux@0.1.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/soheilhy/cmux",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/soheilhy/cmux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Soheil Hassas Yeganeh",
            "versionInfo": "0.1.4"
        },
        {
            "SPDXID": "SPDXRef-Package-9b5bac0bfcd64ac0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/soheilhy/cmux@v0.1.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cmux is a library to multiplex network connections based on\ntheir payload. Using cmux, you can serve different protocols from the\nsame listener.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/soheilhy/cmux@0.1.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/soheilhy/cmux",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/soheilhy/cmux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Soheil Hassas Yeganeh",
            "versionInfo": "0.1.4"
        },
        {
            "SPDXID": "SPDXRef-Package-ca2ceb3d10cd0931",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/soheilhy/cmux@v0.1.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cmux is a library to multiplex network connections based on\ntheir payload. Using cmux, you can serve different protocols from the\nsame listener.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/soheilhy/cmux@0.1.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/soheilhy/cmux",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/soheilhy/cmux",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Soheil Hassas Yeganeh",
            "versionInfo": "0.1.4"
        },
        {
            "SPDXID": "SPDXRef-Package-111e6fe8d35f969a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spaolacci/murmur3@v0.0.0-20180118202830-f09979ecbc72"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package murmur3 implements Austin Appleby's non-cryptographic MurmurHash3.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spaolacci/murmur3@0.0.0-20180118202830-f09979ecbc72",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spaolacci/murmur3",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spaolacci/murmur3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: S\u00e9bastien Paolacci",
            "versionInfo": "0.0.0-20180118202830-f09979ecbc72"
        },
        {
            "SPDXID": "SPDXRef-Package-120a27a65cad987",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spaolacci/murmur3@v0.0.0-20180118202830-f09979ecbc72"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package murmur3 implements Austin Appleby's non-cryptographic MurmurHash3.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spaolacci/murmur3@0.0.0-20180118202830-f09979ecbc72",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spaolacci/murmur3",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spaolacci/murmur3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: S\u00e9bastien Paolacci",
            "versionInfo": "0.0.0-20180118202830-f09979ecbc72"
        },
        {
            "SPDXID": "SPDXRef-Package-202f437d07392d2d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spaolacci/murmur3@v0.0.0-20180118202830-f09979ecbc72"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package murmur3 implements Austin Appleby's non-cryptographic MurmurHash3.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spaolacci/murmur3@0.0.0-20180118202830-f09979ecbc72",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spaolacci/murmur3",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spaolacci/murmur3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: S\u00e9bastien Paolacci",
            "versionInfo": "0.0.0-20180118202830-f09979ecbc72"
        },
        {
            "SPDXID": "SPDXRef-Package-d0689ea29dc48308",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spaolacci/murmur3@v0.0.0-20180118202830-f09979ecbc72"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package murmur3 implements Austin Appleby's non-cryptographic MurmurHash3.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spaolacci/murmur3@0.0.0-20180118202830-f09979ecbc72",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spaolacci/murmur3",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spaolacci/murmur3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: S\u00e9bastien Paolacci",
            "versionInfo": "0.0.0-20180118202830-f09979ecbc72"
        },
        {
            "SPDXID": "SPDXRef-Package-f231600bb21edeba",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spaolacci/murmur3@v0.0.0-20180118202830-f09979ecbc72"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package murmur3 implements Austin Appleby's non-cryptographic MurmurHash3.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spaolacci/murmur3@0.0.0-20180118202830-f09979ecbc72",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spaolacci/murmur3",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spaolacci/murmur3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: S\u00e9bastien Paolacci",
            "versionInfo": "0.0.0-20180118202830-f09979ecbc72"
        },
        {
            "SPDXID": "SPDXRef-Package-1fe16f940a835d07",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-1feead82d13a911c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.9.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.9.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.9.5"
        },
        {
            "SPDXID": "SPDXRef-Package-20bf0443c26f05ae",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-540a45decd0f4955",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.9.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.9.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.9.3"
        },
        {
            "SPDXID": "SPDXRef-Package-5f93a343e01a0f6f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-6e7f455ccd949371",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.9.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.9.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.9.3"
        },
        {
            "SPDXID": "SPDXRef-Package-80e16587adb68e99",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-93916092b77a90ce",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-9e89f94d35908886",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-aa710909a193a1cc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-b69dd72e5513938f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-bda649adad3d1843",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-f404a9d9685b87a7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/afero@v1.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/afero@1.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/afero",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/afero",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-1e1a62feb0120a80",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.4.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.4.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.4.1"
        },
        {
            "SPDXID": "SPDXRef-Package-2094f9ae07aaab74",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-257dcf2b98ce2752",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-583404336572bf5c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.5.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-58df0ef40590f090",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-59d8f73a8673d77f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.3.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.3.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.3.1"
        },
        {
            "SPDXID": "SPDXRef-Package-5b5f1021b6857390",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5b61f8e77198f25c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5b7751028e071ccd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7fc5e755a0947668",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a14781ea759abeb0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c1664afd7bf7c376",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d629be0cbe3a12c8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ffe86cfda6c1b202",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cast@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cast provides easy and safe casting in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cast@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cast",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/cast",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-65006c4b01b63760",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cobra@v1.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cobra is a commander providing a simple interface to create powerful modern CLI interfaces.\nIn addition to providing an interface, Cobra simultaneously provides a controller to organize your application code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cobra@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cobra",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/cobra",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a38120abc94dac2f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/cobra@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cobra is a commander providing a simple interface to create powerful modern CLI interfaces.\nIn addition to providing an interface, Cobra simultaneously provides a controller to organize your application code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/cobra@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/cobra",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/spf13/cobra",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1d2ca5021e162e6a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-36d187bdbc2f048d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3775e7280039dca0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-49b76d4262c3cf5f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4a1cec44c2cbaba9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4d6a59f2706448f2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4fa0a584042ffc28",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5d5f7ebd33da1f89",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-79a1aae6f2d6d051",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c0f8d2a80f1579f0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d43e7120f01e66d0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f490e0c37075fbc4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fb5ae108920567e5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/jwalterweatherman@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/jwalterweatherman@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/jwalterweatherman",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/jwalterweatherman",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1c4a785e73640439",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.3"
        },
        {
            "SPDXID": "SPDXRef-Package-1fdd69f50d4261e8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.3"
        },
        {
            "SPDXID": "SPDXRef-Package-280dc3eaf7e014f6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.3"
        },
        {
            "SPDXID": "SPDXRef-Package-2ffde1b1a176b7f7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-45525d7b197c88bb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-49627d34b8fc7aaf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.3"
        },
        {
            "SPDXID": "SPDXRef-Package-66ffc3c67c30f0f1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.3"
        },
        {
            "SPDXID": "SPDXRef-Package-695710b516a80889",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-8009498a67c4c1b6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-86013caf1875083f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-94f6ec9a9859fe24",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-95559ac27e4b864b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.3"
        },
        {
            "SPDXID": "SPDXRef-Package-b912196e3b538c1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-c5792e559a478b72",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.3"
        },
        {
            "SPDXID": "SPDXRef-Package-d49cd39afe8fb4db",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-e52dbe77067df9b7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-f3b7f3ba029de891",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-255660b4e9d8b64b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.15.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.15.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.15.0"
        },
        {
            "SPDXID": "SPDXRef-Package-28b4e0fa9c5afad3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-584fa89ea4e2f81f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-6b4b9c4a8a0a5ac2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.15.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.15.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.15.0"
        },
        {
            "SPDXID": "SPDXRef-Package-753ce0a1387c1007",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8d932ea9b8208444",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-98c6b6ea6249b007",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.6.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.6.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.6.1"
        },
        {
            "SPDXID": "SPDXRef-Package-bbf75445c90c3cfe",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.6.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.6.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.6.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c7694d1d5a4d8589",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.16.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.16.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.16.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d15091dbf7b21268",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d332c647cd3344a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e11a6d9178ca6522",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e7ca3cf0b65e3fa4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/viper@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/viper@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/viper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/spf13/viper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1ff6643d407e9a7d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-28935da1713aff0d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3b6bcee61ba4f79a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-54f9832a56d89e93",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-56c1df0a0b38149",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-6330a8d481b03e7f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7aadc4613092d6ad",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-80fe4881a43565ab",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8608c632d0be9ec",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a238251b4736fd82",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a31f9c37c71194f2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a3f7069b181c5576",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-tracelibgo/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a877ba38b7706307",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ae643f30526c59e8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bfd9b68b71feb49b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-cf22ec11ffbdaf5c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-de260ec9b4dc79bb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-de8212e39e4ce2d1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/reader/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e0fe1fed0dc79ac7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f28c5c3ad7fbb3d2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/objx@v0.1.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package objx provides utilities for dealing with maps, slices, JSON and other data.\n\nObjx provides the `objx.Map` type, which is a `map[string]interface{}` that exposes\na powerful `Get` method (among others) that allows you to easily and quickly get\naccess to data within the map, without having to worry too much about type assertions,\nmissing data, default values etc.\n\nObjx uses a predictable pattern to make access data from within `map[string]interface{}` easy.\nCall one of the `objx.` functions to create your `objx.Map` to get going:\n\nNOTE: Any methods or functions with the `Must` prefix will panic if something goes wrong,\nthe rest will be optimistic and try to figure things out without panicking.\n\nUse `Get` to access the value you're interested in.  You can use dot and array\nnotation too:\n\nOnce you have sought the `Value` you're interested in, you can use the `Is*` methods to determine its type.\n\nOr you can just assume the type, and use one of the strong type methods to extract the real value:\n\nIf there's no value there (or if it's the wrong type) then a default value will be returned,\nor you can be explicit about the default value.\n\nIf you're dealing with a slice of data as a value, Objx provides many useful methods for iterating,\nmanipulating and selecting that data.  You can find out more by exploring the index below.\n\nA simple example of how to use Objx:\n\nSince `objx.Map` is a `map[string]interface{}` you can treat it as such.\nFor example, to `range` the data, do what you would expect:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/objx@0.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/objx",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/objx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "0.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-18253501c666e3da",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5035d124134cd9ea",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.5.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-56cfe3306e485fbb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6340b39b454f2033",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-73f9a0ff9ce54538",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.5.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-76145a4180d15301",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.8.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.8.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.8.4"
        },
        {
            "SPDXID": "SPDXRef-Package-7710e4e60d30bbaa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.5.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-771140a099e8f868",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/reader/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7ae5c6c40b74dfee",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7b66de0b69281962",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: com-golog/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8195499da1b949b7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.6.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.6.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.6.1"
        },
        {
            "SPDXID": "SPDXRef-Package-8a44efa2b3e9f2eb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-902a0b9e8ebaba64",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.8.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.8.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.8.2"
        },
        {
            "SPDXID": "SPDXRef-Package-a31fd47bb1611649",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.5.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-acff888c733e87f2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.8.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.8.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.8.3"
        },
        {
            "SPDXID": "SPDXRef-Package-bb50b75feefdde35",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.5.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-bda5188724a894d8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.6.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.6.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.6.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c5fb63f0ace830c1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-tracelibgo/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d65259e6df4eabfb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/common/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d6a0e7f66da11a02",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.5.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d9887494873cbc09",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.5.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-fd5664646ab80c35",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.5.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/alarm/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-fe10ab8c1f4ccc79",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.6.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.6.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.6.1"
        },
        {
            "SPDXID": "SPDXRef-Package-39d98a1b87f4bd44",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/subosito/gotenv@v1.4.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotenv provides functionality to dynamically load the environment variables",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/subosito/gotenv@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/subosito/gotenv",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/subosito/gotenv",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Alif Rachmawadi",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-438347e89351fd5f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/subosito/gotenv@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotenv provides functionality to dynamically load the environment variables",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/subosito/gotenv@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/subosito/gotenv",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/subosito/gotenv",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Alif Rachmawadi",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5030e929bad8c452",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/subosito/gotenv@v1.4.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotenv provides functionality to dynamically load the environment variables",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/subosito/gotenv@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/subosito/gotenv",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/subosito/gotenv",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Alif Rachmawadi",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-c93956088adf7a7e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/subosito/gotenv@v1.4.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotenv provides functionality to dynamically load the environment variables",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/subosito/gotenv@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/subosito/gotenv",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/subosito/gotenv",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Alif Rachmawadi",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-dccfdcba0a60c3e3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/subosito/gotenv@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotenv provides functionality to dynamically load the environment variables",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/subosito/gotenv@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/subosito/gotenv",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/subosito/gotenv",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Alif Rachmawadi",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fe349c390f5cd0ad",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/subosito/gotenv@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gotenv provides functionality to dynamically load the environment variables",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/subosito/gotenv@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/subosito/gotenv",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/subosito/gotenv",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Alif Rachmawadi",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-66bfdaacb58e4254",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/thatisuday/clapper@v1.0.10"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package clapper processes the command-line arguments of getopt(3) syntax.\nThis package provides the ability to process the root command, sub commands,\ncommand-line arguments and command-line flags.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/thatisuday/clapper@1.0.10",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/thatisuday/clapper",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/thatisuday/clapper",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Uday Hiwarale",
            "versionInfo": "1.0.10"
        },
        {
            "SPDXID": "SPDXRef-Package-2476fe91d3dd9337",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/thatisuday/commando@v1.0.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package commando helps you create CLI applications with ease.\nIt parses \"getopt(3)\" style command-line arguments, supports sub-command architecture,\nallows a short-name alias for flags and captures required and optional arguments.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/thatisuday/commando@1.0.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/thatisuday/commando",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/thatisuday/commando",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.4"
        },
        {
            "SPDXID": "SPDXRef-Package-8aaa8c347b5922f7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/tidwall/pretty@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/tidwall/pretty@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/tidwall/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/tidwall/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c27afa6f6334070",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/tidwall/pretty@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/tidwall/pretty@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/tidwall/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/tidwall/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c78ba68454401106",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/tidwall/pretty@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/tidwall/pretty@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/tidwall/pretty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/tidwall/pretty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-252c52cb125de224",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/tmc/grpc-websocket-proxy@v0.0.0-20190109142713-0ad062ec5ee5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/tmc/grpc-websocket-proxy@0.0.0-20190109142713-0ad062ec5ee5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/tmc/grpc-websocket-proxy",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/tmc/grpc-websocket-proxy",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Travis Cline",
            "versionInfo": "0.0.0-20190109142713-0ad062ec5ee5"
        },
        {
            "SPDXID": "SPDXRef-Package-973e019dccbd2a2d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/tmc/grpc-websocket-proxy@v0.0.0-20190109142713-0ad062ec5ee5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/tmc/grpc-websocket-proxy@0.0.0-20190109142713-0ad062ec5ee5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/tmc/grpc-websocket-proxy",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/tmc/grpc-websocket-proxy",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Travis Cline",
            "versionInfo": "0.0.0-20190109142713-0ad062ec5ee5"
        },
        {
            "SPDXID": "SPDXRef-Package-bef2f1a3857702e9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/tmc/grpc-websocket-proxy@v0.0.0-20190109142713-0ad062ec5ee5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/tmc/grpc-websocket-proxy@0.0.0-20190109142713-0ad062ec5ee5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/tmc/grpc-websocket-proxy",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/tmc/grpc-websocket-proxy",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Travis Cline",
            "versionInfo": "0.0.0-20190109142713-0ad062ec5ee5"
        },
        {
            "SPDXID": "SPDXRef-Package-cb5eefa6c2adcd4d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/tmc/grpc-websocket-proxy@v0.0.0-20190109142713-0ad062ec5ee5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/tmc/grpc-websocket-proxy@0.0.0-20190109142713-0ad062ec5ee5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/tmc/grpc-websocket-proxy",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/tmc/grpc-websocket-proxy",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Travis Cline",
            "versionInfo": "0.0.0-20190109142713-0ad062ec5ee5"
        },
        {
            "SPDXID": "SPDXRef-Package-ea5184d39150e55d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/tmc/grpc-websocket-proxy@v0.0.0-20190109142713-0ad062ec5ee5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/tmc/grpc-websocket-proxy@0.0.0-20190109142713-0ad062ec5ee5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/tmc/grpc-websocket-proxy",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/tmc/grpc-websocket-proxy",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Travis Cline",
            "versionInfo": "0.0.0-20190109142713-0ad062ec5ee5"
        },
        {
            "SPDXID": "SPDXRef-Package-92e87f21369c5d0d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/uber/jaeger-client-go@v2.16.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jaeger implements an OpenTracing (http://opentracing.io) Tracer.\n\nFor integration instructions please refer to the README:\n\nhttps://github.com/uber/jaeger-client-go/blob/master/README.md",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/uber/jaeger-client-go@2.16.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber/jaeger-client-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/uber/jaeger-client-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-tracelibgo/go.mod",
            "supplier": "Organization: Jaeger - Distributed Tracing Platform",
            "versionInfo": "2.16.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-634e5e6f6c3d965c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/uber/jaeger-lib@v2.0.0+incompatible"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jaegerlib is a set of utilities shared by Jaeger backend and Jaeger Go Client.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/uber/jaeger-lib@2.0.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber/jaeger-lib",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/uber/jaeger-lib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-tracelibgo/go.mod",
            "supplier": "Organization: Jaeger - Distributed Tracing Platform",
            "versionInfo": "2.0.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-636fc9e96ad53453",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ugorji/go@v1.1.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ugorji/go@1.1.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ugorji/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/ugorji/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Ugorji Nwoke",
            "versionInfo": "1.1.4"
        },
        {
            "SPDXID": "SPDXRef-Package-8f7d521369ed754e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ugorji/go@v1.1.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ugorji/go@1.1.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ugorji/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/ugorji/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Ugorji Nwoke",
            "versionInfo": "1.1.4"
        },
        {
            "SPDXID": "SPDXRef-Package-8fbf63ac80b19452",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ugorji/go@v1.1.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ugorji/go@1.1.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ugorji/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/ugorji/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Ugorji Nwoke",
            "versionInfo": "1.1.4"
        },
        {
            "SPDXID": "SPDXRef-Package-cdc8ffc34a9b901e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ugorji/go@v1.1.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ugorji/go@1.1.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ugorji/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/ugorji/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Ugorji Nwoke",
            "versionInfo": "1.1.4"
        },
        {
            "SPDXID": "SPDXRef-Package-f10ea18b835249aa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ugorji/go@v1.1.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ugorji/go@1.1.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ugorji/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/ugorji/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Ugorji Nwoke",
            "versionInfo": "1.1.4"
        },
        {
            "SPDXID": "SPDXRef-Package-826af1aadea8a2a2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/valyala/bytebufferpool@v1.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package bytebufferpool implements a pool of byte buffers\nwith anti-fragmentation protection.\n\nThe pool may waste limited amount of memory due to fragmentation.\nThis amount equals to the maximum total size of the byte buffers\nin concurrent use.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/valyala/bytebufferpool@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/valyala/bytebufferpool",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/valyala/bytebufferpool",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Aliaksandr Valialkin",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c7bd0e9e3dc218f4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/valyala/fastjson@v1.4.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fastjson provides fast JSON parsing.\n\nArbitrary JSON may be parsed by fastjson without the need for creating structs\nor for generating go code. Just parse JSON and get the required fields with\nGet* functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/valyala/fastjson@1.4.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/valyala/fastjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/valyala/fastjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Aliaksandr Valialkin",
            "versionInfo": "1.4.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d474a565d4fae928",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/valyala/fastjson@v1.4.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fastjson provides fast JSON parsing.\n\nArbitrary JSON may be parsed by fastjson without the need for creating structs\nor for generating go code. Just parse JSON and get the required fields with\nGet* functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/valyala/fastjson@1.4.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/valyala/fastjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/valyala/fastjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Aliaksandr Valialkin",
            "versionInfo": "1.4.1"
        },
        {
            "SPDXID": "SPDXRef-Package-cf6bce1eb310bb31",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/valyala/fasttemplate@v1.2.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fasttemplate implements simple and fast template library.\n\nFasttemplate is faster than text/template, strings.Replace\nand strings.Replacer.\n\nFasttemplate ideally fits for fast and simple placeholders' substitutions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/valyala/fasttemplate@1.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/valyala/fasttemplate",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/valyala/fasttemplate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: Aliaksandr Valialkin",
            "versionInfo": "1.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4e94d5eb304401b3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/vektah/gqlparser@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/vektah/gqlparser@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/vektah/gqlparser",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/vektah/gqlparser",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-b7240ecc0289131f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/vektah/gqlparser@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/vektah/gqlparser@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/vektah/gqlparser",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/vektah/gqlparser",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-db5e8d7f47e6d529",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/vektah/gqlparser@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/vektah/gqlparser@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/vektah/gqlparser",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/vektah/gqlparser",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-582a6230102c70f1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xeipuuv/gojsonpointer@v0.0.0-20180127040702-4e3ac2762d5f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xeipuuv/gojsonpointer@0.0.0-20180127040702-4e3ac2762d5f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xeipuuv/gojsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/xeipuuv/gojsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180127040702-4e3ac2762d5f"
        },
        {
            "SPDXID": "SPDXRef-Package-6cc167f409181985",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xeipuuv/gojsonpointer@v0.0.0-20180127040702-4e3ac2762d5f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xeipuuv/gojsonpointer@0.0.0-20180127040702-4e3ac2762d5f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xeipuuv/gojsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/xeipuuv/gojsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180127040702-4e3ac2762d5f"
        },
        {
            "SPDXID": "SPDXRef-Package-da03132afa6aac87",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xeipuuv/gojsonreference@v0.0.0-20180127040603-bd5ef7bd5415"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xeipuuv/gojsonreference@0.0.0-20180127040603-bd5ef7bd5415",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xeipuuv/gojsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/xeipuuv/gojsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180127040603-bd5ef7bd5415"
        },
        {
            "SPDXID": "SPDXRef-Package-e3acb1b4ad739442",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xeipuuv/gojsonreference@v0.0.0-20180127040603-bd5ef7bd5415"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xeipuuv/gojsonreference@0.0.0-20180127040603-bd5ef7bd5415",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xeipuuv/gojsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/xeipuuv/gojsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180127040603-bd5ef7bd5415"
        },
        {
            "SPDXID": "SPDXRef-Package-218423354afd9376",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xeipuuv/gojsonschema@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xeipuuv/gojsonschema@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xeipuuv/gojsonschema",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/xeipuuv/gojsonschema",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-621e16be702d2bd7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xeipuuv/gojsonschema@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xeipuuv/gojsonschema@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xeipuuv/gojsonschema",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/xeipuuv/gojsonschema",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-19be10b93910e528",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xiang90/probing@v0.0.0-20190116061207-43a291ad63a2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xiang90/probing@0.0.0-20190116061207-43a291ad63a2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xiang90/probing",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/xiang90/probing",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190116061207-43a291ad63a2"
        },
        {
            "SPDXID": "SPDXRef-Package-a86783f862b3430",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xiang90/probing@v0.0.0-20190116061207-43a291ad63a2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xiang90/probing@0.0.0-20190116061207-43a291ad63a2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xiang90/probing",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/xiang90/probing",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190116061207-43a291ad63a2"
        },
        {
            "SPDXID": "SPDXRef-Package-ce32d9a074114584",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xiang90/probing@v0.0.0-20190116061207-43a291ad63a2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xiang90/probing@0.0.0-20190116061207-43a291ad63a2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xiang90/probing",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/xiang90/probing",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190116061207-43a291ad63a2"
        },
        {
            "SPDXID": "SPDXRef-Package-f2b7b019404afa2f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xiang90/probing@v0.0.0-20190116061207-43a291ad63a2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xiang90/probing@0.0.0-20190116061207-43a291ad63a2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xiang90/probing",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/xiang90/probing",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190116061207-43a291ad63a2"
        },
        {
            "SPDXID": "SPDXRef-Package-fa20606ba3941776",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xiang90/probing@v0.0.0-20190116061207-43a291ad63a2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xiang90/probing@0.0.0-20190116061207-43a291ad63a2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xiang90/probing",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/xiang90/probing",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190116061207-43a291ad63a2"
        },
        {
            "SPDXID": "SPDXRef-Package-fdaeade478aecb69",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xlab/treeprint@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package treeprint provides a simple ASCII tree composing tool.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xlab/treeprint@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xlab/treeprint",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/xlab/treeprint",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2454a455824e6a8f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xordataexchange/crypt@v0.0.3-0.20170626215501-b2862e3d0a77"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xordataexchange/crypt@0.0.3-0.20170626215501-b2862e3d0a77",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xordataexchange/crypt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/xordataexchange/crypt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: XOR Data Exchange",
            "versionInfo": "0.0.3-0.20170626215501-b2862e3d0a77"
        },
        {
            "SPDXID": "SPDXRef-Package-a9166c9c069fcf29",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xordataexchange/crypt@v0.0.3-0.20170626215501-b2862e3d0a77"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xordataexchange/crypt@0.0.3-0.20170626215501-b2862e3d0a77",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xordataexchange/crypt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/xordataexchange/crypt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: XOR Data Exchange",
            "versionInfo": "0.0.3-0.20170626215501-b2862e3d0a77"
        },
        {
            "SPDXID": "SPDXRef-Package-aee2e9da488a8c12",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xordataexchange/crypt@v0.0.3-0.20170626215501-b2862e3d0a77"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xordataexchange/crypt@0.0.3-0.20170626215501-b2862e3d0a77",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xordataexchange/crypt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/xordataexchange/crypt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: XOR Data Exchange",
            "versionInfo": "0.0.3-0.20170626215501-b2862e3d0a77"
        },
        {
            "SPDXID": "SPDXRef-Package-b7a39999e4b5fa08",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xordataexchange/crypt@v0.0.3-0.20170626215501-b2862e3d0a77"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xordataexchange/crypt@0.0.3-0.20170626215501-b2862e3d0a77",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xordataexchange/crypt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/xordataexchange/crypt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: XOR Data Exchange",
            "versionInfo": "0.0.3-0.20170626215501-b2862e3d0a77"
        },
        {
            "SPDXID": "SPDXRef-Package-cc968928b2f252d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/xordataexchange/crypt@v0.0.3-0.20170626215501-b2862e3d0a77"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/xordataexchange/crypt@0.0.3-0.20170626215501-b2862e3d0a77",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/xordataexchange/crypt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/xordataexchange/crypt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: XOR Data Exchange",
            "versionInfo": "0.0.3-0.20170626215501-b2862e3d0a77"
        },
        {
            "SPDXID": "SPDXRef-Package-a4c5c3100efa6854",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ziutek/telnet@v0.0.0-20180329124119-c3b780dc415b"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package telnet provides simple interface for interacting with Telnet\nconnection.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ziutek/telnet@0.0.0-20180329124119-c3b780dc415b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ziutek/telnet",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/ziutek/telnet",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180329124119-c3b780dc415b"
        },
        {
            "SPDXID": "SPDXRef-Package-2e08fc4f06d15c99",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.etcd.io/bbolt@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "package bbolt implements a low-level key/value store in pure Go. It supports\nfully serializable transactions, ACID semantics, and lock-free MVCC with\nmultiple readers and a single writer. Bolt can be used for projects that\nwant a simple data store without the need to add large dependencies such as\nPostgres or MySQL.\n\nBolt is a single-level, zero-copy, B+tree data store. This means that Bolt is\noptimized for fast read access and does not require recovery in the event of a\nsystem crash. Transactions which have not finished committing will simply be\nrolled back in the event of a crash.\n\nThe design of Bolt is based on Howard Chu's LMDB database project.\n\nBolt currently works on Windows, Mac OS X, and Linux.\n\nThere are only a few types in Bolt: DB, Bucket, Tx, and Cursor. The DB is\na collection of buckets and is represented by a single file on disk. A bucket is\na collection of unique keys that are associated with values.\n\nTransactions provide either read-only or read-write access to the database.\nRead-only transactions can retrieve key/value pairs and can use Cursors to\niterate over the dataset sequentially. Read-write transactions can create and\ndelete buckets and can insert and remove keys. Only one read-write transaction\nis allowed at a time.\n\nThe database uses a read-only, memory-mapped data file to ensure that\napplications cannot corrupt the database, however, this means that keys and\nvalues returned from Bolt cannot be changed. Writing to a read-only byte slice\nwill cause Go to panic.\n\nKeys and values retrieved from the database are only valid for the life of\nthe transaction. When used outside the transaction, these byte slices can\npoint to different data or can point to invalid memory which will cause a panic.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.etcd.io/bbolt@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/etcd-io/bbolt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.etcd.io/bbolt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-8f74663a6c0a9f6f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.etcd.io/bbolt@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "package bbolt implements a low-level key/value store in pure Go. It supports\nfully serializable transactions, ACID semantics, and lock-free MVCC with\nmultiple readers and a single writer. Bolt can be used for projects that\nwant a simple data store without the need to add large dependencies such as\nPostgres or MySQL.\n\nBolt is a single-level, zero-copy, B+tree data store. This means that Bolt is\noptimized for fast read access and does not require recovery in the event of a\nsystem crash. Transactions which have not finished committing will simply be\nrolled back in the event of a crash.\n\nThe design of Bolt is based on Howard Chu's LMDB database project.\n\nBolt currently works on Windows, Mac OS X, and Linux.\n\nThere are only a few types in Bolt: DB, Bucket, Tx, and Cursor. The DB is\na collection of buckets and is represented by a single file on disk. A bucket is\na collection of unique keys that are associated with values.\n\nTransactions provide either read-only or read-write access to the database.\nRead-only transactions can retrieve key/value pairs and can use Cursors to\niterate over the dataset sequentially. Read-write transactions can create and\ndelete buckets and can insert and remove keys. Only one read-write transaction\nis allowed at a time.\n\nThe database uses a read-only, memory-mapped data file to ensure that\napplications cannot corrupt the database, however, this means that keys and\nvalues returned from Bolt cannot be changed. Writing to a read-only byte slice\nwill cause Go to panic.\n\nKeys and values retrieved from the database are only valid for the life of\nthe transaction. When used outside the transaction, these byte slices can\npoint to different data or can point to invalid memory which will cause a panic.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.etcd.io/bbolt@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/etcd-io/bbolt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.etcd.io/bbolt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-e298fc91d7c39e2f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.etcd.io/bbolt@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "package bbolt implements a low-level key/value store in pure Go. It supports\nfully serializable transactions, ACID semantics, and lock-free MVCC with\nmultiple readers and a single writer. Bolt can be used for projects that\nwant a simple data store without the need to add large dependencies such as\nPostgres or MySQL.\n\nBolt is a single-level, zero-copy, B+tree data store. This means that Bolt is\noptimized for fast read access and does not require recovery in the event of a\nsystem crash. Transactions which have not finished committing will simply be\nrolled back in the event of a crash.\n\nThe design of Bolt is based on Howard Chu's LMDB database project.\n\nBolt currently works on Windows, Mac OS X, and Linux.\n\nThere are only a few types in Bolt: DB, Bucket, Tx, and Cursor. The DB is\na collection of buckets and is represented by a single file on disk. A bucket is\na collection of unique keys that are associated with values.\n\nTransactions provide either read-only or read-write access to the database.\nRead-only transactions can retrieve key/value pairs and can use Cursors to\niterate over the dataset sequentially. Read-write transactions can create and\ndelete buckets and can insert and remove keys. Only one read-write transaction\nis allowed at a time.\n\nThe database uses a read-only, memory-mapped data file to ensure that\napplications cannot corrupt the database, however, this means that keys and\nvalues returned from Bolt cannot be changed. Writing to a read-only byte slice\nwill cause Go to panic.\n\nKeys and values retrieved from the database are only valid for the life of\nthe transaction. When used outside the transaction, these byte slices can\npoint to different data or can point to invalid memory which will cause a panic.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.etcd.io/bbolt@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/etcd-io/bbolt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.etcd.io/bbolt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-eb7a691bb493823a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.etcd.io/bbolt@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "package bbolt implements a low-level key/value store in pure Go. It supports\nfully serializable transactions, ACID semantics, and lock-free MVCC with\nmultiple readers and a single writer. Bolt can be used for projects that\nwant a simple data store without the need to add large dependencies such as\nPostgres or MySQL.\n\nBolt is a single-level, zero-copy, B+tree data store. This means that Bolt is\noptimized for fast read access and does not require recovery in the event of a\nsystem crash. Transactions which have not finished committing will simply be\nrolled back in the event of a crash.\n\nThe design of Bolt is based on Howard Chu's LMDB database project.\n\nBolt currently works on Windows, Mac OS X, and Linux.\n\nThere are only a few types in Bolt: DB, Bucket, Tx, and Cursor. The DB is\na collection of buckets and is represented by a single file on disk. A bucket is\na collection of unique keys that are associated with values.\n\nTransactions provide either read-only or read-write access to the database.\nRead-only transactions can retrieve key/value pairs and can use Cursors to\niterate over the dataset sequentially. Read-write transactions can create and\ndelete buckets and can insert and remove keys. Only one read-write transaction\nis allowed at a time.\n\nThe database uses a read-only, memory-mapped data file to ensure that\napplications cannot corrupt the database, however, this means that keys and\nvalues returned from Bolt cannot be changed. Writing to a read-only byte slice\nwill cause Go to panic.\n\nKeys and values retrieved from the database are only valid for the life of\nthe transaction. When used outside the transaction, these byte slices can\npoint to different data or can point to invalid memory which will cause a panic.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.etcd.io/bbolt@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/etcd-io/bbolt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.etcd.io/bbolt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-f3da62783c553473",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.etcd.io/bbolt@v1.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "package bbolt implements a low-level key/value store in pure Go. It supports\nfully serializable transactions, ACID semantics, and lock-free MVCC with\nmultiple readers and a single writer. Bolt can be used for projects that\nwant a simple data store without the need to add large dependencies such as\nPostgres or MySQL.\n\nBolt is a single-level, zero-copy, B+tree data store. This means that Bolt is\noptimized for fast read access and does not require recovery in the event of a\nsystem crash. Transactions which have not finished committing will simply be\nrolled back in the event of a crash.\n\nThe design of Bolt is based on Howard Chu's LMDB database project.\n\nBolt currently works on Windows, Mac OS X, and Linux.\n\nThere are only a few types in Bolt: DB, Bucket, Tx, and Cursor. The DB is\na collection of buckets and is represented by a single file on disk. A bucket is\na collection of unique keys that are associated with values.\n\nTransactions provide either read-only or read-write access to the database.\nRead-only transactions can retrieve key/value pairs and can use Cursors to\niterate over the dataset sequentially. Read-write transactions can create and\ndelete buckets and can insert and remove keys. Only one read-write transaction\nis allowed at a time.\n\nThe database uses a read-only, memory-mapped data file to ensure that\napplications cannot corrupt the database, however, this means that keys and\nvalues returned from Bolt cannot be changed. Writing to a read-only byte slice\nwill cause Go to panic.\n\nKeys and values retrieved from the database are only valid for the life of\nthe transaction. When used outside the transaction, these byte slices can\npoint to different data or can point to invalid memory which will cause a panic.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.etcd.io/bbolt@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/etcd-io/bbolt",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.etcd.io/bbolt",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-2d66164e94daf627",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.etcd.io/etcd/api/v3@v3.5.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.etcd.io/etcd/api/v3@3.5.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/etcd-io/etcd",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.etcd.io/etcd/api/v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: etcd-io",
            "versionInfo": "3.5.4"
        },
        {
            "SPDXID": "SPDXRef-Package-14510d6a8b0cd139",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.mongodb.org/mongo-driver@v1.4.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.mongodb.org/mongo-driver@1.4.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mongodb/mongo-go-driver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.mongodb.org/mongo-driver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: mongodb",
            "versionInfo": "1.4.3"
        },
        {
            "SPDXID": "SPDXRef-Package-196c83cca5d4506c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.mongodb.org/mongo-driver@v1.11.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.mongodb.org/mongo-driver@1.11.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mongodb/mongo-go-driver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.mongodb.org/mongo-driver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: mongodb",
            "versionInfo": "1.11.3"
        },
        {
            "SPDXID": "SPDXRef-Package-21082fc93d4b41b1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.mongodb.org/mongo-driver@v1.5.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.mongodb.org/mongo-driver@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mongodb/mongo-go-driver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.mongodb.org/mongo-driver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: mongodb",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-496cbee33d73bb3b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.mongodb.org/mongo-driver@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.mongodb.org/mongo-driver@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mongodb/mongo-go-driver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.mongodb.org/mongo-driver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: mongodb",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-61ae20b7e19f762",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.mongodb.org/mongo-driver@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.mongodb.org/mongo-driver@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mongodb/mongo-go-driver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.mongodb.org/mongo-driver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: mongodb",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-7102ce69d66406f4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.mongodb.org/mongo-driver@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.mongodb.org/mongo-driver@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mongodb/mongo-go-driver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.mongodb.org/mongo-driver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: mongodb",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-7fc05ef8dd656ff2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.mongodb.org/mongo-driver@v1.11.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.mongodb.org/mongo-driver@1.11.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mongodb/mongo-go-driver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.mongodb.org/mongo-driver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: mongodb",
            "versionInfo": "1.11.3"
        },
        {
            "SPDXID": "SPDXRef-Package-7fffa0891a3b8782",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.mongodb.org/mongo-driver@v1.1.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.mongodb.org/mongo-driver@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mongodb/mongo-go-driver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.mongodb.org/mongo-driver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: mongodb",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-91413414ca17669b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.mongodb.org/mongo-driver@v1.11.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.mongodb.org/mongo-driver@1.11.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mongodb/mongo-go-driver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.mongodb.org/mongo-driver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: mongodb",
            "versionInfo": "1.11.3"
        },
        {
            "SPDXID": "SPDXRef-Package-bf7023cc4abed418",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.mongodb.org/mongo-driver@v1.8.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.mongodb.org/mongo-driver@1.8.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mongodb/mongo-go-driver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.mongodb.org/mongo-driver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: mongodb",
            "versionInfo": "1.8.3"
        },
        {
            "SPDXID": "SPDXRef-Package-de45906799db3ee1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.mongodb.org/mongo-driver@v1.5.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.mongodb.org/mongo-driver@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mongodb/mongo-go-driver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.mongodb.org/mongo-driver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: mongodb",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-667fdc597cd3a5fb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.opentelemetry.io/otel@v1.14.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package otel provides global access to the OpenTelemetry API. The subpackages of\nthe otel package provide an implementation of the OpenTelemetry API.\n\nThe provided API is used to instrument code and measure data about that code's\nperformance and operation. The measured data, by default, is not processed or\ntransmitted anywhere. An implementation of the OpenTelemetry SDK, like the\ndefault SDK implementation (go.opentelemetry.io/otel/sdk), and associated\nexporters are used to process and transport this data.\n\nTo read the getting started guide, see https://opentelemetry.io/docs/languages/go/getting-started/.\n\nTo read more about tracing, see go.opentelemetry.io/otel/trace.\n\nTo read more about metrics, see go.opentelemetry.io/otel/metric.\n\nTo read more about logs, see go.opentelemetry.io/otel/log.\n\nTo read more about propagation, see go.opentelemetry.io/otel/propagation and\ngo.opentelemetry.io/otel/baggage.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.opentelemetry.io/otel@1.14.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/open-telemetry/opentelemetry-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.opentelemetry.io/otel",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: OpenTelemetry - CNCF",
            "versionInfo": "1.14.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8855580222cf060e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.opentelemetry.io/otel@v1.14.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package otel provides global access to the OpenTelemetry API. The subpackages of\nthe otel package provide an implementation of the OpenTelemetry API.\n\nThe provided API is used to instrument code and measure data about that code's\nperformance and operation. The measured data, by default, is not processed or\ntransmitted anywhere. An implementation of the OpenTelemetry SDK, like the\ndefault SDK implementation (go.opentelemetry.io/otel/sdk), and associated\nexporters are used to process and transport this data.\n\nTo read the getting started guide, see https://opentelemetry.io/docs/languages/go/getting-started/.\n\nTo read more about tracing, see go.opentelemetry.io/otel/trace.\n\nTo read more about metrics, see go.opentelemetry.io/otel/metric.\n\nTo read more about logs, see go.opentelemetry.io/otel/log.\n\nTo read more about propagation, see go.opentelemetry.io/otel/propagation and\ngo.opentelemetry.io/otel/baggage.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.opentelemetry.io/otel@1.14.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/open-telemetry/opentelemetry-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.opentelemetry.io/otel",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: OpenTelemetry - CNCF",
            "versionInfo": "1.14.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e35b058b282f474c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.opentelemetry.io/otel@v1.14.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package otel provides global access to the OpenTelemetry API. The subpackages of\nthe otel package provide an implementation of the OpenTelemetry API.\n\nThe provided API is used to instrument code and measure data about that code's\nperformance and operation. The measured data, by default, is not processed or\ntransmitted anywhere. An implementation of the OpenTelemetry SDK, like the\ndefault SDK implementation (go.opentelemetry.io/otel/sdk), and associated\nexporters are used to process and transport this data.\n\nTo read the getting started guide, see https://opentelemetry.io/docs/languages/go/getting-started/.\n\nTo read more about tracing, see go.opentelemetry.io/otel/trace.\n\nTo read more about metrics, see go.opentelemetry.io/otel/metric.\n\nTo read more about logs, see go.opentelemetry.io/otel/log.\n\nTo read more about propagation, see go.opentelemetry.io/otel/propagation and\ngo.opentelemetry.io/otel/baggage.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.opentelemetry.io/otel@1.14.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/open-telemetry/opentelemetry-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.opentelemetry.io/otel",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: OpenTelemetry - CNCF",
            "versionInfo": "1.14.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1e9a64336fc517fd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.opentelemetry.io/otel/trace@v1.14.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package trace provides an implementation of the tracing part of the\nOpenTelemetry API.\n\nTo participate in distributed traces a Span needs to be created for the\noperation being performed as part of a traced workflow. In its simplest form:\n\nA Tracer is unique to the instrumentation and is used to create Spans.\nInstrumentation should be designed to accept a TracerProvider from which it\ncan create its own unique Tracer. Alternatively, the registered global\nTracerProvider from the go.opentelemetry.io/otel package can be used as\na default.\n\nThis package does not conform to the standard Go versioning policy; all of its\ninterfaces may have methods added to them without a package major version bump.\nThis non-standard API evolution could surprise an uninformed implementation\nauthor. They could unknowingly build their implementation in a way that would\nresult in a runtime panic for their users that update to the new API.\n\nThe API is designed to help inform an instrumentation author about this\nnon-standard API evolution. It requires them to choose a default behavior for\nunimplemented interface methods. There are three behavior choices they can\nmake:\n\nAll interfaces in this API embed a corresponding interface from\ngo.opentelemetry.io/otel/trace/embedded. If an author wants the default\nbehavior of their implementations to be a compilation failure, signaling to\ntheir users they need to update to the latest version of that implementation,\nthey need to embed the corresponding interface from\ngo.opentelemetry.io/otel/trace/embedded in their implementation. For\nexample,\n\nIf an author wants the default behavior of their implementations to panic, they\ncan embed the API interface directly.\n\nThis option is not recommended. It will lead to publishing packages that\ncontain runtime panics when users update to newer versions of\ngo.opentelemetry.io/otel/trace, which may be done with a transitive\ndependency.\n\nFinally, an author can embed another implementation in theirs. The embedded\nimplementation will be used for methods not defined by the author. For example,\nan author who wants to default to silently dropping the call can use\ngo.opentelemetry.io/otel/trace/noop:\n\nIt is strongly recommended that authors only embed\ngo.opentelemetry.io/otel/trace/noop if they choose this default behavior.\nThat implementation is the only one OpenTelemetry authors can guarantee will\nfully implement all the API interfaces when a user updates their API.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.opentelemetry.io/otel/trace@1.14.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/open-telemetry/opentelemetry-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.opentelemetry.io/otel/trace",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: OpenTelemetry - CNCF",
            "versionInfo": "1.14.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4983f13859de7fc8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.opentelemetry.io/otel/trace@v1.14.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package trace provides an implementation of the tracing part of the\nOpenTelemetry API.\n\nTo participate in distributed traces a Span needs to be created for the\noperation being performed as part of a traced workflow. In its simplest form:\n\nA Tracer is unique to the instrumentation and is used to create Spans.\nInstrumentation should be designed to accept a TracerProvider from which it\ncan create its own unique Tracer. Alternatively, the registered global\nTracerProvider from the go.opentelemetry.io/otel package can be used as\na default.\n\nThis package does not conform to the standard Go versioning policy; all of its\ninterfaces may have methods added to them without a package major version bump.\nThis non-standard API evolution could surprise an uninformed implementation\nauthor. They could unknowingly build their implementation in a way that would\nresult in a runtime panic for their users that update to the new API.\n\nThe API is designed to help inform an instrumentation author about this\nnon-standard API evolution. It requires them to choose a default behavior for\nunimplemented interface methods. There are three behavior choices they can\nmake:\n\nAll interfaces in this API embed a corresponding interface from\ngo.opentelemetry.io/otel/trace/embedded. If an author wants the default\nbehavior of their implementations to be a compilation failure, signaling to\ntheir users they need to update to the latest version of that implementation,\nthey need to embed the corresponding interface from\ngo.opentelemetry.io/otel/trace/embedded in their implementation. For\nexample,\n\nIf an author wants the default behavior of their implementations to panic, they\ncan embed the API interface directly.\n\nThis option is not recommended. It will lead to publishing packages that\ncontain runtime panics when users update to newer versions of\ngo.opentelemetry.io/otel/trace, which may be done with a transitive\ndependency.\n\nFinally, an author can embed another implementation in theirs. The embedded\nimplementation will be used for methods not defined by the author. For example,\nan author who wants to default to silently dropping the call can use\ngo.opentelemetry.io/otel/trace/noop:\n\nIt is strongly recommended that authors only embed\ngo.opentelemetry.io/otel/trace/noop if they choose this default behavior.\nThat implementation is the only one OpenTelemetry authors can guarantee will\nfully implement all the API interfaces when a user updates their API.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.opentelemetry.io/otel/trace@1.14.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/open-telemetry/opentelemetry-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.opentelemetry.io/otel/trace",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: OpenTelemetry - CNCF",
            "versionInfo": "1.14.0"
        },
        {
            "SPDXID": "SPDXRef-Package-49c6ff1bbfc586b7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.opentelemetry.io/otel/trace@v1.14.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package trace provides an implementation of the tracing part of the\nOpenTelemetry API.\n\nTo participate in distributed traces a Span needs to be created for the\noperation being performed as part of a traced workflow. In its simplest form:\n\nA Tracer is unique to the instrumentation and is used to create Spans.\nInstrumentation should be designed to accept a TracerProvider from which it\ncan create its own unique Tracer. Alternatively, the registered global\nTracerProvider from the go.opentelemetry.io/otel package can be used as\na default.\n\nThis package does not conform to the standard Go versioning policy; all of its\ninterfaces may have methods added to them without a package major version bump.\nThis non-standard API evolution could surprise an uninformed implementation\nauthor. They could unknowingly build their implementation in a way that would\nresult in a runtime panic for their users that update to the new API.\n\nThe API is designed to help inform an instrumentation author about this\nnon-standard API evolution. It requires them to choose a default behavior for\nunimplemented interface methods. There are three behavior choices they can\nmake:\n\nAll interfaces in this API embed a corresponding interface from\ngo.opentelemetry.io/otel/trace/embedded. If an author wants the default\nbehavior of their implementations to be a compilation failure, signaling to\ntheir users they need to update to the latest version of that implementation,\nthey need to embed the corresponding interface from\ngo.opentelemetry.io/otel/trace/embedded in their implementation. For\nexample,\n\nIf an author wants the default behavior of their implementations to panic, they\ncan embed the API interface directly.\n\nThis option is not recommended. It will lead to publishing packages that\ncontain runtime panics when users update to newer versions of\ngo.opentelemetry.io/otel/trace, which may be done with a transitive\ndependency.\n\nFinally, an author can embed another implementation in theirs. The embedded\nimplementation will be used for methods not defined by the author. For example,\nan author who wants to default to silently dropping the call can use\ngo.opentelemetry.io/otel/trace/noop:\n\nIt is strongly recommended that authors only embed\ngo.opentelemetry.io/otel/trace/noop if they choose this default behavior.\nThat implementation is the only one OpenTelemetry authors can guarantee will\nfully implement all the API interfaces when a user updates their API.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.opentelemetry.io/otel/trace@1.14.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/open-telemetry/opentelemetry-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "go.opentelemetry.io/otel/trace",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: OpenTelemetry - CNCF",
            "versionInfo": "1.14.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4f858685fa0ad833",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.starlark.net@v0.0.0-20200306205701-8dd3e2ee1dd5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.starlark.net@0.0.0-20200306205701-8dd3e2ee1dd5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/starlark-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "go.starlark.net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.0.0-20200306205701-8dd3e2ee1dd5"
        },
        {
            "SPDXID": "SPDXRef-Package-29683f12c5691228",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/atomic@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package atomic provides simple wrappers around numerics to enforce atomic\naccess.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/atomic@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/atomic",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/atomic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2fd28a7fc45adc3f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/atomic@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package atomic provides simple wrappers around numerics to enforce atomic\naccess.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/atomic@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/atomic",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/atomic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3b2285423f1a024e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/atomic@v1.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package atomic provides simple wrappers around numerics to enforce atomic\naccess.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/atomic@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/atomic",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/atomic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3d4baa4fd2f4b798",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/atomic@v1.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package atomic provides simple wrappers around numerics to enforce atomic\naccess.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/atomic@1.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/atomic",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/atomic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-496667ced83c6e6a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/atomic@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package atomic provides simple wrappers around numerics to enforce atomic\naccess.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/atomic@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/atomic",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/atomic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4cc216e05efe7fb7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/atomic@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package atomic provides simple wrappers around numerics to enforce atomic\naccess.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/atomic@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/atomic",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/atomic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c505e38b8b9fbae2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/atomic@v1.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package atomic provides simple wrappers around numerics to enforce atomic\naccess.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/atomic@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/atomic",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/atomic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d05dfc7eb7e2c907",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/atomic@v1.7.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package atomic provides simple wrappers around numerics to enforce atomic\naccess.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/atomic@1.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/atomic",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/atomic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1a8d123a503d5492",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/multierr@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package multierr allows combining one or more errors together.\n\nErrors can be combined with the use of the Combine function.\n\nIf only two errors are being combined, the Append function may be used\ninstead.\n\nThe underlying list of errors for a returned error object may be retrieved\nwith the Errors function.\n\nYou sometimes need to append into an error from a loop.\n\nCases like this may require knowledge of whether an individual instance\nfailed. This usually requires introduction of a new variable.\n\nmultierr includes AppendInto to simplify cases like this.\n\nThis will append the error into the err variable, and return true if that\nindividual error was non-nil.\n\nSee AppendInto for more information.\n\nGo makes it possible to modify the return value of a function in a defer\nblock if the function was using named returns. This makes it possible to\nrecord resource cleanup failures from deferred blocks.\n\nmultierr provides the Invoker type and AppendInvoke function to make cases\nlike the above simpler and obviate the need for a closure. The following is\nroughly equivalent to the example above.\n\nSee AppendInvoke and Invoker for more information.\n\nNOTE: If you're modifying an error from inside a defer, you MUST use a named\nreturn value for that function.\n\nErrors returned by Combine and Append MAY implement the following\ninterface.\n\nNote that if you need access to list of errors behind a multierr error, you\nshould prefer using the Errors function. That said, if you need cheap\nread-only access to the underlying errors slice, you can attempt to cast\nthe error to this interface. You MUST handle the failure case gracefully\nbecause errors returned by Combine and Append are not guaranteed to\nimplement this interface.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/multierr@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/multierr",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/multierr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-224ae16aa19f9888",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/multierr@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package multierr allows combining one or more errors together.\n\nErrors can be combined with the use of the Combine function.\n\nIf only two errors are being combined, the Append function may be used\ninstead.\n\nThe underlying list of errors for a returned error object may be retrieved\nwith the Errors function.\n\nYou sometimes need to append into an error from a loop.\n\nCases like this may require knowledge of whether an individual instance\nfailed. This usually requires introduction of a new variable.\n\nmultierr includes AppendInto to simplify cases like this.\n\nThis will append the error into the err variable, and return true if that\nindividual error was non-nil.\n\nSee AppendInto for more information.\n\nGo makes it possible to modify the return value of a function in a defer\nblock if the function was using named returns. This makes it possible to\nrecord resource cleanup failures from deferred blocks.\n\nmultierr provides the Invoker type and AppendInvoke function to make cases\nlike the above simpler and obviate the need for a closure. The following is\nroughly equivalent to the example above.\n\nSee AppendInvoke and Invoker for more information.\n\nNOTE: If you're modifying an error from inside a defer, you MUST use a named\nreturn value for that function.\n\nErrors returned by Combine and Append MAY implement the following\ninterface.\n\nNote that if you need access to list of errors behind a multierr error, you\nshould prefer using the Errors function. That said, if you need cheap\nread-only access to the underlying errors slice, you can attempt to cast\nthe error to this interface. You MUST handle the failure case gracefully\nbecause errors returned by Combine and Append are not guaranteed to\nimplement this interface.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/multierr@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/multierr",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/multierr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2db20483a33e4d24",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/multierr@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package multierr allows combining one or more errors together.\n\nErrors can be combined with the use of the Combine function.\n\nIf only two errors are being combined, the Append function may be used\ninstead.\n\nThe underlying list of errors for a returned error object may be retrieved\nwith the Errors function.\n\nYou sometimes need to append into an error from a loop.\n\nCases like this may require knowledge of whether an individual instance\nfailed. This usually requires introduction of a new variable.\n\nmultierr includes AppendInto to simplify cases like this.\n\nThis will append the error into the err variable, and return true if that\nindividual error was non-nil.\n\nSee AppendInto for more information.\n\nGo makes it possible to modify the return value of a function in a defer\nblock if the function was using named returns. This makes it possible to\nrecord resource cleanup failures from deferred blocks.\n\nmultierr provides the Invoker type and AppendInvoke function to make cases\nlike the above simpler and obviate the need for a closure. The following is\nroughly equivalent to the example above.\n\nSee AppendInvoke and Invoker for more information.\n\nNOTE: If you're modifying an error from inside a defer, you MUST use a named\nreturn value for that function.\n\nErrors returned by Combine and Append MAY implement the following\ninterface.\n\nNote that if you need access to list of errors behind a multierr error, you\nshould prefer using the Errors function. That said, if you need cheap\nread-only access to the underlying errors slice, you can attempt to cast\nthe error to this interface. You MUST handle the failure case gracefully\nbecause errors returned by Combine and Append are not guaranteed to\nimplement this interface.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/multierr@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/multierr",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/multierr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2fa7d16f4b56c5bd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/multierr@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package multierr allows combining one or more errors together.\n\nErrors can be combined with the use of the Combine function.\n\nIf only two errors are being combined, the Append function may be used\ninstead.\n\nThe underlying list of errors for a returned error object may be retrieved\nwith the Errors function.\n\nYou sometimes need to append into an error from a loop.\n\nCases like this may require knowledge of whether an individual instance\nfailed. This usually requires introduction of a new variable.\n\nmultierr includes AppendInto to simplify cases like this.\n\nThis will append the error into the err variable, and return true if that\nindividual error was non-nil.\n\nSee AppendInto for more information.\n\nGo makes it possible to modify the return value of a function in a defer\nblock if the function was using named returns. This makes it possible to\nrecord resource cleanup failures from deferred blocks.\n\nmultierr provides the Invoker type and AppendInvoke function to make cases\nlike the above simpler and obviate the need for a closure. The following is\nroughly equivalent to the example above.\n\nSee AppendInvoke and Invoker for more information.\n\nNOTE: If you're modifying an error from inside a defer, you MUST use a named\nreturn value for that function.\n\nErrors returned by Combine and Append MAY implement the following\ninterface.\n\nNote that if you need access to list of errors behind a multierr error, you\nshould prefer using the Errors function. That said, if you need cheap\nread-only access to the underlying errors slice, you can attempt to cast\nthe error to this interface. You MUST handle the failure case gracefully\nbecause errors returned by Combine and Append are not guaranteed to\nimplement this interface.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/multierr@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/multierr",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/multierr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-40a4b0adc2bbee17",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/multierr@v1.6.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package multierr allows combining one or more errors together.\n\nErrors can be combined with the use of the Combine function.\n\nIf only two errors are being combined, the Append function may be used\ninstead.\n\nThe underlying list of errors for a returned error object may be retrieved\nwith the Errors function.\n\nYou sometimes need to append into an error from a loop.\n\nCases like this may require knowledge of whether an individual instance\nfailed. This usually requires introduction of a new variable.\n\nmultierr includes AppendInto to simplify cases like this.\n\nThis will append the error into the err variable, and return true if that\nindividual error was non-nil.\n\nSee AppendInto for more information.\n\nGo makes it possible to modify the return value of a function in a defer\nblock if the function was using named returns. This makes it possible to\nrecord resource cleanup failures from deferred blocks.\n\nmultierr provides the Invoker type and AppendInvoke function to make cases\nlike the above simpler and obviate the need for a closure. The following is\nroughly equivalent to the example above.\n\nSee AppendInvoke and Invoker for more information.\n\nNOTE: If you're modifying an error from inside a defer, you MUST use a named\nreturn value for that function.\n\nErrors returned by Combine and Append MAY implement the following\ninterface.\n\nNote that if you need access to list of errors behind a multierr error, you\nshould prefer using the Errors function. That said, if you need cheap\nread-only access to the underlying errors slice, you can attempt to cast\nthe error to this interface. You MUST handle the failure case gracefully\nbecause errors returned by Combine and Append are not guaranteed to\nimplement this interface.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/multierr@1.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/multierr",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/multierr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4d5912ac769b8159",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/multierr@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package multierr allows combining one or more errors together.\n\nErrors can be combined with the use of the Combine function.\n\nIf only two errors are being combined, the Append function may be used\ninstead.\n\nThe underlying list of errors for a returned error object may be retrieved\nwith the Errors function.\n\nYou sometimes need to append into an error from a loop.\n\nCases like this may require knowledge of whether an individual instance\nfailed. This usually requires introduction of a new variable.\n\nmultierr includes AppendInto to simplify cases like this.\n\nThis will append the error into the err variable, and return true if that\nindividual error was non-nil.\n\nSee AppendInto for more information.\n\nGo makes it possible to modify the return value of a function in a defer\nblock if the function was using named returns. This makes it possible to\nrecord resource cleanup failures from deferred blocks.\n\nmultierr provides the Invoker type and AppendInvoke function to make cases\nlike the above simpler and obviate the need for a closure. The following is\nroughly equivalent to the example above.\n\nSee AppendInvoke and Invoker for more information.\n\nNOTE: If you're modifying an error from inside a defer, you MUST use a named\nreturn value for that function.\n\nErrors returned by Combine and Append MAY implement the following\ninterface.\n\nNote that if you need access to list of errors behind a multierr error, you\nshould prefer using the Errors function. That said, if you need cheap\nread-only access to the underlying errors slice, you can attempt to cast\nthe error to this interface. You MUST handle the failure case gracefully\nbecause errors returned by Combine and Append are not guaranteed to\nimplement this interface.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/multierr@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/multierr",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/multierr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5dc779f0119cef0e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/multierr@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package multierr allows combining one or more errors together.\n\nErrors can be combined with the use of the Combine function.\n\nIf only two errors are being combined, the Append function may be used\ninstead.\n\nThe underlying list of errors for a returned error object may be retrieved\nwith the Errors function.\n\nYou sometimes need to append into an error from a loop.\n\nCases like this may require knowledge of whether an individual instance\nfailed. This usually requires introduction of a new variable.\n\nmultierr includes AppendInto to simplify cases like this.\n\nThis will append the error into the err variable, and return true if that\nindividual error was non-nil.\n\nSee AppendInto for more information.\n\nGo makes it possible to modify the return value of a function in a defer\nblock if the function was using named returns. This makes it possible to\nrecord resource cleanup failures from deferred blocks.\n\nmultierr provides the Invoker type and AppendInvoke function to make cases\nlike the above simpler and obviate the need for a closure. The following is\nroughly equivalent to the example above.\n\nSee AppendInvoke and Invoker for more information.\n\nNOTE: If you're modifying an error from inside a defer, you MUST use a named\nreturn value for that function.\n\nErrors returned by Combine and Append MAY implement the following\ninterface.\n\nNote that if you need access to list of errors behind a multierr error, you\nshould prefer using the Errors function. That said, if you need cheap\nread-only access to the underlying errors slice, you can attempt to cast\nthe error to this interface. You MUST handle the failure case gracefully\nbecause errors returned by Combine and Append are not guaranteed to\nimplement this interface.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/multierr@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/multierr",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/multierr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6392521ba2886e5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/multierr@v1.6.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package multierr allows combining one or more errors together.\n\nErrors can be combined with the use of the Combine function.\n\nIf only two errors are being combined, the Append function may be used\ninstead.\n\nThe underlying list of errors for a returned error object may be retrieved\nwith the Errors function.\n\nYou sometimes need to append into an error from a loop.\n\nCases like this may require knowledge of whether an individual instance\nfailed. This usually requires introduction of a new variable.\n\nmultierr includes AppendInto to simplify cases like this.\n\nThis will append the error into the err variable, and return true if that\nindividual error was non-nil.\n\nSee AppendInto for more information.\n\nGo makes it possible to modify the return value of a function in a defer\nblock if the function was using named returns. This makes it possible to\nrecord resource cleanup failures from deferred blocks.\n\nmultierr provides the Invoker type and AppendInvoke function to make cases\nlike the above simpler and obviate the need for a closure. The following is\nroughly equivalent to the example above.\n\nSee AppendInvoke and Invoker for more information.\n\nNOTE: If you're modifying an error from inside a defer, you MUST use a named\nreturn value for that function.\n\nErrors returned by Combine and Append MAY implement the following\ninterface.\n\nNote that if you need access to list of errors behind a multierr error, you\nshould prefer using the Errors function. That said, if you need cheap\nread-only access to the underlying errors slice, you can attempt to cast\nthe error to this interface. You MUST handle the failure case gracefully\nbecause errors returned by Combine and Append are not guaranteed to\nimplement this interface.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/multierr@1.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/multierr",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/multierr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1fe015793a30da4b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/tools@v0.0.0-20190618225709-2cfd321de3ee"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/tools@0.0.0-20190618225709-2cfd321de3ee",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/tools",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "0.0.0-20190618225709-2cfd321de3ee"
        },
        {
            "SPDXID": "SPDXRef-Package-2585e8de99ab22b4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/tools@v0.0.0-20190618225709-2cfd321de3ee"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/tools@0.0.0-20190618225709-2cfd321de3ee",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/tools",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "0.0.0-20190618225709-2cfd321de3ee"
        },
        {
            "SPDXID": "SPDXRef-Package-923cf7e901942aa0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/tools@v0.0.0-20190618225709-2cfd321de3ee"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/tools@0.0.0-20190618225709-2cfd321de3ee",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/tools",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "0.0.0-20190618225709-2cfd321de3ee"
        },
        {
            "SPDXID": "SPDXRef-Package-102caab6814043b4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/zap@v1.10.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zap provides fast, structured, leveled logging.\n\nFor applications that log in the hot path, reflection-based serialization\nand string formatting are prohibitively expensive - they're CPU-intensive\nand make many small allocations. Put differently, using json.Marshal and\nfmt.Fprintf to log tons of interface{} makes your application slow.\n\nZap takes a different approach. It includes a reflection-free,\nzero-allocation JSON encoder, and the base Logger strives to avoid\nserialization overhead and allocations wherever possible. By building the\nhigh-level SugaredLogger on that foundation, zap lets users choose when\nthey need to count every allocation and when they'd prefer a more familiar,\nloosely typed API.\n\nIn contexts where performance is nice, but not critical, use the\nSugaredLogger. It's 4-10x faster than other structured logging packages and\nsupports both structured and printf-style logging. Like log15 and go-kit,\nthe SugaredLogger's structured logging APIs are loosely typed and accept a\nvariadic number of key-value pairs. (For more advanced use cases, they also\naccept strongly typed fields - see the SugaredLogger.With documentation for\ndetails.)\n\nBy default, loggers are unbuffered. However, since zap's low-level APIs\nallow buffering, calling Sync before letting your process exit is a good\nhabit.\n\nIn the rare contexts where every microsecond and every allocation matter,\nuse the Logger. It's even faster than the SugaredLogger and allocates far\nless, but it only supports strongly-typed, structured logging.\n\nChoosing between the Logger and SugaredLogger doesn't need to be an\napplication-wide decision: converting between the two is simple and\ninexpensive.\n\nThe simplest way to build a Logger is to use zap's opinionated presets:\nNewExample, NewProduction, and NewDevelopment. These presets build a logger\nwith a single function call:\n\nPresets are fine for small projects, but larger projects and organizations\nnaturally require a bit more customization. For most users, zap's Config\nstruct strikes the right balance between flexibility and convenience. See\nthe package-level BasicConfiguration example for sample code.\n\nMore unusual configurations (splitting output between files, sending logs\nto a message queue, etc.) are possible, but require direct use of\ngo.uber.org/zap/zapcore. See the package-level AdvancedConfiguration\nexample for sample code.\n\nThe zap package itself is a relatively thin wrapper around the interfaces\nin go.uber.org/zap/zapcore. Extending zap to support a new encoding (e.g.,\nBSON), a new log sink (e.g., Kafka), or something more exotic (perhaps an\nexception aggregation service, like Sentry or Rollbar) typically requires\nimplementing the zapcore.Encoder, zapcore.WriteSyncer, or zapcore.Core\ninterfaces. See the zapcore documentation for details.\n\nSimilarly, package authors can use the high-performance Encoder and Core\nimplementations in the zapcore package to build their own loggers.\n\nAn FAQ covering everything from installation errors to design decisions is\navailable at https://github.com/uber-go/zap/blob/master/FAQ.md.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/zap@1.10.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/zap",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/zap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.10.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5e5fc45ae87a701b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/zap@v1.13.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zap provides fast, structured, leveled logging.\n\nFor applications that log in the hot path, reflection-based serialization\nand string formatting are prohibitively expensive - they're CPU-intensive\nand make many small allocations. Put differently, using json.Marshal and\nfmt.Fprintf to log tons of interface{} makes your application slow.\n\nZap takes a different approach. It includes a reflection-free,\nzero-allocation JSON encoder, and the base Logger strives to avoid\nserialization overhead and allocations wherever possible. By building the\nhigh-level SugaredLogger on that foundation, zap lets users choose when\nthey need to count every allocation and when they'd prefer a more familiar,\nloosely typed API.\n\nIn contexts where performance is nice, but not critical, use the\nSugaredLogger. It's 4-10x faster than other structured logging packages and\nsupports both structured and printf-style logging. Like log15 and go-kit,\nthe SugaredLogger's structured logging APIs are loosely typed and accept a\nvariadic number of key-value pairs. (For more advanced use cases, they also\naccept strongly typed fields - see the SugaredLogger.With documentation for\ndetails.)\n\nBy default, loggers are unbuffered. However, since zap's low-level APIs\nallow buffering, calling Sync before letting your process exit is a good\nhabit.\n\nIn the rare contexts where every microsecond and every allocation matter,\nuse the Logger. It's even faster than the SugaredLogger and allocates far\nless, but it only supports strongly-typed, structured logging.\n\nChoosing between the Logger and SugaredLogger doesn't need to be an\napplication-wide decision: converting between the two is simple and\ninexpensive.\n\nThe simplest way to build a Logger is to use zap's opinionated presets:\nNewExample, NewProduction, and NewDevelopment. These presets build a logger\nwith a single function call:\n\nPresets are fine for small projects, but larger projects and organizations\nnaturally require a bit more customization. For most users, zap's Config\nstruct strikes the right balance between flexibility and convenience. See\nthe package-level BasicConfiguration example for sample code.\n\nMore unusual configurations (splitting output between files, sending logs\nto a message queue, etc.) are possible, but require direct use of\ngo.uber.org/zap/zapcore. See the package-level AdvancedConfiguration\nexample for sample code.\n\nThe zap package itself is a relatively thin wrapper around the interfaces\nin go.uber.org/zap/zapcore. Extending zap to support a new encoding (e.g.,\nBSON), a new log sink (e.g., Kafka), or something more exotic (perhaps an\nexception aggregation service, like Sentry or Rollbar) typically requires\nimplementing the zapcore.Encoder, zapcore.WriteSyncer, or zapcore.Core\ninterfaces. See the zapcore documentation for details.\n\nSimilarly, package authors can use the high-performance Encoder and Core\nimplementations in the zapcore package to build their own loggers.\n\nAn FAQ covering everything from installation errors to design decisions is\navailable at https://github.com/uber-go/zap/blob/master/FAQ.md.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/zap@1.13.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/zap",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/zap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.13.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7b0d001f95bc280f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/zap@v1.24.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zap provides fast, structured, leveled logging.\n\nFor applications that log in the hot path, reflection-based serialization\nand string formatting are prohibitively expensive - they're CPU-intensive\nand make many small allocations. Put differently, using json.Marshal and\nfmt.Fprintf to log tons of interface{} makes your application slow.\n\nZap takes a different approach. It includes a reflection-free,\nzero-allocation JSON encoder, and the base Logger strives to avoid\nserialization overhead and allocations wherever possible. By building the\nhigh-level SugaredLogger on that foundation, zap lets users choose when\nthey need to count every allocation and when they'd prefer a more familiar,\nloosely typed API.\n\nIn contexts where performance is nice, but not critical, use the\nSugaredLogger. It's 4-10x faster than other structured logging packages and\nsupports both structured and printf-style logging. Like log15 and go-kit,\nthe SugaredLogger's structured logging APIs are loosely typed and accept a\nvariadic number of key-value pairs. (For more advanced use cases, they also\naccept strongly typed fields - see the SugaredLogger.With documentation for\ndetails.)\n\nBy default, loggers are unbuffered. However, since zap's low-level APIs\nallow buffering, calling Sync before letting your process exit is a good\nhabit.\n\nIn the rare contexts where every microsecond and every allocation matter,\nuse the Logger. It's even faster than the SugaredLogger and allocates far\nless, but it only supports strongly-typed, structured logging.\n\nChoosing between the Logger and SugaredLogger doesn't need to be an\napplication-wide decision: converting between the two is simple and\ninexpensive.\n\nThe simplest way to build a Logger is to use zap's opinionated presets:\nNewExample, NewProduction, and NewDevelopment. These presets build a logger\nwith a single function call:\n\nPresets are fine for small projects, but larger projects and organizations\nnaturally require a bit more customization. For most users, zap's Config\nstruct strikes the right balance between flexibility and convenience. See\nthe package-level BasicConfiguration example for sample code.\n\nMore unusual configurations (splitting output between files, sending logs\nto a message queue, etc.) are possible, but require direct use of\ngo.uber.org/zap/zapcore. See the package-level AdvancedConfiguration\nexample for sample code.\n\nThe zap package itself is a relatively thin wrapper around the interfaces\nin go.uber.org/zap/zapcore. Extending zap to support a new encoding (e.g.,\nBSON), a new log sink (e.g., Kafka), or something more exotic (perhaps an\nexception aggregation service, like Sentry or Rollbar) typically requires\nimplementing the zapcore.Encoder, zapcore.WriteSyncer, or zapcore.Core\ninterfaces. See the zapcore documentation for details.\n\nSimilarly, package authors can use the high-performance Encoder and Core\nimplementations in the zapcore package to build their own loggers.\n\nAn FAQ covering everything from installation errors to design decisions is\navailable at https://github.com/uber-go/zap/blob/master/FAQ.md.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/zap@1.24.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/zap",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/zap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.24.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9228a0c914374527",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/zap@v1.13.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zap provides fast, structured, leveled logging.\n\nFor applications that log in the hot path, reflection-based serialization\nand string formatting are prohibitively expensive - they're CPU-intensive\nand make many small allocations. Put differently, using json.Marshal and\nfmt.Fprintf to log tons of interface{} makes your application slow.\n\nZap takes a different approach. It includes a reflection-free,\nzero-allocation JSON encoder, and the base Logger strives to avoid\nserialization overhead and allocations wherever possible. By building the\nhigh-level SugaredLogger on that foundation, zap lets users choose when\nthey need to count every allocation and when they'd prefer a more familiar,\nloosely typed API.\n\nIn contexts where performance is nice, but not critical, use the\nSugaredLogger. It's 4-10x faster than other structured logging packages and\nsupports both structured and printf-style logging. Like log15 and go-kit,\nthe SugaredLogger's structured logging APIs are loosely typed and accept a\nvariadic number of key-value pairs. (For more advanced use cases, they also\naccept strongly typed fields - see the SugaredLogger.With documentation for\ndetails.)\n\nBy default, loggers are unbuffered. However, since zap's low-level APIs\nallow buffering, calling Sync before letting your process exit is a good\nhabit.\n\nIn the rare contexts where every microsecond and every allocation matter,\nuse the Logger. It's even faster than the SugaredLogger and allocates far\nless, but it only supports strongly-typed, structured logging.\n\nChoosing between the Logger and SugaredLogger doesn't need to be an\napplication-wide decision: converting between the two is simple and\ninexpensive.\n\nThe simplest way to build a Logger is to use zap's opinionated presets:\nNewExample, NewProduction, and NewDevelopment. These presets build a logger\nwith a single function call:\n\nPresets are fine for small projects, but larger projects and organizations\nnaturally require a bit more customization. For most users, zap's Config\nstruct strikes the right balance between flexibility and convenience. See\nthe package-level BasicConfiguration example for sample code.\n\nMore unusual configurations (splitting output between files, sending logs\nto a message queue, etc.) are possible, but require direct use of\ngo.uber.org/zap/zapcore. See the package-level AdvancedConfiguration\nexample for sample code.\n\nThe zap package itself is a relatively thin wrapper around the interfaces\nin go.uber.org/zap/zapcore. Extending zap to support a new encoding (e.g.,\nBSON), a new log sink (e.g., Kafka), or something more exotic (perhaps an\nexception aggregation service, like Sentry or Rollbar) typically requires\nimplementing the zapcore.Encoder, zapcore.WriteSyncer, or zapcore.Core\ninterfaces. See the zapcore documentation for details.\n\nSimilarly, package authors can use the high-performance Encoder and Core\nimplementations in the zapcore package to build their own loggers.\n\nAn FAQ covering everything from installation errors to design decisions is\navailable at https://github.com/uber-go/zap/blob/master/FAQ.md.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/zap@1.13.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/zap",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/zap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.13.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a56bbdf51b082735",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/zap@v1.10.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zap provides fast, structured, leveled logging.\n\nFor applications that log in the hot path, reflection-based serialization\nand string formatting are prohibitively expensive - they're CPU-intensive\nand make many small allocations. Put differently, using json.Marshal and\nfmt.Fprintf to log tons of interface{} makes your application slow.\n\nZap takes a different approach. It includes a reflection-free,\nzero-allocation JSON encoder, and the base Logger strives to avoid\nserialization overhead and allocations wherever possible. By building the\nhigh-level SugaredLogger on that foundation, zap lets users choose when\nthey need to count every allocation and when they'd prefer a more familiar,\nloosely typed API.\n\nIn contexts where performance is nice, but not critical, use the\nSugaredLogger. It's 4-10x faster than other structured logging packages and\nsupports both structured and printf-style logging. Like log15 and go-kit,\nthe SugaredLogger's structured logging APIs are loosely typed and accept a\nvariadic number of key-value pairs. (For more advanced use cases, they also\naccept strongly typed fields - see the SugaredLogger.With documentation for\ndetails.)\n\nBy default, loggers are unbuffered. However, since zap's low-level APIs\nallow buffering, calling Sync before letting your process exit is a good\nhabit.\n\nIn the rare contexts where every microsecond and every allocation matter,\nuse the Logger. It's even faster than the SugaredLogger and allocates far\nless, but it only supports strongly-typed, structured logging.\n\nChoosing between the Logger and SugaredLogger doesn't need to be an\napplication-wide decision: converting between the two is simple and\ninexpensive.\n\nThe simplest way to build a Logger is to use zap's opinionated presets:\nNewExample, NewProduction, and NewDevelopment. These presets build a logger\nwith a single function call:\n\nPresets are fine for small projects, but larger projects and organizations\nnaturally require a bit more customization. For most users, zap's Config\nstruct strikes the right balance between flexibility and convenience. See\nthe package-level BasicConfiguration example for sample code.\n\nMore unusual configurations (splitting output between files, sending logs\nto a message queue, etc.) are possible, but require direct use of\ngo.uber.org/zap/zapcore. See the package-level AdvancedConfiguration\nexample for sample code.\n\nThe zap package itself is a relatively thin wrapper around the interfaces\nin go.uber.org/zap/zapcore. Extending zap to support a new encoding (e.g.,\nBSON), a new log sink (e.g., Kafka), or something more exotic (perhaps an\nexception aggregation service, like Sentry or Rollbar) typically requires\nimplementing the zapcore.Encoder, zapcore.WriteSyncer, or zapcore.Core\ninterfaces. See the zapcore documentation for details.\n\nSimilarly, package authors can use the high-performance Encoder and Core\nimplementations in the zapcore package to build their own loggers.\n\nAn FAQ covering everything from installation errors to design decisions is\navailable at https://github.com/uber-go/zap/blob/master/FAQ.md.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/zap@1.10.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/zap",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/zap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.10.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bfcf3dfbd114a3f7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/zap@v1.24.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zap provides fast, structured, leveled logging.\n\nFor applications that log in the hot path, reflection-based serialization\nand string formatting are prohibitively expensive - they're CPU-intensive\nand make many small allocations. Put differently, using json.Marshal and\nfmt.Fprintf to log tons of interface{} makes your application slow.\n\nZap takes a different approach. It includes a reflection-free,\nzero-allocation JSON encoder, and the base Logger strives to avoid\nserialization overhead and allocations wherever possible. By building the\nhigh-level SugaredLogger on that foundation, zap lets users choose when\nthey need to count every allocation and when they'd prefer a more familiar,\nloosely typed API.\n\nIn contexts where performance is nice, but not critical, use the\nSugaredLogger. It's 4-10x faster than other structured logging packages and\nsupports both structured and printf-style logging. Like log15 and go-kit,\nthe SugaredLogger's structured logging APIs are loosely typed and accept a\nvariadic number of key-value pairs. (For more advanced use cases, they also\naccept strongly typed fields - see the SugaredLogger.With documentation for\ndetails.)\n\nBy default, loggers are unbuffered. However, since zap's low-level APIs\nallow buffering, calling Sync before letting your process exit is a good\nhabit.\n\nIn the rare contexts where every microsecond and every allocation matter,\nuse the Logger. It's even faster than the SugaredLogger and allocates far\nless, but it only supports strongly-typed, structured logging.\n\nChoosing between the Logger and SugaredLogger doesn't need to be an\napplication-wide decision: converting between the two is simple and\ninexpensive.\n\nThe simplest way to build a Logger is to use zap's opinionated presets:\nNewExample, NewProduction, and NewDevelopment. These presets build a logger\nwith a single function call:\n\nPresets are fine for small projects, but larger projects and organizations\nnaturally require a bit more customization. For most users, zap's Config\nstruct strikes the right balance between flexibility and convenience. See\nthe package-level BasicConfiguration example for sample code.\n\nMore unusual configurations (splitting output between files, sending logs\nto a message queue, etc.) are possible, but require direct use of\ngo.uber.org/zap/zapcore. See the package-level AdvancedConfiguration\nexample for sample code.\n\nThe zap package itself is a relatively thin wrapper around the interfaces\nin go.uber.org/zap/zapcore. Extending zap to support a new encoding (e.g.,\nBSON), a new log sink (e.g., Kafka), or something more exotic (perhaps an\nexception aggregation service, like Sentry or Rollbar) typically requires\nimplementing the zapcore.Encoder, zapcore.WriteSyncer, or zapcore.Core\ninterfaces. See the zapcore documentation for details.\n\nSimilarly, package authors can use the high-performance Encoder and Core\nimplementations in the zapcore package to build their own loggers.\n\nAn FAQ covering everything from installation errors to design decisions is\navailable at https://github.com/uber-go/zap/blob/master/FAQ.md.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/zap@1.24.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/zap",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/zap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.24.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e7c08c96309d4ff4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/zap@v1.13.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zap provides fast, structured, leveled logging.\n\nFor applications that log in the hot path, reflection-based serialization\nand string formatting are prohibitively expensive - they're CPU-intensive\nand make many small allocations. Put differently, using json.Marshal and\nfmt.Fprintf to log tons of interface{} makes your application slow.\n\nZap takes a different approach. It includes a reflection-free,\nzero-allocation JSON encoder, and the base Logger strives to avoid\nserialization overhead and allocations wherever possible. By building the\nhigh-level SugaredLogger on that foundation, zap lets users choose when\nthey need to count every allocation and when they'd prefer a more familiar,\nloosely typed API.\n\nIn contexts where performance is nice, but not critical, use the\nSugaredLogger. It's 4-10x faster than other structured logging packages and\nsupports both structured and printf-style logging. Like log15 and go-kit,\nthe SugaredLogger's structured logging APIs are loosely typed and accept a\nvariadic number of key-value pairs. (For more advanced use cases, they also\naccept strongly typed fields - see the SugaredLogger.With documentation for\ndetails.)\n\nBy default, loggers are unbuffered. However, since zap's low-level APIs\nallow buffering, calling Sync before letting your process exit is a good\nhabit.\n\nIn the rare contexts where every microsecond and every allocation matter,\nuse the Logger. It's even faster than the SugaredLogger and allocates far\nless, but it only supports strongly-typed, structured logging.\n\nChoosing between the Logger and SugaredLogger doesn't need to be an\napplication-wide decision: converting between the two is simple and\ninexpensive.\n\nThe simplest way to build a Logger is to use zap's opinionated presets:\nNewExample, NewProduction, and NewDevelopment. These presets build a logger\nwith a single function call:\n\nPresets are fine for small projects, but larger projects and organizations\nnaturally require a bit more customization. For most users, zap's Config\nstruct strikes the right balance between flexibility and convenience. See\nthe package-level BasicConfiguration example for sample code.\n\nMore unusual configurations (splitting output between files, sending logs\nto a message queue, etc.) are possible, but require direct use of\ngo.uber.org/zap/zapcore. See the package-level AdvancedConfiguration\nexample for sample code.\n\nThe zap package itself is a relatively thin wrapper around the interfaces\nin go.uber.org/zap/zapcore. Extending zap to support a new encoding (e.g.,\nBSON), a new log sink (e.g., Kafka), or something more exotic (perhaps an\nexception aggregation service, like Sentry or Rollbar) typically requires\nimplementing the zapcore.Encoder, zapcore.WriteSyncer, or zapcore.Core\ninterfaces. See the zapcore documentation for details.\n\nSimilarly, package authors can use the high-performance Encoder and Core\nimplementations in the zapcore package to build their own loggers.\n\nAn FAQ covering everything from installation errors to design decisions is\navailable at https://github.com/uber-go/zap/blob/master/FAQ.md.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/zap@1.13.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/zap",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/zap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.13.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e7d175b94d2f8150",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/zap@v1.10.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zap provides fast, structured, leveled logging.\n\nFor applications that log in the hot path, reflection-based serialization\nand string formatting are prohibitively expensive - they're CPU-intensive\nand make many small allocations. Put differently, using json.Marshal and\nfmt.Fprintf to log tons of interface{} makes your application slow.\n\nZap takes a different approach. It includes a reflection-free,\nzero-allocation JSON encoder, and the base Logger strives to avoid\nserialization overhead and allocations wherever possible. By building the\nhigh-level SugaredLogger on that foundation, zap lets users choose when\nthey need to count every allocation and when they'd prefer a more familiar,\nloosely typed API.\n\nIn contexts where performance is nice, but not critical, use the\nSugaredLogger. It's 4-10x faster than other structured logging packages and\nsupports both structured and printf-style logging. Like log15 and go-kit,\nthe SugaredLogger's structured logging APIs are loosely typed and accept a\nvariadic number of key-value pairs. (For more advanced use cases, they also\naccept strongly typed fields - see the SugaredLogger.With documentation for\ndetails.)\n\nBy default, loggers are unbuffered. However, since zap's low-level APIs\nallow buffering, calling Sync before letting your process exit is a good\nhabit.\n\nIn the rare contexts where every microsecond and every allocation matter,\nuse the Logger. It's even faster than the SugaredLogger and allocates far\nless, but it only supports strongly-typed, structured logging.\n\nChoosing between the Logger and SugaredLogger doesn't need to be an\napplication-wide decision: converting between the two is simple and\ninexpensive.\n\nThe simplest way to build a Logger is to use zap's opinionated presets:\nNewExample, NewProduction, and NewDevelopment. These presets build a logger\nwith a single function call:\n\nPresets are fine for small projects, but larger projects and organizations\nnaturally require a bit more customization. For most users, zap's Config\nstruct strikes the right balance between flexibility and convenience. See\nthe package-level BasicConfiguration example for sample code.\n\nMore unusual configurations (splitting output between files, sending logs\nto a message queue, etc.) are possible, but require direct use of\ngo.uber.org/zap/zapcore. See the package-level AdvancedConfiguration\nexample for sample code.\n\nThe zap package itself is a relatively thin wrapper around the interfaces\nin go.uber.org/zap/zapcore. Extending zap to support a new encoding (e.g.,\nBSON), a new log sink (e.g., Kafka), or something more exotic (perhaps an\nexception aggregation service, like Sentry or Rollbar) typically requires\nimplementing the zapcore.Encoder, zapcore.WriteSyncer, or zapcore.Core\ninterfaces. See the zapcore documentation for details.\n\nSimilarly, package authors can use the high-performance Encoder and Core\nimplementations in the zapcore package to build their own loggers.\n\nAn FAQ covering everything from installation errors to design decisions is\navailable at https://github.com/uber-go/zap/blob/master/FAQ.md.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/zap@1.10.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/zap",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/zap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.10.0"
        },
        {
            "SPDXID": "SPDXRef-Package-15ae14d2eee524fa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/crypto@v0.0.0-20200302210943-78000ba7a073"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/crypto@0.0.0-20200302210943-78000ba7a073",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/crypto",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/crypto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200302210943-78000ba7a073"
        },
        {
            "SPDXID": "SPDXRef-Package-32acdc872316cd5d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/crypto@v0.0.0-20190617133340-57b3e21c3d56"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/crypto@0.0.0-20190617133340-57b3e21c3d56",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/crypto",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/crypto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190617133340-57b3e21c3d56"
        },
        {
            "SPDXID": "SPDXRef-Package-437b0e97a6994fc9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/crypto@v0.0.0-20220525230936-793ad666bf5e"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/crypto@0.0.0-20220525230936-793ad666bf5e",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/crypto",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/crypto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20220525230936-793ad666bf5e"
        },
        {
            "SPDXID": "SPDXRef-Package-7b6852eec1ef8ecb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/crypto@v0.0.0-20190510104115-cbcb75029529"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/crypto@0.0.0-20190510104115-cbcb75029529",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/crypto",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/crypto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190510104115-cbcb75029529"
        },
        {
            "SPDXID": "SPDXRef-Package-a1738c28139fbd07",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/crypto@v0.0.0-20190510104115-cbcb75029529"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/crypto@0.0.0-20190510104115-cbcb75029529",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/crypto",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/crypto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190510104115-cbcb75029529"
        },
        {
            "SPDXID": "SPDXRef-Package-b3e4509e500a3ddd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/crypto@v0.0.0-20190617133340-57b3e21c3d56"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/crypto@0.0.0-20190617133340-57b3e21c3d56",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/crypto",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/crypto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190617133340-57b3e21c3d56"
        },
        {
            "SPDXID": "SPDXRef-Package-eb1583f5e4535b88",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/crypto@v0.0.0-20190617133340-57b3e21c3d56"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/crypto@0.0.0-20190617133340-57b3e21c3d56",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/crypto",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/crypto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190617133340-57b3e21c3d56"
        },
        {
            "SPDXID": "SPDXRef-Package-f4062749a120de91",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/crypto@v0.0.0-20190510104115-cbcb75029529"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/crypto@0.0.0-20190510104115-cbcb75029529",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/crypto",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/crypto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190510104115-cbcb75029529"
        },
        {
            "SPDXID": "SPDXRef-Package-fb566b575b2aff17",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/crypto@v0.0.0-20201221181555-eec23a3978ad"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/crypto@0.0.0-20201221181555-eec23a3978ad",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/crypto",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/crypto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20201221181555-eec23a3978ad"
        },
        {
            "SPDXID": "SPDXRef-Package-822927a40a480ed1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/lint@v0.0.0-20190930215403-16217165b5de"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package lint contains a linter for Go source code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/lint@0.0.0-20190930215403-16217165b5de",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://go.googlesource.com/lint",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/lint",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20190930215403-16217165b5de"
        },
        {
            "SPDXID": "SPDXRef-Package-b368bda3108bb34e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/lint@v0.0.0-20190930215403-16217165b5de"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package lint contains a linter for Go source code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/lint@0.0.0-20190930215403-16217165b5de",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://go.googlesource.com/lint",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/lint",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20190930215403-16217165b5de"
        },
        {
            "SPDXID": "SPDXRef-Package-c125605b390c2ced",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/lint@v0.0.0-20190313153728-d0100b6bd8b3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package lint contains a linter for Go source code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/lint@0.0.0-20190313153728-d0100b6bd8b3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://go.googlesource.com/lint",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/lint",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20190313153728-d0100b6bd8b3"
        },
        {
            "SPDXID": "SPDXRef-Package-cac113a9539ff36a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/lint@v0.0.0-20190930215403-16217165b5de"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package lint contains a linter for Go source code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/lint@0.0.0-20190930215403-16217165b5de",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://go.googlesource.com/lint",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/lint",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20190930215403-16217165b5de"
        },
        {
            "SPDXID": "SPDXRef-Package-e389525d3928b3e7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/lint@v0.0.0-20190313153728-d0100b6bd8b3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package lint contains a linter for Go source code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/lint@0.0.0-20190313153728-d0100b6bd8b3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://go.googlesource.com/lint",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/lint",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20190313153728-d0100b6bd8b3"
        },
        {
            "SPDXID": "SPDXRef-Package-fae86ba88b2e8d0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/lint@v0.0.0-20190313153728-d0100b6bd8b3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package lint contains a linter for Go source code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/lint@0.0.0-20190313153728-d0100b6bd8b3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://go.googlesource.com/lint",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/lint",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20190313153728-d0100b6bd8b3"
        },
        {
            "SPDXID": "SPDXRef-Package-2bd2256be6920e8b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/mod@v0.0.0-20190513183733-4bf6d317e70e"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/mod@0.0.0-20190513183733-4bf6d317e70e",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/mod",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/mod",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190513183733-4bf6d317e70e"
        },
        {
            "SPDXID": "SPDXRef-Package-7be1353306faa69f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/mod@v0.0.0-20190513183733-4bf6d317e70e"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/mod@0.0.0-20190513183733-4bf6d317e70e",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/mod",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/mod",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190513183733-4bf6d317e70e"
        },
        {
            "SPDXID": "SPDXRef-Package-b4f3bbdb3140bb0b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/mod@v0.0.0-20190513183733-4bf6d317e70e"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/mod@0.0.0-20190513183733-4bf6d317e70e",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/mod",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/mod",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190513183733-4bf6d317e70e"
        },
        {
            "SPDXID": "SPDXRef-Package-1abf254323ab6dcc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.10.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.10.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.10.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1b892627b2e32e55",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.10.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.10.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.10.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3f6184f993cb8777",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.10.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.10.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.10.0"
        },
        {
            "SPDXID": "SPDXRef-Package-498058cd8f630587",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20200520004742-59133d7f0dd7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20200520004742-59133d7f0dd7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200520004742-59133d7f0dd7"
        },
        {
            "SPDXID": "SPDXRef-Package-50e0719adce0ef2c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20210119194325-5f4716e94777"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20210119194325-5f4716e94777",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20210119194325-5f4716e94777"
        },
        {
            "SPDXID": "SPDXRef-Package-5c411450d1c845a7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20190620200207-3b0461eec859"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20190620200207-3b0461eec859",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190620200207-3b0461eec859"
        },
        {
            "SPDXID": "SPDXRef-Package-606c80373a921af0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.10.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.10.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.10.0"
        },
        {
            "SPDXID": "SPDXRef-Package-635c971f546dd9e9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20190620200207-3b0461eec859"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20190620200207-3b0461eec859",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190620200207-3b0461eec859"
        },
        {
            "SPDXID": "SPDXRef-Package-8c98caf567a128eb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20200520004742-59133d7f0dd7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20200520004742-59133d7f0dd7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200520004742-59133d7f0dd7"
        },
        {
            "SPDXID": "SPDXRef-Package-9a42da0bd66b749c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20210428140749-89ef3d95e781"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20210428140749-89ef3d95e781",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20210428140749-89ef3d95e781"
        },
        {
            "SPDXID": "SPDXRef-Package-9c906279178f5486",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20220722155237-a158d28d115b"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20220722155237-a158d28d115b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20220722155237-a158d28d115b"
        },
        {
            "SPDXID": "SPDXRef-Package-a597913c68fb9403",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.10.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.10.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.10.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bcc9b23460afb71b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20200520004742-59133d7f0dd7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20200520004742-59133d7f0dd7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200520004742-59133d7f0dd7"
        },
        {
            "SPDXID": "SPDXRef-Package-e1a4ab88e61f598c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20200520004742-59133d7f0dd7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20200520004742-59133d7f0dd7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200520004742-59133d7f0dd7"
        },
        {
            "SPDXID": "SPDXRef-Package-efb93dbd69ceb942",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20190620200207-3b0461eec859"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20190620200207-3b0461eec859",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190620200207-3b0461eec859"
        },
        {
            "SPDXID": "SPDXRef-Package-f5533b3835401e9e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20200520004742-59133d7f0dd7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20200520004742-59133d7f0dd7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200520004742-59133d7f0dd7"
        },
        {
            "SPDXID": "SPDXRef-Package-fad9bb9074714782",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20200520004742-59133d7f0dd7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20200520004742-59133d7f0dd7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200520004742-59133d7f0dd7"
        },
        {
            "SPDXID": "SPDXRef-Package-21fea9f510cc61da",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/oauth2@v0.0.0-20211104180415-d3ed0bb246c8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package oauth2 provides support for making\nOAuth2 authorized and authenticated HTTP requests,\nas specified in RFC 6749.\nIt can additionally grant authorization with Bearer JWT.\n\nCopyright 2023 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/oauth2@0.0.0-20211104180415-d3ed0bb246c8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/oauth2",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/oauth2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20211104180415-d3ed0bb246c8"
        },
        {
            "SPDXID": "SPDXRef-Package-39da3aafd3882d03",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/oauth2@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package oauth2 provides support for making\nOAuth2 authorized and authenticated HTTP requests,\nas specified in RFC 6749.\nIt can additionally grant authorization with Bearer JWT.\n\nCopyright 2023 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/oauth2@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/oauth2",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/oauth2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5ef5fd0d04dd227c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/oauth2@v0.0.0-20180821212333-d2e6202438be"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package oauth2 provides support for making\nOAuth2 authorized and authenticated HTTP requests,\nas specified in RFC 6749.\nIt can additionally grant authorization with Bearer JWT.\n\nCopyright 2023 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/oauth2@0.0.0-20180821212333-d2e6202438be",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/oauth2",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/oauth2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180821212333-d2e6202438be"
        },
        {
            "SPDXID": "SPDXRef-Package-879ec22f749a0a7b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/oauth2@v0.0.0-20180821212333-d2e6202438be"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package oauth2 provides support for making\nOAuth2 authorized and authenticated HTTP requests,\nas specified in RFC 6749.\nIt can additionally grant authorization with Bearer JWT.\n\nCopyright 2023 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/oauth2@0.0.0-20180821212333-d2e6202438be",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/oauth2",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/oauth2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180821212333-d2e6202438be"
        },
        {
            "SPDXID": "SPDXRef-Package-941e0095a1429f5a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/oauth2@v0.0.0-20180821212333-d2e6202438be"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package oauth2 provides support for making\nOAuth2 authorized and authenticated HTTP requests,\nas specified in RFC 6749.\nIt can additionally grant authorization with Bearer JWT.\n\nCopyright 2023 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/oauth2@0.0.0-20180821212333-d2e6202438be",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/oauth2",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/oauth2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180821212333-d2e6202438be"
        },
        {
            "SPDXID": "SPDXRef-Package-a5dd44129452b076",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/oauth2@v0.0.0-20180821212333-d2e6202438be"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package oauth2 provides support for making\nOAuth2 authorized and authenticated HTTP requests,\nas specified in RFC 6749.\nIt can additionally grant authorization with Bearer JWT.\n\nCopyright 2023 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/oauth2@0.0.0-20180821212333-d2e6202438be",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/oauth2",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/oauth2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180821212333-d2e6202438be"
        },
        {
            "SPDXID": "SPDXRef-Package-aa7ef44055b1ff7f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/oauth2@v0.0.0-20180821212333-d2e6202438be"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package oauth2 provides support for making\nOAuth2 authorized and authenticated HTTP requests,\nas specified in RFC 6749.\nIt can additionally grant authorization with Bearer JWT.\n\nCopyright 2023 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/oauth2@0.0.0-20180821212333-d2e6202438be",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/oauth2",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/oauth2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180821212333-d2e6202438be"
        },
        {
            "SPDXID": "SPDXRef-Package-fe0e87e93f60c3b9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/oauth2@v0.5.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package oauth2 provides support for making\nOAuth2 authorized and authenticated HTTP requests,\nas specified in RFC 6749.\nIt can additionally grant authorization with Bearer JWT.\n\nCopyright 2023 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/oauth2@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/oauth2",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/oauth2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-194eab40d5165249",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sync@v0.0.0-20220722155255-886fb9371eb4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sync@0.0.0-20220722155255-886fb9371eb4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sync",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sync",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20220722155255-886fb9371eb4"
        },
        {
            "SPDXID": "SPDXRef-Package-4f6c416488b3f66f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sync@v0.0.0-20190423024810-112230192c58"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sync@0.0.0-20190423024810-112230192c58",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sync",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sync",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190423024810-112230192c58"
        },
        {
            "SPDXID": "SPDXRef-Package-59fd2ba686a5a6fc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sync@v0.0.0-20190423024810-112230192c58"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sync@0.0.0-20190423024810-112230192c58",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sync",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sync",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190423024810-112230192c58"
        },
        {
            "SPDXID": "SPDXRef-Package-7ec588557decfcd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sync@v0.0.0-20190423024810-112230192c58"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sync@0.0.0-20190423024810-112230192c58",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sync",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sync",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190423024810-112230192c58"
        },
        {
            "SPDXID": "SPDXRef-Package-c3a6bb7cbc220c6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sync@v0.0.0-20190423024810-112230192c58"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sync@0.0.0-20190423024810-112230192c58",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sync",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sync",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190423024810-112230192c58"
        },
        {
            "SPDXID": "SPDXRef-Package-d46a93b400dd8d36",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sync@v0.0.0-20190423024810-112230192c58"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sync@0.0.0-20190423024810-112230192c58",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sync",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sync",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190423024810-112230192c58"
        },
        {
            "SPDXID": "SPDXRef-Package-e3c84da1c4f39afd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sync@v0.0.0-20190423024810-112230192c58"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sync@0.0.0-20190423024810-112230192c58",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sync",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sync",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190423024810-112230192c58"
        },
        {
            "SPDXID": "SPDXRef-Package-f475d7e6b8b5e358",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sync@v0.0.0-20190423024810-112230192c58"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sync@0.0.0-20190423024810-112230192c58",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sync",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sync",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190423024810-112230192c58"
        },
        {
            "SPDXID": "SPDXRef-Package-22af25ebf989e6cc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2a41cec84e245808",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20220722155257-8c9f86f7a55f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20220722155257-8c9f86f7a55f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20220722155257-8c9f86f7a55f"
        },
        {
            "SPDXID": "SPDXRef-Package-317d4c5c953370c3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20200602225109-6fdc65e7d980"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20200602225109-6fdc65e7d980",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200602225109-6fdc65e7d980"
        },
        {
            "SPDXID": "SPDXRef-Package-3674ba6fd0ae9c73",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6c50f2238316afbb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20200519105757-fe76b779f299"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20200519105757-fe76b779f299",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200519105757-fe76b779f299"
        },
        {
            "SPDXID": "SPDXRef-Package-6d287700f9115475",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20190412213103-97732733099d"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20190412213103-97732733099d",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190412213103-97732733099d"
        },
        {
            "SPDXID": "SPDXRef-Package-733dc3964c113f2c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8d61502fd80a0274",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-904a749b0006cae8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20200519105757-fe76b779f299"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20200519105757-fe76b779f299",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200519105757-fe76b779f299"
        },
        {
            "SPDXID": "SPDXRef-Package-b3e3b7500d9bcbc0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20210423082822-04245dca01da"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20210423082822-04245dca01da",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20210423082822-04245dca01da"
        },
        {
            "SPDXID": "SPDXRef-Package-b6cf9969babbefaf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20190412213103-97732733099d"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20190412213103-97732733099d",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190412213103-97732733099d"
        },
        {
            "SPDXID": "SPDXRef-Package-c82814aa48217ba4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20200519105757-fe76b779f299"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20200519105757-fe76b779f299",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200519105757-fe76b779f299"
        },
        {
            "SPDXID": "SPDXRef-Package-ccca5e57f6b020d8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20200519105757-fe76b779f299"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20200519105757-fe76b779f299",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200519105757-fe76b779f299"
        },
        {
            "SPDXID": "SPDXRef-Package-d83491af9239b863",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20200519105757-fe76b779f299"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20200519105757-fe76b779f299",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200519105757-fe76b779f299"
        },
        {
            "SPDXID": "SPDXRef-Package-e4e6e0ec896dbe83",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20200602225109-6fdc65e7d980"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20200602225109-6fdc65e7d980",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20200602225109-6fdc65e7d980"
        },
        {
            "SPDXID": "SPDXRef-Package-f28391297b0fd63c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20210927094055-39ccf1dd6fa6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20210927094055-39ccf1dd6fa6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20210927094055-39ccf1dd6fa6"
        },
        {
            "SPDXID": "SPDXRef-Package-f37e760775505d5d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f4b9750d088563f5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20190412213103-97732733099d"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20190412213103-97732733099d",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190412213103-97732733099d"
        },
        {
            "SPDXID": "SPDXRef-Package-4857df68908feb9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/term@v0.0.0-20210927222741-03fcf44c2211"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package term provides support functions for dealing with terminals, as\ncommonly found on UNIX systems.\n\nPutting a terminal into raw mode is the most common requirement:\n\nNote that on non-Unix systems os.Stdin.Fd() may not be 0.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/term@0.0.0-20210927222741-03fcf44c2211",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/term",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/term",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20210927222741-03fcf44c2211"
        },
        {
            "SPDXID": "SPDXRef-Package-5aaa426bc694334b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/term@v0.0.0-20201126162022-7de9c90e9dd1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package term provides support functions for dealing with terminals, as\ncommonly found on UNIX systems.\n\nPutting a terminal into raw mode is the most common requirement:\n\nNote that on non-Unix systems os.Stdin.Fd() may not be 0.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/term@0.0.0-20201126162022-7de9c90e9dd1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/term",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/term",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20201126162022-7de9c90e9dd1"
        },
        {
            "SPDXID": "SPDXRef-Package-abe87daf70d6bf5b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/term@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package term provides support functions for dealing with terminals, as\ncommonly found on UNIX systems.\n\nPutting a terminal into raw mode is the most common requirement:\n\nNote that on non-Unix systems os.Stdin.Fd() may not be 0.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/term@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/term",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/term",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e1ec182d9d28157c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/term@v0.8.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package term provides support functions for dealing with terminals, as\ncommonly found on UNIX systems.\n\nPutting a terminal into raw mode is the most common requirement:\n\nNote that on non-Unix systems os.Stdin.Fd() may not be 0.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/term@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/term",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/term",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2030717c842b217",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.5"
        },
        {
            "SPDXID": "SPDXRef-Package-29686560e924aa75",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.6"
        },
        {
            "SPDXID": "SPDXRef-Package-40a6cec3caac401e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.5"
        },
        {
            "SPDXID": "SPDXRef-Package-46c9dd1668e0e613",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-51861a8757d08403",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5995a27f321864e0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-6e4cd353399dea97",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.7"
        },
        {
            "SPDXID": "SPDXRef-Package-92b72a1ce9f06013",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-966d9a0421f5aca7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.5"
        },
        {
            "SPDXID": "SPDXRef-Package-98c8957b169e9685",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a770d27fbd2ebf26",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-aca0c9be8cda8e27",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b6933968c99d255",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b9aaaff5bf787d91",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-be4da1bfc57aa403",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-c0759e8c75ece7c6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-cb307009910c4737",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.9.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-17d1831622c947da",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/time@v0.0.0-20190308202827-9d24e82272b4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/time@0.0.0-20190308202827-9d24e82272b4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/time",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/time",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190308202827-9d24e82272b4"
        },
        {
            "SPDXID": "SPDXRef-Package-19e63effe7f4e0fc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/time@v0.0.0-20190308202827-9d24e82272b4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/time@0.0.0-20190308202827-9d24e82272b4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/time",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/time",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190308202827-9d24e82272b4"
        },
        {
            "SPDXID": "SPDXRef-Package-36b9da1a4eb9458c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/time@v0.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/time@0.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/time",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/time",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-36c681bd0e15af65",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/time@v0.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/time@0.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/time",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/time",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-680eda5663a81d21",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/time@v0.0.0-20190308202827-9d24e82272b4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/time@0.0.0-20190308202827-9d24e82272b4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/time",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/time",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190308202827-9d24e82272b4"
        },
        {
            "SPDXID": "SPDXRef-Package-87177b06e8786a3a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/time@v0.0.0-20190308202827-9d24e82272b4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/time@0.0.0-20190308202827-9d24e82272b4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/time",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/time",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190308202827-9d24e82272b4"
        },
        {
            "SPDXID": "SPDXRef-Package-963b58bea7d1bb74",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/time@v0.0.0-20190308202827-9d24e82272b4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/time@0.0.0-20190308202827-9d24e82272b4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/time",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/time",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190308202827-9d24e82272b4"
        },
        {
            "SPDXID": "SPDXRef-Package-a2f42158102994ba",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/time@v0.0.0-20210220033141-f8bda1e9f3ba"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/time@0.0.0-20210220033141-f8bda1e9f3ba",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/time",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/time",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20210220033141-f8bda1e9f3ba"
        },
        {
            "SPDXID": "SPDXRef-Package-a6a5d18134de0832",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/time@v0.0.0-20220210224613-90d013bbcef8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/time@0.0.0-20220210224613-90d013bbcef8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/time",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/time",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20220210224613-90d013bbcef8"
        },
        {
            "SPDXID": "SPDXRef-Package-1fa40fe545bad3c1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/tools@v0.0.0-20190617190820-da514acc4774"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/tools@0.0.0-20190617190820-da514acc4774",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/tools",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190617190820-da514acc4774"
        },
        {
            "SPDXID": "SPDXRef-Package-4f42c21b58d63c4b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/tools@v0.0.0-20191125144606-a911d9008d1f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/tools@0.0.0-20191125144606-a911d9008d1f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/tools",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20191125144606-a911d9008d1f"
        },
        {
            "SPDXID": "SPDXRef-Package-568e8513c6cde5f8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/tools@v0.9.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/tools@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/tools",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-5eae1721852ee555",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/tools@v0.0.0-20190617190820-da514acc4774"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/tools@0.0.0-20190617190820-da514acc4774",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/tools",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190617190820-da514acc4774"
        },
        {
            "SPDXID": "SPDXRef-Package-af77d89d5e839988",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/tools@v0.0.0-20190617190820-da514acc4774"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/tools@0.0.0-20190617190820-da514acc4774",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/tools",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190617190820-da514acc4774"
        },
        {
            "SPDXID": "SPDXRef-Package-b3ca0d54b1a9fbbe",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/tools@v0.0.0-20191029190741-b9c20aec41a5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/tools@0.0.0-20191029190741-b9c20aec41a5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/tools",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20191029190741-b9c20aec41a5"
        },
        {
            "SPDXID": "SPDXRef-Package-cf43422cca7b6c68",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/tools@v0.0.0-20191029190741-b9c20aec41a5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/tools@0.0.0-20191029190741-b9c20aec41a5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/tools",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20191029190741-b9c20aec41a5"
        },
        {
            "SPDXID": "SPDXRef-Package-fa9c700faf1e9b54",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/tools@v0.0.0-20191029190741-b9c20aec41a5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/tools@0.0.0-20191029190741-b9c20aec41a5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/tools",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20191029190741-b9c20aec41a5"
        },
        {
            "SPDXID": "SPDXRef-Package-695412a39bb84809",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/xerrors@v0.0.0-20191204190536-9bdfabe68543"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xerrors implements functions to manipulate errors.\n\nThis package is based on the Go 2 proposal for error values:\n\nhttps://go.dev/design/29934-error-values\n\nThese functions were incorporated into the standard library's errors package\nin Go 1.13:\n- Is\n- As\n- Unwrap\n\nAlso, Errorf's %w verb was incorporated into fmt.Errorf.\n\nNo other features of this package were included in Go 1.13, and at present\nthere are no plans to include any of them.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/xerrors@0.0.0-20191204190536-9bdfabe68543",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/xerrors",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/xerrors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20191204190536-9bdfabe68543"
        },
        {
            "SPDXID": "SPDXRef-Package-76112400e3420a16",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/xerrors@v0.0.0-20191204190536-9bdfabe68543"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xerrors implements functions to manipulate errors.\n\nThis package is based on the Go 2 proposal for error values:\n\nhttps://go.dev/design/29934-error-values\n\nThese functions were incorporated into the standard library's errors package\nin Go 1.13:\n- Is\n- As\n- Unwrap\n\nAlso, Errorf's %w verb was incorporated into fmt.Errorf.\n\nNo other features of this package were included in Go 1.13, and at present\nthere are no plans to include any of them.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/xerrors@0.0.0-20191204190536-9bdfabe68543",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/xerrors",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/xerrors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20191204190536-9bdfabe68543"
        },
        {
            "SPDXID": "SPDXRef-Package-8d91a1d65b93f1a1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/xerrors@v0.0.0-20190717185122-a985d3407aa7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xerrors implements functions to manipulate errors.\n\nThis package is based on the Go 2 proposal for error values:\n\nhttps://go.dev/design/29934-error-values\n\nThese functions were incorporated into the standard library's errors package\nin Go 1.13:\n- Is\n- As\n- Unwrap\n\nAlso, Errorf's %w verb was incorporated into fmt.Errorf.\n\nNo other features of this package were included in Go 1.13, and at present\nthere are no plans to include any of them.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/xerrors@0.0.0-20190717185122-a985d3407aa7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/xerrors",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/xerrors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190717185122-a985d3407aa7"
        },
        {
            "SPDXID": "SPDXRef-Package-d453e378936ce2b7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/xerrors@v0.0.0-20191204190536-9bdfabe68543"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xerrors implements functions to manipulate errors.\n\nThis package is based on the Go 2 proposal for error values:\n\nhttps://go.dev/design/29934-error-values\n\nThese functions were incorporated into the standard library's errors package\nin Go 1.13:\n- Is\n- As\n- Unwrap\n\nAlso, Errorf's %w verb was incorporated into fmt.Errorf.\n\nNo other features of this package were included in Go 1.13, and at present\nthere are no plans to include any of them.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/xerrors@0.0.0-20191204190536-9bdfabe68543",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/xerrors",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/xerrors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/entities/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20191204190536-9bdfabe68543"
        },
        {
            "SPDXID": "SPDXRef-Package-de1b55f03b5dea79",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/xerrors@v0.0.0-20191204190536-9bdfabe68543"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xerrors implements functions to manipulate errors.\n\nThis package is based on the Go 2 proposal for error values:\n\nhttps://go.dev/design/29934-error-values\n\nThese functions were incorporated into the standard library's errors package\nin Go 1.13:\n- Is\n- As\n- Unwrap\n\nAlso, Errorf's %w verb was incorporated into fmt.Errorf.\n\nNo other features of this package were included in Go 1.13, and at present\nthere are no plans to include any of them.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/xerrors@0.0.0-20191204190536-9bdfabe68543",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/xerrors",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/xerrors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-streaming-protobufs/protogen/go/streaming_protobufs/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20191204190536-9bdfabe68543"
        },
        {
            "SPDXID": "SPDXRef-Package-e14968c4b828f956",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/xerrors@v0.0.0-20190717185122-a985d3407aa7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xerrors implements functions to manipulate errors.\n\nThis package is based on the Go 2 proposal for error values:\n\nhttps://go.dev/design/29934-error-values\n\nThese functions were incorporated into the standard library's errors package\nin Go 1.13:\n- Is\n- As\n- Unwrap\n\nAlso, Errorf's %w verb was incorporated into fmt.Errorf.\n\nNo other features of this package were included in Go 1.13, and at present\nthere are no plans to include any of them.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/xerrors@0.0.0-20190717185122-a985d3407aa7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/xerrors",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/xerrors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190717185122-a985d3407aa7"
        },
        {
            "SPDXID": "SPDXRef-Package-ebdf2d3dc880e69c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/xerrors@v0.0.0-20190717185122-a985d3407aa7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xerrors implements functions to manipulate errors.\n\nThis package is based on the Go 2 proposal for error values:\n\nhttps://go.dev/design/29934-error-values\n\nThese functions were incorporated into the standard library's errors package\nin Go 1.13:\n- Is\n- As\n- Unwrap\n\nAlso, Errorf's %w verb was incorporated into fmt.Errorf.\n\nNo other features of this package were included in Go 1.13, and at present\nthere are no plans to include any of them.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/xerrors@0.0.0-20190717185122-a985d3407aa7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/xerrors",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/xerrors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190717185122-a985d3407aa7"
        },
        {
            "SPDXID": "SPDXRef-Package-f579bc899292e0fb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/xerrors@v0.0.0-20190717185122-a985d3407aa7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xerrors implements functions to manipulate errors.\n\nThis package is based on the Go 2 proposal for error values:\n\nhttps://go.dev/design/29934-error-values\n\nThese functions were incorporated into the standard library's errors package\nin Go 1.13:\n- Is\n- As\n- Unwrap\n\nAlso, Errorf's %w verb was incorporated into fmt.Errorf.\n\nNo other features of this package were included in Go 1.13, and at present\nthere are no plans to include any of them.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/xerrors@0.0.0-20190717185122-a985d3407aa7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/xerrors",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/xerrors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20190717185122-a985d3407aa7"
        },
        {
            "SPDXID": "SPDXRef-Package-f71956ee78e6c853",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/xerrors@v0.0.0-20191204190536-9bdfabe68543"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xerrors implements functions to manipulate errors.\n\nThis package is based on the Go 2 proposal for error values:\n\nhttps://go.dev/design/29934-error-values\n\nThese functions were incorporated into the standard library's errors package\nin Go 1.13:\n- Is\n- As\n- Unwrap\n\nAlso, Errorf's %w verb was incorporated into fmt.Errorf.\n\nNo other features of this package were included in Go 1.13, and at present\nthere are no plans to include any of them.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/xerrors@0.0.0-20191204190536-9bdfabe68543",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/xerrors",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/xerrors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20191204190536-9bdfabe68543"
        },
        {
            "SPDXID": "SPDXRef-Package-7830ca0ecb0aa93d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gomodules.xyz/jsonpatch/v2@v2.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gomodules.xyz/jsonpatch/v2@2.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gomodules/jsonpatch",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gomodules.xyz/jsonpatch/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: gomodules",
            "versionInfo": "2.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8d6a525f0afb3f46",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gomodules.xyz/jsonpatch/v2@v2.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gomodules.xyz/jsonpatch/v2@2.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gomodules/jsonpatch",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gomodules.xyz/jsonpatch/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: gomodules",
            "versionInfo": "2.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-34eac87030739a8f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/appengine@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package appengine provides basic functionality for Google App Engine.\n\nFor more information on how to write Go apps for Google App Engine, see:\nhttps://cloud.google.com/appengine/docs/go/",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/appengine@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/appengine",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/appengine",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-55d93aa83f50508e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/appengine@v1.6.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package appengine provides basic functionality for Google App Engine.\n\nFor more information on how to write Go apps for Google App Engine, see:\nhttps://cloud.google.com/appengine/docs/go/",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/appengine@1.6.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/appengine",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/appengine",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.6.7"
        },
        {
            "SPDXID": "SPDXRef-Package-5a8a56c91fb40b37",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/appengine@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package appengine provides basic functionality for Google App Engine.\n\nFor more information on how to write Go apps for Google App Engine, see:\nhttps://cloud.google.com/appengine/docs/go/",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/appengine@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/appengine",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/appengine",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5bdda5de6bc63b8d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/appengine@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package appengine provides basic functionality for Google App Engine.\n\nFor more information on how to write Go apps for Google App Engine, see:\nhttps://cloud.google.com/appengine/docs/go/",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/appengine@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/appengine",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/appengine",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-74981515c64ca3fc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/appengine@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package appengine provides basic functionality for Google App Engine.\n\nFor more information on how to write Go apps for Google App Engine, see:\nhttps://cloud.google.com/appengine/docs/go/",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/appengine@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/appengine",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/appengine",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-adb038ec58c86d14",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/appengine@v1.6.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package appengine provides basic functionality for Google App Engine.\n\nFor more information on how to write Go apps for Google App Engine, see:\nhttps://cloud.google.com/appengine/docs/go/",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/appengine@1.6.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/appengine",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/appengine",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.6.7"
        },
        {
            "SPDXID": "SPDXRef-Package-adc6e2f02be972bd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/appengine@v1.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package appengine provides basic functionality for Google App Engine.\n\nFor more information on how to write Go apps for Google App Engine, see:\nhttps://cloud.google.com/appengine/docs/go/",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/appengine@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/appengine",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/appengine",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b5a2f4c54dcfbc42",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/appengine@v1.6.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package appengine provides basic functionality for Google App Engine.\n\nFor more information on how to write Go apps for Google App Engine, see:\nhttps://cloud.google.com/appengine/docs/go/",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/appengine@1.6.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/appengine",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/appengine",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.6.7"
        },
        {
            "SPDXID": "SPDXRef-Package-258b72fb2271eae6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/genproto@v0.0.0-20180817151627-c66870c02cf8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/genproto@0.0.0-20180817151627-c66870c02cf8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/go-genproto",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/genproto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.0.0-20180817151627-c66870c02cf8"
        },
        {
            "SPDXID": "SPDXRef-Package-2ea5f25bd4a955ee",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/genproto@v0.0.0-20180817151627-c66870c02cf8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/genproto@0.0.0-20180817151627-c66870c02cf8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/go-genproto",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/genproto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.0.0-20180817151627-c66870c02cf8"
        },
        {
            "SPDXID": "SPDXRef-Package-4ae43d25f0c055fe",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/genproto@v0.0.0-20221227171554-f9683d7f8bef"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/genproto@0.0.0-20221227171554-f9683d7f8bef",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/go-genproto",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/genproto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.0.0-20221227171554-f9683d7f8bef"
        },
        {
            "SPDXID": "SPDXRef-Package-4fb0e67f633ce1ee",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/genproto@v0.0.0-20220502173005-c8bf987b8c21"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/genproto@0.0.0-20220502173005-c8bf987b8c21",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/go-genproto",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/genproto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.0.0-20220502173005-c8bf987b8c21"
        },
        {
            "SPDXID": "SPDXRef-Package-a5e42569089d075",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/genproto@v0.0.0-20180817151627-c66870c02cf8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/genproto@0.0.0-20180817151627-c66870c02cf8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/go-genproto",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/genproto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.0.0-20180817151627-c66870c02cf8"
        },
        {
            "SPDXID": "SPDXRef-Package-b0d56706bf151bc0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/genproto@v0.0.0-20180817151627-c66870c02cf8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/genproto@0.0.0-20180817151627-c66870c02cf8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/go-genproto",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/genproto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.0.0-20180817151627-c66870c02cf8"
        },
        {
            "SPDXID": "SPDXRef-Package-b3fcc2b6832c01f2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/genproto@v0.0.0-20180817151627-c66870c02cf8"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/genproto@0.0.0-20180817151627-c66870c02cf8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/go-genproto",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/genproto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.0.0-20180817151627-c66870c02cf8"
        },
        {
            "SPDXID": "SPDXRef-Package-11860817373fd5a7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/grpc@v1.21.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package grpc implements an RPC system called gRPC.\n\nSee grpc.io for more information about gRPC.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/grpc@1.21.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc/grpc-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/grpc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: grpc",
            "versionInfo": "1.21.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3b34c76798023831",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/grpc@v1.21.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package grpc implements an RPC system called gRPC.\n\nSee grpc.io for more information about gRPC.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/grpc@1.21.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc/grpc-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/grpc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: grpc",
            "versionInfo": "1.21.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3df42375e50b2c36",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/grpc@v1.47.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package grpc implements an RPC system called gRPC.\n\nSee grpc.io for more information about gRPC.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/grpc@1.47.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc/grpc-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/grpc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: grpc",
            "versionInfo": "1.47.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a3e5cd6a8f0d7a9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/grpc@v1.21.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package grpc implements an RPC system called gRPC.\n\nSee grpc.io for more information about gRPC.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/grpc@1.21.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc/grpc-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/grpc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: grpc",
            "versionInfo": "1.21.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a555ed29e4a6ed1b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/grpc@v1.21.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package grpc implements an RPC system called gRPC.\n\nSee grpc.io for more information about gRPC.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/grpc@1.21.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc/grpc-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/grpc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: grpc",
            "versionInfo": "1.21.0"
        },
        {
            "SPDXID": "SPDXRef-Package-eee6c9b9253e75dc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/grpc@v1.52.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package grpc implements an RPC system called gRPC.\n\nSee grpc.io for more information about gRPC.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/grpc@1.52.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc/grpc-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/grpc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: grpc",
            "versionInfo": "1.52.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f7f4685207e9e24b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/grpc@v1.21.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package grpc implements an RPC system called gRPC.\n\nSee grpc.io for more information about gRPC.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/grpc@1.21.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc/grpc-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/grpc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: grpc",
            "versionInfo": "1.21.0"
        },
        {
            "SPDXID": "SPDXRef-Package-22fe43f4db149634",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.26.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-31dda64544c1cda4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.23.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.23.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.23.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4088ea23cd83dc15",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.23.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.23.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.23.0"
        },
        {
            "SPDXID": "SPDXRef-Package-46d047b6a1c22787",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.23.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.23.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.23.0"
        },
        {
            "SPDXID": "SPDXRef-Package-59c71df68b5482b3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.21.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.21.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-streaming-protobufs/protogen/go/streaming_protobufs/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.21.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7a00ae32cb119527",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.30.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.30.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.30.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9c5bd3df9de0bd4b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.23.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.23.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.23.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9d3c2615d73e1f81",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.30.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.30.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.30.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b855b617f5caf4f9",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.23.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.23.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/reader/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.23.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bc92418a6abd65e2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.23.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.23.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.23.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d3a524edf1b4bc71",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.30.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.30.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.30.0"
        },
        {
            "SPDXID": "SPDXRef-Package-dd157e6ee26504a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.23.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.23.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/entities/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.23.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e6b816de69987864",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.23.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.23.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-nodeb-rnib/creader/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.23.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e8f57d97dfd07db2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.30.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.30.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.30.0"
        },
        {
            "SPDXID": "SPDXRef-Package-eda1786878049bb7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.28.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.28.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.28.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fe4d902e0ec06e30",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.30.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.30.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.30.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6b30fc54f933a5ed",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/alecthomas/kingpin.v2@v2.2.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package kingpin provides command line interfaces like this:\n\nFrom code like this:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/alecthomas/kingpin.v2@2.2.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/kingpin",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "gopkg.in/alecthomas/kingpin.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "2.2.6"
        },
        {
            "SPDXID": "SPDXRef-Package-761de74b5d882a4d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/alecthomas/kingpin.v2@v2.2.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package kingpin provides command line interfaces like this:\n\nFrom code like this:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/alecthomas/kingpin.v2@2.2.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/kingpin",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "gopkg.in/alecthomas/kingpin.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "2.2.6"
        },
        {
            "SPDXID": "SPDXRef-Package-8aab264952e1252b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/alecthomas/kingpin.v2@v2.2.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package kingpin provides command line interfaces like this:\n\nFrom code like this:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/alecthomas/kingpin.v2@2.2.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/kingpin",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "gopkg.in/alecthomas/kingpin.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "2.2.6"
        },
        {
            "SPDXID": "SPDXRef-Package-da3888a8702d744b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/alecthomas/kingpin.v2@v2.2.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package kingpin provides command line interfaces like this:\n\nFrom code like this:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/alecthomas/kingpin.v2@2.2.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/kingpin",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "gopkg.in/alecthomas/kingpin.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "2.2.6"
        },
        {
            "SPDXID": "SPDXRef-Package-ee9828382ba2b254",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/alecthomas/kingpin.v2@v2.2.6"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package kingpin provides command line interfaces like this:\n\nFrom code like this:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/alecthomas/kingpin.v2@2.2.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/alecthomas/kingpin",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "gopkg.in/alecthomas/kingpin.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Alec Thomas",
            "versionInfo": "2.2.6"
        },
        {
            "SPDXID": "SPDXRef-Package-40c9a4656bb88358",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/check.v1@v1.0.0-20180628173108-788fd7840127"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package check is a rich testing extension for Go's testing package.\n\nFor details about the project, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/check.v1@1.0.0-20180628173108-788fd7840127",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-check/check",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "gopkg.in/check.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: go-check",
            "versionInfo": "1.0.0-20180628173108-788fd7840127"
        },
        {
            "SPDXID": "SPDXRef-Package-47ad86849dadb469",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/check.v1@v1.0.0-20180628173108-788fd7840127"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package check is a rich testing extension for Go's testing package.\n\nFor details about the project, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/check.v1@1.0.0-20180628173108-788fd7840127",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-check/check",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "gopkg.in/check.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: go-check",
            "versionInfo": "1.0.0-20180628173108-788fd7840127"
        },
        {
            "SPDXID": "SPDXRef-Package-519313fd4b445224",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/check.v1@v1.0.0-20180628173108-788fd7840127"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package check is a rich testing extension for Go's testing package.\n\nFor details about the project, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/check.v1@1.0.0-20180628173108-788fd7840127",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-check/check",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "gopkg.in/check.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: go-check",
            "versionInfo": "1.0.0-20180628173108-788fd7840127"
        },
        {
            "SPDXID": "SPDXRef-Package-5c408f20a2afde40",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/check.v1@v1.0.0-20190902080502-41f04d3bba15"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package check is a rich testing extension for Go's testing package.\n\nFor details about the project, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/check.v1@1.0.0-20190902080502-41f04d3bba15",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-check/check",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "gopkg.in/check.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: go-check",
            "versionInfo": "1.0.0-20190902080502-41f04d3bba15"
        },
        {
            "SPDXID": "SPDXRef-Package-8866b85f3e6bb685",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/check.v1@v1.0.0-20180628173108-788fd7840127"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package check is a rich testing extension for Go's testing package.\n\nFor details about the project, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/check.v1@1.0.0-20180628173108-788fd7840127",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-check/check",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "gopkg.in/check.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: go-check",
            "versionInfo": "1.0.0-20180628173108-788fd7840127"
        },
        {
            "SPDXID": "SPDXRef-Package-bb21ebea708be18",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/check.v1@v1.0.0-20180628173108-788fd7840127"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package check is a rich testing extension for Go's testing package.\n\nFor details about the project, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/check.v1@1.0.0-20180628173108-788fd7840127",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-check/check",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "gopkg.in/check.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: go-check",
            "versionInfo": "1.0.0-20180628173108-788fd7840127"
        },
        {
            "SPDXID": "SPDXRef-Package-d9df5f6bfadf34cf",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/check.v1@v1.0.0-20180628173108-788fd7840127"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package check is a rich testing extension for Go's testing package.\n\nFor details about the project, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/check.v1@1.0.0-20180628173108-788fd7840127",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-check/check",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "gopkg.in/check.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: go-check",
            "versionInfo": "1.0.0-20180628173108-788fd7840127"
        },
        {
            "SPDXID": "SPDXRef-Package-f0ea4036bad524f3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/check.v1@v1.0.0-20180628173108-788fd7840127"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package check is a rich testing extension for Go's testing package.\n\nFor details about the project, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/check.v1@1.0.0-20180628173108-788fd7840127",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-check/check",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "gopkg.in/check.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: go-check",
            "versionInfo": "1.0.0-20180628173108-788fd7840127"
        },
        {
            "SPDXID": "SPDXRef-Package-f6698e0ac6ce7f2e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/check.v1@v1.0.0-20190902080502-41f04d3bba15"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package check is a rich testing extension for Go's testing package.\n\nFor details about the project, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/check.v1@1.0.0-20190902080502-41f04d3bba15",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-check/check",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "gopkg.in/check.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: go-check",
            "versionInfo": "1.0.0-20190902080502-41f04d3bba15"
        },
        {
            "SPDXID": "SPDXRef-Package-211fc59314df5310",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/errgo.v2@v2.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/errgo.v2@2.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-errgo/errgo",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/errgo.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: go-errgo",
            "versionInfo": "2.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a36b97cb7955299",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/errgo.v2@v2.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/errgo.v2@2.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-errgo/errgo",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/errgo.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: go-errgo",
            "versionInfo": "2.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-be8b74a0ebfb91f0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/errgo.v2@v2.1.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/errgo.v2@2.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-errgo/errgo",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/errgo.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: go-errgo",
            "versionInfo": "2.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3717c440755f8ccc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/fsnotify.v1@v1.4.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a platform-independent interface for file system notifications.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/fsnotify.v1@1.4.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/fsnotify.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.7"
        },
        {
            "SPDXID": "SPDXRef-Package-bf1564cecdb0cdc2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/fsnotify.v1@v1.4.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a platform-independent interface for file system notifications.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/fsnotify.v1@1.4.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/fsnotify.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.7"
        },
        {
            "SPDXID": "SPDXRef-Package-ca16529ae2f3d0d4",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/fsnotify.v1@v1.4.7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a platform-independent interface for file system notifications.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/fsnotify.v1@1.4.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/fsnotify.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.4.7"
        },
        {
            "SPDXID": "SPDXRef-Package-2d823aa96682d86d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/inf.v0@v0.9.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package inf (type inf.Dec) implements \"infinite-precision\" decimal\narithmetic.\n\"Infinite precision\" describes two characteristics: practically unlimited\nprecision for decimal number representation and no support for calculating\nwith any specific fixed precision.\n(Although there is no practical limit on precision, inf.Dec can only\nrepresent finite decimals.)\n\nThis package is currently in experimental stage and the API may change.\n\nThis package does NOT support:\n\nFeatures considered for possible addition:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/inf.v0@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-inf/inf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/inf.v0",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: go-inf",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-59a0be9a27cc847e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/inf.v0@v0.9.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package inf (type inf.Dec) implements \"infinite-precision\" decimal\narithmetic.\n\"Infinite precision\" describes two characteristics: practically unlimited\nprecision for decimal number representation and no support for calculating\nwith any specific fixed precision.\n(Although there is no practical limit on precision, inf.Dec can only\nrepresent finite decimals.)\n\nThis package is currently in experimental stage and the API may change.\n\nThis package does NOT support:\n\nFeatures considered for possible addition:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/inf.v0@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-inf/inf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/inf.v0",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: go-inf",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-efe0c171d67bffc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/inf.v0@v0.9.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package inf (type inf.Dec) implements \"infinite-precision\" decimal\narithmetic.\n\"Infinite precision\" describes two characteristics: practically unlimited\nprecision for decimal number representation and no support for calculating\nwith any specific fixed precision.\n(Although there is no practical limit on precision, inf.Dec can only\nrepresent finite decimals.)\n\nThis package is currently in experimental stage and the API may change.\n\nThis package does NOT support:\n\nFeatures considered for possible addition:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/inf.v0@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-inf/inf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/inf.v0",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: go-inf",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-2c13896043007a9f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/ini.v1@v1.67.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package ini provides INI file read and write functionality in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/ini.v1@1.67.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-ini/ini",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/ini.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: INI",
            "versionInfo": "1.67.0"
        },
        {
            "SPDXID": "SPDXRef-Package-35ffe15ba58392bd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/ini.v1@v1.67.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package ini provides INI file read and write functionality in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/ini.v1@1.67.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-ini/ini",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/ini.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: INI",
            "versionInfo": "1.67.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4d3bbcba199abae6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/ini.v1@v1.67.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package ini provides INI file read and write functionality in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/ini.v1@1.67.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-ini/ini",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/ini.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: INI",
            "versionInfo": "1.67.0"
        },
        {
            "SPDXID": "SPDXRef-Package-75acc32f617d3a63",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/ini.v1@v1.51.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package ini provides INI file read and write functionality in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/ini.v1@1.51.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-ini/ini",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/ini.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: INI",
            "versionInfo": "1.51.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ebbc74571fbb8fa0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/ini.v1@v1.51.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package ini provides INI file read and write functionality in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/ini.v1@1.51.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-ini/ini",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/ini.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: INI",
            "versionInfo": "1.51.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ebf9c6caadca0ed3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/ini.v1@v1.51.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package ini provides INI file read and write functionality in Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/ini.v1@1.51.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-ini/ini",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/ini.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: INI",
            "versionInfo": "1.51.0"
        },
        {
            "SPDXID": "SPDXRef-Package-26f09fa7cb728fc5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/resty.v1@v1.12.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package resty provides Simple HTTP and REST client library for Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/resty.v1@1.12.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-resty/resty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "gopkg.in/resty.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Go Resty",
            "versionInfo": "1.12.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4c7e2d70fd16af80",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/resty.v1@v1.12.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package resty provides Simple HTTP and REST client library for Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/resty.v1@1.12.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-resty/resty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "gopkg.in/resty.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Go Resty",
            "versionInfo": "1.12.0"
        },
        {
            "SPDXID": "SPDXRef-Package-517e6c2936c20afa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/resty.v1@v1.12.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package resty provides Simple HTTP and REST client library for Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/resty.v1@1.12.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-resty/resty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "gopkg.in/resty.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Go Resty",
            "versionInfo": "1.12.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b62a7f4754da4514",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/resty.v1@v1.12.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package resty provides Simple HTTP and REST client library for Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/resty.v1@1.12.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-resty/resty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "gopkg.in/resty.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Go Resty",
            "versionInfo": "1.12.0"
        },
        {
            "SPDXID": "SPDXRef-Package-df7d6bc498fbf053",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/resty.v1@v1.12.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package resty provides Simple HTTP and REST client library for Go.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/resty.v1@1.12.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-resty/resty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "gopkg.in/resty.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Go Resty",
            "versionInfo": "1.12.0"
        },
        {
            "SPDXID": "SPDXRef-Package-660c43498f9e46e7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/tomb.v1@v1.0.0-20141024135613-dd632973f1e7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "The tomb package offers a conventional API for clean goroutine termination.\n\nA Tomb tracks the lifecycle of a goroutine as alive, dying or dead,\nand the reason for its death.\n\nThe zero value of a Tomb assumes that a goroutine is about to be\ncreated or already alive. Once Kill or Killf is called with an\nargument that informs the reason for death, the goroutine is in\na dying state and is expected to terminate soon. Right before the\ngoroutine function or method returns, Done must be called to inform\nthat the goroutine is indeed dead and about to stop running.\n\nA Tomb exposes Dying and Dead channels. These channels are closed\nwhen the Tomb state changes in the respective way. They enable\nexplicit blocking until the state changes, and also to selectively\nunblock select statements accordingly.\n\nWhen the tomb state changes to dying and there's still logic going\non within the goroutine, nested functions and methods may choose to\nreturn ErrDying as their error value, as this error won't alter the\ntomb state if provided to the Kill method. This is a convenient way to\nfollow standard Go practices in the context of a dying tomb.\n\nFor background and a detailed example, see the following blog post:\n\nFor a more complex code snippet demonstrating the use of multiple\ngoroutines with a single Tomb, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/tomb.v1@1.0.0-20141024135613-dd632973f1e7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-tomb/tomb",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/tomb.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0-20141024135613-dd632973f1e7"
        },
        {
            "SPDXID": "SPDXRef-Package-96af5434000ff403",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/tomb.v1@v1.0.0-20141024135613-dd632973f1e7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "The tomb package offers a conventional API for clean goroutine termination.\n\nA Tomb tracks the lifecycle of a goroutine as alive, dying or dead,\nand the reason for its death.\n\nThe zero value of a Tomb assumes that a goroutine is about to be\ncreated or already alive. Once Kill or Killf is called with an\nargument that informs the reason for death, the goroutine is in\na dying state and is expected to terminate soon. Right before the\ngoroutine function or method returns, Done must be called to inform\nthat the goroutine is indeed dead and about to stop running.\n\nA Tomb exposes Dying and Dead channels. These channels are closed\nwhen the Tomb state changes in the respective way. They enable\nexplicit blocking until the state changes, and also to selectively\nunblock select statements accordingly.\n\nWhen the tomb state changes to dying and there's still logic going\non within the goroutine, nested functions and methods may choose to\nreturn ErrDying as their error value, as this error won't alter the\ntomb state if provided to the Kill method. This is a convenient way to\nfollow standard Go practices in the context of a dying tomb.\n\nFor background and a detailed example, see the following blog post:\n\nFor a more complex code snippet demonstrating the use of multiple\ngoroutines with a single Tomb, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/tomb.v1@1.0.0-20141024135613-dd632973f1e7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-tomb/tomb",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/tomb.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0-20141024135613-dd632973f1e7"
        },
        {
            "SPDXID": "SPDXRef-Package-e2d9d5346e0ba47e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/tomb.v1@v1.0.0-20141024135613-dd632973f1e7"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "The tomb package offers a conventional API for clean goroutine termination.\n\nA Tomb tracks the lifecycle of a goroutine as alive, dying or dead,\nand the reason for its death.\n\nThe zero value of a Tomb assumes that a goroutine is about to be\ncreated or already alive. Once Kill or Killf is called with an\nargument that informs the reason for death, the goroutine is in\na dying state and is expected to terminate soon. Right before the\ngoroutine function or method returns, Done must be called to inform\nthat the goroutine is indeed dead and about to stop running.\n\nA Tomb exposes Dying and Dead channels. These channels are closed\nwhen the Tomb state changes in the respective way. They enable\nexplicit blocking until the state changes, and also to selectively\nunblock select statements accordingly.\n\nWhen the tomb state changes to dying and there's still logic going\non within the goroutine, nested functions and methods may choose to\nreturn ErrDying as their error value, as this error won't alter the\ntomb state if provided to the Kill method. This is a convenient way to\nfollow standard Go practices in the context of a dying tomb.\n\nFor background and a detailed example, see the following blog post:\n\nFor a more complex code snippet demonstrating the use of multiple\ngoroutines with a single Tomb, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/tomb.v1@1.0.0-20141024135613-dd632973f1e7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-tomb/tomb",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/tomb.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0-20141024135613-dd632973f1e7"
        },
        {
            "SPDXID": "SPDXRef-Package-125b9fed850cb164",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-367ec572a088ed2f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.2.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.2.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.2.4"
        },
        {
            "SPDXID": "SPDXRef-Package-3a872b38355f5465",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-446a9b0b615f43b2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-44f35d87c75f3815",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-60e2dcc50dda4463",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-781a8db67562bfca",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7b0dc7b212c56439",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/alarm/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-7c427cd7e2ebe5fc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-81a5677a1f82a9de",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-835c90f4ad209b74",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.2.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: com-golog/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-83ffbfd42804fa68",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8758a2fec5f4d8c7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9297d95748ddc16c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a1e3c00dfa9ef3a3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.2.4"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.2.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.2.4"
        },
        {
            "SPDXID": "SPDXRef-Package-b8f24496efbb1ffc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlgo/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c6e9168ab2bef408",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-cc864f978c6635ce",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d5b4e02a0c27f6a7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e823c9843ad10b63",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.4.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-f6bed27947014a29",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1d519d9505d6475b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 AND MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4c2ee5a2b5b7bb9b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.0-20200313102051-9f266ea9e77c"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.0-20200313102051-9f266ea9e77c",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.0-20200313102051-9f266ea9e77c"
        },
        {
            "SPDXID": "SPDXRef-Package-5d0a7c1fd6d080ad",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 AND MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-8852daaf163f4127",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.0-20200615113413-eeeca48fe776"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.0-20200615113413-eeeca48fe776",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.0-20200615113413-eeeca48fe776"
        },
        {
            "SPDXID": "SPDXRef-Package-8af44b0959a94c7e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 AND MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a244a1b8551e827d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 AND MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-ccbda6042f7a0a51",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.0-20200313102051-9f266ea9e77c"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.0-20200313102051-9f266ea9e77c",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.0-20200313102051-9f266ea9e77c"
        },
        {
            "SPDXID": "SPDXRef-Package-cdba7439c0975027",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 AND MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d14208c6e452a53b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 AND MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-1da1d00b0e2e96fd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: helm.sh/helm/v3@v3.10.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/helm.sh/helm/v3@3.10.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/helm/helm",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "helm.sh/helm/v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: The Helm Project",
            "versionInfo": "3.10.1"
        },
        {
            "SPDXID": "SPDXRef-Package-6df49ad18d21d6fa",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: honnef.co/go/tools@v0.0.0-20190102054323-c2f93a96b099"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/honnef.co/go/tools@0.0.0-20190102054323-c2f93a96b099",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dominikh/go-tools",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "honnef.co/go/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Dominik Honnef",
            "versionInfo": "0.0.0-20190102054323-c2f93a96b099"
        },
        {
            "SPDXID": "SPDXRef-Package-7e8e1d53cce7aa82",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: honnef.co/go/tools@v0.0.1-2019.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/honnef.co/go/tools@0.0.1-2019.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dominikh/go-tools",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "honnef.co/go/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "Organization: Dominik Honnef",
            "versionInfo": "0.0.1-2019.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-832021b617d752e6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: honnef.co/go/tools@v0.0.1-2019.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/honnef.co/go/tools@0.0.1-2019.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dominikh/go-tools",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "honnef.co/go/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "Organization: Dominik Honnef",
            "versionInfo": "0.0.1-2019.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-cf15a445f1dc08d8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: honnef.co/go/tools@v0.0.0-20190102054323-c2f93a96b099"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/honnef.co/go/tools@0.0.0-20190102054323-c2f93a96b099",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dominikh/go-tools",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "honnef.co/go/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Dominik Honnef",
            "versionInfo": "0.0.0-20190102054323-c2f93a96b099"
        },
        {
            "SPDXID": "SPDXRef-Package-ec9ad43d4627a1f3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: honnef.co/go/tools@v0.0.0-20190102054323-c2f93a96b099"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/honnef.co/go/tools@0.0.0-20190102054323-c2f93a96b099",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dominikh/go-tools",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "honnef.co/go/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Dominik Honnef",
            "versionInfo": "0.0.0-20190102054323-c2f93a96b099"
        },
        {
            "SPDXID": "SPDXRef-Package-feff4526872a19f5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: honnef.co/go/tools@v0.0.1-2019.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/honnef.co/go/tools@0.0.1-2019.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/dominikh/go-tools",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "honnef.co/go/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "Organization: Dominik Honnef",
            "versionInfo": "0.0.1-2019.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-5d431f9f8df0cffc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Internationalized Domain Names in Applications (IDNA)",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/idna@2.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "idna",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Kim Davies",
            "versionInfo": "2.9"
        },
        {
            "SPDXID": "SPDXRef-Package-d350bcf2686aaefe",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Read metadata from Python packages",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/importlib-metadata@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "importlib-metadata",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Python",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1d6e9c493e552306",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Safely pass data to untrusted environments and back.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/itsdangerous@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "itsdangerous",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Pallets",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-dd40c1aa7e443ad0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "An implementation of JSON Schema validation for Python",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/jsonschema@3.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/python-jsonschema/jsonschema",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "jsonschema",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Python + JSON Schema",
            "versionInfo": "3.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-46792c8eb236342a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/api@v0.27.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/api@0.27.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/api",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/api",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.27.2"
        },
        {
            "SPDXID": "SPDXRef-Package-53c7b2c90051a06",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/api@v0.27.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/api@0.27.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/api",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/api",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.27.2"
        },
        {
            "SPDXID": "SPDXRef-Package-8f768d74ca17c8ce",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/api@v0.25.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/api@0.25.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/api",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/api",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.25.2"
        },
        {
            "SPDXID": "SPDXRef-Package-43e81cd0ffe0e096",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/apiextensions-apiserver@v0.27.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/apiextensions-apiserver@0.27.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/apiextensions-apiserver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/apiextensions-apiserver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.27.2"
        },
        {
            "SPDXID": "SPDXRef-Package-729f6f7753f21a77",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/apiextensions-apiserver@v0.27.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/apiextensions-apiserver@0.27.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/apiextensions-apiserver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/apiextensions-apiserver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.27.2"
        },
        {
            "SPDXID": "SPDXRef-Package-842760e1cb7cfab1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/apiextensions-apiserver@v0.25.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/apiextensions-apiserver@0.25.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/apiextensions-apiserver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/apiextensions-apiserver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.25.2"
        },
        {
            "SPDXID": "SPDXRef-Package-258484a05e112a25",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/apimachinery@v0.25.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/apimachinery@0.25.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/apimachinery",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/apimachinery",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.25.2"
        },
        {
            "SPDXID": "SPDXRef-Package-3a229054a21f4521",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/apimachinery@v0.27.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/apimachinery@0.27.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/apimachinery",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/apimachinery",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.27.2"
        },
        {
            "SPDXID": "SPDXRef-Package-a3767c586bdd5264",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/apimachinery@v0.27.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/apimachinery@0.27.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/apimachinery",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/apimachinery",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.27.2"
        },
        {
            "SPDXID": "SPDXRef-Package-812a22fc3ef9b78c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/apiserver@v0.25.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/apiserver@0.25.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/apiserver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/apiserver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.25.2"
        },
        {
            "SPDXID": "SPDXRef-Package-d06b2bc7c98208ae",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/cli-runtime@v0.25.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/cli-runtime@0.25.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/cli-runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/cli-runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.25.2"
        },
        {
            "SPDXID": "SPDXRef-Package-23aae5fac8ffcbe6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/client-go@v0.25.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/client-go@0.25.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/client-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/client-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.25.2"
        },
        {
            "SPDXID": "SPDXRef-Package-2fc8559bc3336cb3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/client-go@v0.27.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/client-go@0.27.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/client-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/client-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.27.2"
        },
        {
            "SPDXID": "SPDXRef-Package-bc594ae11ed4cc10",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/client-go@v0.27.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/client-go@0.27.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/client-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/client-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.27.2"
        },
        {
            "SPDXID": "SPDXRef-Package-1127d4557957e1f0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/component-base@v0.27.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/component-base@0.27.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/component-base",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/component-base",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.27.2"
        },
        {
            "SPDXID": "SPDXRef-Package-76178d2cc5855394",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/component-base@v0.25.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/component-base@0.25.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/component-base",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/component-base",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.25.2"
        },
        {
            "SPDXID": "SPDXRef-Package-ad35e37328fe84e5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/component-base@v0.27.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/component-base@0.27.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/component-base",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/component-base",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.27.2"
        },
        {
            "SPDXID": "SPDXRef-Package-268f99debd8b1ff5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/klog/v2@v2.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package klog contains the following functionality:\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to standard error.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/klog/v2@2.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/klog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/klog/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "2.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-29a1588123edbebd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/klog/v2@v2.70.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package klog contains the following functionality:\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to standard error.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/klog/v2@2.70.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/klog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/klog/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "2.70.1"
        },
        {
            "SPDXID": "SPDXRef-Package-389d4add748fa23f",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/klog/v2@v2.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package klog contains the following functionality:\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to standard error.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/klog/v2@2.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/klog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/klog/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "2.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-440f0d2248427c9e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/klog/v2@v2.90.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package klog contains the following functionality:\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to standard error.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/klog/v2@2.90.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/klog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/klog/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "2.90.1"
        },
        {
            "SPDXID": "SPDXRef-Package-981aaa1ebedd8d92",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/klog/v2@v2.90.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package klog contains the following functionality:\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to standard error.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/klog/v2@2.90.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/klog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/klog/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "2.90.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d5ef63816e4b5eb6",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/klog/v2@v2.0.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package klog contains the following functionality:\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to standard error.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/klog/v2@2.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/klog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/klog/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "2.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7f76746accdeb823",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/kube-openapi@v0.0.0-20220803162953-67bda5d908f1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/kube-openapi@0.0.0-20220803162953-67bda5d908f1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/kube-openapi",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/kube-openapi",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20220803162953-67bda5d908f1"
        },
        {
            "SPDXID": "SPDXRef-Package-ce88a3834e870fbc",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/kube-openapi@v0.0.0-20230501164219-8b0f38b5fd1f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/kube-openapi@0.0.0-20230501164219-8b0f38b5fd1f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/kube-openapi",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/kube-openapi",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20230501164219-8b0f38b5fd1f"
        },
        {
            "SPDXID": "SPDXRef-Package-f39daee13f82d1ca",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/kube-openapi@v0.0.0-20230501164219-8b0f38b5fd1f"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/kube-openapi@0.0.0-20230501164219-8b0f38b5fd1f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/kube-openapi",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/kube-openapi",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20230501164219-8b0f38b5fd1f"
        },
        {
            "SPDXID": "SPDXRef-Package-b2cb3092c1591a17",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/kubectl@v0.25.2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/kubectl@0.25.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/kubectl",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/kubectl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.25.2"
        },
        {
            "SPDXID": "SPDXRef-Package-12e5ae33c1fd960a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20230209194617-a36077c30491"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20230209194617-a36077c30491",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20230209194617-a36077c30491"
        },
        {
            "SPDXID": "SPDXRef-Package-2ffc910b9931f9e1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20201110183641-67b214c5f920"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20201110183641-67b214c5f920",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-vespamgr/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20201110183641-67b214c5f920"
        },
        {
            "SPDXID": "SPDXRef-Package-47c6a1db94ca5a8e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20210930125809-cb0fa318a74b"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20210930125809-cb0fa318a74b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-a1/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20210930125809-cb0fa318a74b"
        },
        {
            "SPDXID": "SPDXRef-Package-60fe936a2cb2227b",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20220812165043-ad590609e2e5"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20220812165043-ad590609e2e5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20220812165043-ad590609e2e5"
        },
        {
            "SPDXID": "SPDXRef-Package-707147c689507a07",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20230313181309-38a27ef9d749"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20230313181309-38a27ef9d749",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: com-golog/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20230313181309-38a27ef9d749"
        },
        {
            "SPDXID": "SPDXRef-Package-74b93425c64fd8a3",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20201110183641-67b214c5f920"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20201110183641-67b214c5f920",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-o1/agent/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20201110183641-67b214c5f920"
        },
        {
            "SPDXID": "SPDXRef-Package-76a9caef0516b586",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20230505201702-9f6742963106"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20230505201702-9f6742963106",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20230505201702-9f6742963106"
        },
        {
            "SPDXID": "SPDXRef-Package-860037d79c7811b0",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20210527160623-6fdb442a123b"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20210527160623-6fdb442a123b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20210527160623-6fdb442a123b"
        },
        {
            "SPDXID": "SPDXRef-Package-8a7a5270ff48804",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20201110183641-67b214c5f920"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20201110183641-67b214c5f920",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-xapp-frame/examples/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20201110183641-67b214c5f920"
        },
        {
            "SPDXID": "SPDXRef-Package-ac6bebd6dc76220d",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20201110183641-67b214c5f920"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20201110183641-67b214c5f920",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20201110183641-67b214c5f920"
        },
        {
            "SPDXID": "SPDXRef-Package-bd73956f7a6b98e2",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20230209194617-a36077c30491"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20230209194617-a36077c30491",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20230209194617-a36077c30491"
        },
        {
            "SPDXID": "SPDXRef-Package-c553a55958270424",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20201110183641-67b214c5f920"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20201110183641-67b214c5f920",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-submgr/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20201110183641-67b214c5f920"
        },
        {
            "SPDXID": "SPDXRef-Package-cc2aa26c0ffd4bcb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20230505201702-9f6742963106"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20230505201702-9f6742963106",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-alarm-go/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20230505201702-9f6742963106"
        },
        {
            "SPDXID": "SPDXRef-Package-d5cb82d3b5ae86fb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20230406110748-d93618cff8a2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20230406110748-d93618cff8a2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/E2Manager/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20230406110748-d93618cff8a2"
        },
        {
            "SPDXID": "SPDXRef-Package-f6e209bf357dd528",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20230505201702-9f6742963106"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20230505201702-9f6742963106",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-conflictmgr/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20230505201702-9f6742963106"
        },
        {
            "SPDXID": "SPDXRef-Package-7096a333896e3de1",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: kubsimulator"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/kubsimulator",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "kubsimulator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/KubernetesSimulator/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-f70c7e8a1425ceb7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: oras.land/oras-go@v1.2.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/oras.land/oras-go@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/oras-project/oras-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "oras.land/oras-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: OCI Registry As Storage (ORAS)",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c3fa92dd4f2e5571",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: org.o-ran-sc.ric-plt.ricsdl:ricsdl:0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pom"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:maven/org.o-ran-sc.ric-plt.ricsdl/ricsdl@0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "org.o-ran-sc.ric-plt.ricsdl:ricsdl",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-sdlpy/ricsdl-package/pom.xml",
            "supplier": "NOASSERTION",
            "versionInfo": "0"
        },
        {
            "SPDXID": "SPDXRef-Package-6a43f4981ddefd9a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Persistent/Functional/Immutable data structures",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/pyrsistent@0.15.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/tobgu/pyrsistent/",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "pyrsistent",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Tobias Gustafsson",
            "versionInfo": "0.15.7"
        },
        {
            "SPDXID": "SPDXRef-Package-efe035a36bcd774e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "World timezone definitions, modern and historical",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/pytz@2019.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "http://pythonhosted.org/pytz",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "pytz",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Stub",
            "versionInfo": "2019.3"
        },
        {
            "SPDXID": "SPDXRef-Package-1b198e4674afc668",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Python HTTP for Humans.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/requests@2.31.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://requests.readthedocs.io",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "LicenseRef-Apache-Software-License",
            "name": "requests",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Python Software Foundation",
            "versionInfo": "2.31.0"
        },
        {
            "SPDXID": "SPDXRef-Package-cb83f9f59698dc01",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: ricdeploy"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/ricdeploy",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "ricdeploy",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-8eba896df08a3eab",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: rmsimulator"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/rmsimulator",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "rmsimulator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/RoutingManagerSimulator/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-bcfe63e78237e2e8",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: routing-manager"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/routing-manager",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "routing-manager",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-rtmgr/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-5a99498aa2e8c633",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/controller-runtime@v0.15.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package controllerruntime provides tools to construct Kubernetes-style\ncontrollers that manipulate both Kubernetes CRDs and aggregated/built-in\nKubernetes APIs.\n\nIt defines easy helpers for the common use cases when building CRDs, built\non top of customizable layers of abstraction.  Common cases should be easy,\nand uncommon cases should be possible.  In general, controller-runtime tries\nto guide users towards Kubernetes controller best-practices.\n\nThe main entrypoint for controller-runtime is this root package, which\ncontains all of the common types needed to get started building controllers:\n\nThe examples in this package walk through a basic controller setup.  The\nkubebuilder book (https://book.kubebuilder.io) has some more in-depth\nwalkthroughs.\n\ncontroller-runtime favors structs with sane defaults over constructors, so\nit's fairly common to see structs being used directly in controller-runtime.\n\nA brief-ish walkthrough of the layout of this library can be found below. Each\npackage contains more information about how to use it.\n\nFrequently asked questions about using controller-runtime and designing\ncontrollers can be found at\nhttps://github.com/kubernetes-sigs/controller-runtime/blob/main/FAQ.md.\n\nEvery controller and webhook is ultimately run by a Manager (pkg/manager). A\nmanager is responsible for running controllers and webhooks, and setting up\ncommon dependencies, like shared caches and clients, as\nwell as managing leader election (pkg/leaderelection).  Managers are\ngenerally configured to gracefully shut down controllers on pod termination\nby wiring up a signal handler (pkg/manager/signals).\n\nControllers (pkg/controller) use events (pkg/event) to eventually trigger\nreconcile requests.  They may be constructed manually, but are often\nconstructed with a Builder (pkg/builder), which eases the wiring of event\nsources (pkg/source), like Kubernetes API object changes, to event handlers\n(pkg/handler), like \"enqueue a reconcile request for the object owner\".\nPredicates (pkg/predicate) can be used to filter which events actually\ntrigger reconciles.  There are pre-written utilities for the common cases, and\ninterfaces and helpers for advanced cases.\n\nController logic is implemented in terms of Reconcilers (pkg/reconcile).  A\nReconciler implements a function which takes a reconcile Request containing\nthe name and namespace of the object to reconcile, reconciles the object,\nand returns a Response or an error indicating whether to requeue for a\nsecond round of processing.\n\nReconcilers use Clients (pkg/client) to access API objects.  The default\nclient provided by the manager reads from a local shared cache (pkg/cache)\nand writes directly to the API server, but clients can be constructed that\nonly talk to the API server, without a cache.  The Cache will auto-populate\nwith watched objects, as well as when other structured objects are\nrequested. The default split client does not promise to invalidate the cache\nduring writes (nor does it promise sequential create/get coherence), and code\nshould not assume a get immediately following a create/update will return\nthe updated resource. Caches may also have indexes, which can be created via\na FieldIndexer (pkg/client) obtained from the manager.  Indexes can used to\nquickly and easily look up all objects with certain fields set.  Reconcilers\nmay retrieve event recorders (pkg/recorder) to emit events using the\nmanager.\n\nClients, Caches, and many other things in Kubernetes use Schemes\n(pkg/scheme) to associate Go types to Kubernetes API Kinds\n(Group-Version-Kinds, to be specific).\n\nSimilarly, webhooks (pkg/webhook/admission) may be implemented directly, but\nare often constructed using a builder (pkg/webhook/admission/builder).  They\nare run via a server (pkg/webhook) which is managed by a Manager.\n\nLogging (pkg/log) in controller-runtime is done via structured logs, using a\nlog set of interfaces called logr\n(https://pkg.go.dev/github.com/go-logr/logr).  While controller-runtime\nprovides easy setup for using Zap (https://go.uber.org/zap, pkg/log/zap),\nyou can provide any implementation of logr as the base logger for\ncontroller-runtime.\n\nMetrics (pkg/metrics) provided by controller-runtime are registered into a\ncontroller-runtime-specific Prometheus metrics registry.  The manager can\nserve these by an HTTP endpoint, and additional metrics may be registered to\nthis Registry as normal.\n\nYou can easily build integration and unit tests for your controllers and\nwebhooks using the test Environment (pkg/envtest).  This will automatically\nstand up a copy of etcd and kube-apiserver, and provide the correct options\nto connect to the API server.  It's designed to work well with the Ginkgo\ntesting framework, but should work with any testing setup.\n\nThis example creates a simple application Controller that is configured for ReplicaSets and Pods.\n\n* Create a new application for ReplicaSets that manages Pods owned by the ReplicaSet and calls into\nReplicaSetReconciler.\n\n* Start the application.\n\n\nThis example creates a simple application Controller that is configured for ExampleCRDWithConfigMapRef CRD.\nAny change in the configMap referenced in this Custom Resource will cause the re-reconcile of the parent ExampleCRDWithConfigMapRef\ndue to the implementation of the .Watches method of \"sigs.k8s.io/controller-runtime/pkg/builder\".Builder.\n\n\nThis example creates a simple application Controller that is configured for ReplicaSets and Pods.\nThis application controller will be running leader election with the provided configuration in the manager options.\nIf leader election configuration is not provided, controller runs leader election with default values.\nDefault values taken from: https://github.com/kubernetes/component-base/blob/master/config/v1alpha1/defaults.go\n* defaultLeaseDuration = 15 * time.Second\n* defaultRenewDeadline = 10 * time.Second\n* defaultRetryPeriod   = 2 * time.Second\n\n* Create a new application for ReplicaSets that manages Pods owned by the ReplicaSet and calls into\nReplicaSetReconciler.\n\n* Start the application.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/controller-runtime@0.15.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/controller-runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sigs.k8s.io/controller-runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "0.15.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e6bd5bdcd97b3093",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/controller-runtime@v0.15.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package controllerruntime provides tools to construct Kubernetes-style\ncontrollers that manipulate both Kubernetes CRDs and aggregated/built-in\nKubernetes APIs.\n\nIt defines easy helpers for the common use cases when building CRDs, built\non top of customizable layers of abstraction.  Common cases should be easy,\nand uncommon cases should be possible.  In general, controller-runtime tries\nto guide users towards Kubernetes controller best-practices.\n\nThe main entrypoint for controller-runtime is this root package, which\ncontains all of the common types needed to get started building controllers:\n\nThe examples in this package walk through a basic controller setup.  The\nkubebuilder book (https://book.kubebuilder.io) has some more in-depth\nwalkthroughs.\n\ncontroller-runtime favors structs with sane defaults over constructors, so\nit's fairly common to see structs being used directly in controller-runtime.\n\nA brief-ish walkthrough of the layout of this library can be found below. Each\npackage contains more information about how to use it.\n\nFrequently asked questions about using controller-runtime and designing\ncontrollers can be found at\nhttps://github.com/kubernetes-sigs/controller-runtime/blob/main/FAQ.md.\n\nEvery controller and webhook is ultimately run by a Manager (pkg/manager). A\nmanager is responsible for running controllers and webhooks, and setting up\ncommon dependencies, like shared caches and clients, as\nwell as managing leader election (pkg/leaderelection).  Managers are\ngenerally configured to gracefully shut down controllers on pod termination\nby wiring up a signal handler (pkg/manager/signals).\n\nControllers (pkg/controller) use events (pkg/event) to eventually trigger\nreconcile requests.  They may be constructed manually, but are often\nconstructed with a Builder (pkg/builder), which eases the wiring of event\nsources (pkg/source), like Kubernetes API object changes, to event handlers\n(pkg/handler), like \"enqueue a reconcile request for the object owner\".\nPredicates (pkg/predicate) can be used to filter which events actually\ntrigger reconciles.  There are pre-written utilities for the common cases, and\ninterfaces and helpers for advanced cases.\n\nController logic is implemented in terms of Reconcilers (pkg/reconcile).  A\nReconciler implements a function which takes a reconcile Request containing\nthe name and namespace of the object to reconcile, reconciles the object,\nand returns a Response or an error indicating whether to requeue for a\nsecond round of processing.\n\nReconcilers use Clients (pkg/client) to access API objects.  The default\nclient provided by the manager reads from a local shared cache (pkg/cache)\nand writes directly to the API server, but clients can be constructed that\nonly talk to the API server, without a cache.  The Cache will auto-populate\nwith watched objects, as well as when other structured objects are\nrequested. The default split client does not promise to invalidate the cache\nduring writes (nor does it promise sequential create/get coherence), and code\nshould not assume a get immediately following a create/update will return\nthe updated resource. Caches may also have indexes, which can be created via\na FieldIndexer (pkg/client) obtained from the manager.  Indexes can used to\nquickly and easily look up all objects with certain fields set.  Reconcilers\nmay retrieve event recorders (pkg/recorder) to emit events using the\nmanager.\n\nClients, Caches, and many other things in Kubernetes use Schemes\n(pkg/scheme) to associate Go types to Kubernetes API Kinds\n(Group-Version-Kinds, to be specific).\n\nSimilarly, webhooks (pkg/webhook/admission) may be implemented directly, but\nare often constructed using a builder (pkg/webhook/admission/builder).  They\nare run via a server (pkg/webhook) which is managed by a Manager.\n\nLogging (pkg/log) in controller-runtime is done via structured logs, using a\nlog set of interfaces called logr\n(https://pkg.go.dev/github.com/go-logr/logr).  While controller-runtime\nprovides easy setup for using Zap (https://go.uber.org/zap, pkg/log/zap),\nyou can provide any implementation of logr as the base logger for\ncontroller-runtime.\n\nMetrics (pkg/metrics) provided by controller-runtime are registered into a\ncontroller-runtime-specific Prometheus metrics registry.  The manager can\nserve these by an HTTP endpoint, and additional metrics may be registered to\nthis Registry as normal.\n\nYou can easily build integration and unit tests for your controllers and\nwebhooks using the test Environment (pkg/envtest).  This will automatically\nstand up a copy of etcd and kube-apiserver, and provide the correct options\nto connect to the API server.  It's designed to work well with the Ginkgo\ntesting framework, but should work with any testing setup.\n\nThis example creates a simple application Controller that is configured for ReplicaSets and Pods.\n\n* Create a new application for ReplicaSets that manages Pods owned by the ReplicaSet and calls into\nReplicaSetReconciler.\n\n* Start the application.\n\n\nThis example creates a simple application Controller that is configured for ExampleCRDWithConfigMapRef CRD.\nAny change in the configMap referenced in this Custom Resource will cause the re-reconcile of the parent ExampleCRDWithConfigMapRef\ndue to the implementation of the .Watches method of \"sigs.k8s.io/controller-runtime/pkg/builder\".Builder.\n\n\nThis example creates a simple application Controller that is configured for ReplicaSets and Pods.\nThis application controller will be running leader election with the provided configuration in the manager options.\nIf leader election configuration is not provided, controller runs leader election with default values.\nDefault values taken from: https://github.com/kubernetes/component-base/blob/master/config/v1alpha1/defaults.go\n* defaultLeaseDuration = 15 * time.Second\n* defaultRenewDeadline = 10 * time.Second\n* defaultRetryPeriod   = 2 * time.Second\n\n* Create a new application for ReplicaSets that manages Pods owned by the ReplicaSet and calls into\nReplicaSetReconciler.\n\n* Start the application.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/controller-runtime@0.15.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/controller-runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sigs.k8s.io/controller-runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "0.15.0"
        },
        {
            "SPDXID": "SPDXRef-Package-53793596e720a072",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/json@v0.0.0-20220713155537-f223a00ba0e2"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/json@0.0.0-20220713155537-f223a00ba0e2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/json",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause",
            "licenseDeclared": "Apache-2.0 OR BSD-3-Clause",
            "name": "sigs.k8s.io/json",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "0.0.0-20220713155537-f223a00ba0e2"
        },
        {
            "SPDXID": "SPDXRef-Package-a5240fedef08c804",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/json@v0.0.0-20221116044647-bc3834ca7abd"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/json@0.0.0-20221116044647-bc3834ca7abd",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/json",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause",
            "licenseDeclared": "Apache-2.0 AND BSD-3-Clause",
            "name": "sigs.k8s.io/json",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "0.0.0-20221116044647-bc3834ca7abd"
        },
        {
            "SPDXID": "SPDXRef-Package-d331915c1c0717cd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/json@v0.0.0-20221116044647-bc3834ca7abd"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/json@0.0.0-20221116044647-bc3834ca7abd",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/json",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause",
            "licenseDeclared": "Apache-2.0 AND BSD-3-Clause",
            "name": "sigs.k8s.io/json",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "0.0.0-20221116044647-bc3834ca7abd"
        },
        {
            "SPDXID": "SPDXRef-Package-4b21c004f09cd666",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/kustomize/api@v0.12.1"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "A dummy main to help with releasing the kustomize API module.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/kustomize/api@0.12.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/kustomize",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sigs.k8s.io/kustomize/api",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "0.12.1"
        },
        {
            "SPDXID": "SPDXRef-Package-75d3a4eb00eadaeb",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/kustomize/kyaml@v0.13.9"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package kyaml contains libraries for reading and writing Kubernetes Resource configuration\nas yaml.\n\nIndividual Resources are manipulated using the yaml package.\n\nCollections of Resources are manipulated using the kio package.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/kustomize/kyaml@0.13.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/kustomize",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sigs.k8s.io/kustomize/kyaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "0.13.9"
        },
        {
            "SPDXID": "SPDXRef-Package-5a1892a1f68063d5",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/structured-merge-diff/v4@v4.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/structured-merge-diff/v4@4.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/structured-merge-diff",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sigs.k8s.io/structured-merge-diff/v4",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "4.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-7e1abcd46d1f838",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/structured-merge-diff/v4@v4.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/structured-merge-diff/v4@4.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/structured-merge-diff",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sigs.k8s.io/structured-merge-diff/v4",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "4.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-841a2bcc19d877dd",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/structured-merge-diff/v4@v4.2.3"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/structured-merge-diff/v4@4.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/structured-merge-diff",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sigs.k8s.io/structured-merge-diff/v4",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "4.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-4c02f5ba36cb223a",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/yaml@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/yaml@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/yaml",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "licenseDeclared": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "name": "sigs.k8s.io/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/xappKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-612e99bdb1ebaa9c",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/yaml@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/yaml@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/yaml",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "licenseDeclared": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "name": "sigs.k8s.io/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ric-dep/depRicKubernetesOperator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-96ae128e43253639",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/yaml@v1.3.0"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/yaml@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/yaml",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "licenseDeclared": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "name": "sigs.k8s.io/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-ricdms/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-de0bd769f3ee7aad",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Python 2 and 3 compatibility utilities",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/six@1.16.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/benjaminp/six",
            "licenseConcluded": "MIT",
            "licenseDeclared": "LicenseRef-MIT-License",
            "name": "six",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Benjamin Peterson",
            "versionInfo": "1.16.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fe992287434e6f74",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: stslgo"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/stslgo",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "stslgo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-stslgo/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-c98b715ed8dcf956",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "ANSI color formatting for output in terminal",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/termcolor@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/termcolor/termcolor",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "termcolor",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: termcolor",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-78555436f74a7241",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: testapp"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/testapp",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "testapp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-dbaas/testapplication/go/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-23bef977bd5ebf37",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "HTTP library with thread-safe connection pooling, file post, and more.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/urllib3@1.25.8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "urllib3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: urllib3",
            "versionInfo": "1.25.8"
        },
        {
            "SPDXID": "SPDXRef-Package-35c9a8b54eb352a7",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: xappmock"
                },
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/xappmock",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "xappmock",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-e2mgr/tools/xappmock/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-b692e87f3e48535",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Backport of pathlib-compatible object wrapper for zip files",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/zipp@3.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "zipp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: ric-plt-appmgr/xapp_orchestrater/dev/xapp_onboarder/requirements.txt",
            "supplier": "Organization: Jason R. Coombs",
            "versionInfo": "3.1.0"
        },
        {
            "SPDXID": "SPDXRef-Filesystem-232b7863a232512e",
            "annotations": [
                {
                    "annotationDate": "2024-12-06T08:21:19Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "SchemaVersion: 2"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "o-ran.ric",
            "primaryPackagePurpose": "SOURCE",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "2024-12"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-com-golog",
            "comment": "This package was added to the Trivy analysis for the com/golog by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "com/golog",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "78901281c985115b2b9497d89befa2efce154d4f"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-com-log",
            "comment": "This package was added to the Trivy analysis for the com/log by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "com/log",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "dd51d2b9ed197f242cbc8a0e5add9698034a9320"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-com-pylog",
            "comment": "This package was added to the Trivy analysis for the com/pylog by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "com/pylog",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "34b33525519549b8b6ff6074aafb46e0d3087f4a"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-a1",
            "comment": "This package was added to the Trivy analysis for the ric-plt/a1 by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/a1",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "36ac87f24b0de22cd48883fd762640b9595cbfdb"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-alarm-cpp",
            "comment": "This package was added to the Trivy analysis for the ric-plt/alarm-cpp by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/alarm-cpp",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "0c009156c99fef855374e4f3464f115308c04187"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-alarm-go",
            "comment": "This package was added to the Trivy analysis for the ric-plt/alarm-go by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/alarm-go",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "467b8ad2e3aa3939ab72726c6db590dc45f85842"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-appmgr",
            "comment": "This package was added to the Trivy analysis for the ric-plt/appmgr by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/appmgr",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "4c05932dce72e98db23eaff2b72b58816e1f2d55"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-asn1-documents",
            "comment": "This package was added to the Trivy analysis for the ric-plt/asn1-documents by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/asn1-documents",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "7b385830028e9d5b176bdcc4a17c171fe1f03c79"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-conflictmgr",
            "comment": "This package was added to the Trivy analysis for the ric-plt/conflictmgr by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/conflictmgr",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "565247e3a460a4a9e5d0c3f1381e567a02832983"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-dbaas",
            "comment": "This package was added to the Trivy analysis for the ric-plt/dbaas by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/dbaas",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "a08c5897a9487ae6b937909f822373c70f0ab3ca"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-dbaas-hiredis-vip",
            "comment": "This package was added to the Trivy analysis for the ric-plt/dbaas/hiredis-vip by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/dbaas/hiredis-vip",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "a7fea2f0a7ba66db801e570eec655d5eedef7165"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-demo1",
            "comment": "This package was added to the Trivy analysis for the ric-plt/demo1 by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/demo1",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "a376e5db27535b03d5ff7be026748efc7279f909"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-e2",
            "comment": "This package was added to the Trivy analysis for the ric-plt/e2 by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/e2",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "6add352488cc4c3bb5b383cfa26f2b3c1c5dd0ba"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-e2mgr",
            "comment": "This package was added to the Trivy analysis for the ric-plt/e2mgr by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/e2mgr",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "eb6acae05ff81cdcb39344e1e983f59d1cd64fe6"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-jaegeradapter",
            "comment": "This package was added to the Trivy analysis for the ric-plt/jaegeradapter by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/jaegeradapter",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "5d0b0a4759f73854a2ac4507878c413b141db278"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-lib-rmr",
            "comment": "This package was added to the Trivy analysis for the ric-plt/lib/rmr by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/lib/rmr",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "8b9a214906a40b338def981d5c16b4ea247176fb"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-libe2ap",
            "comment": "This package was added to the Trivy analysis for the ric-plt/libe2ap by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/libe2ap",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "7f7b01274aae4721e8fdeeb766ce441d76c13009"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-nodeb-rnib",
            "comment": "This package was added to the Trivy analysis for the ric-plt/nodeb-rnib by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/nodeb-rnib",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "1c0fcb798ca6f0b7bcec9a378bb51ac02dfc877b"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-o1",
            "comment": "This package was added to the Trivy analysis for the ric-plt/o1 by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/o1",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "d43539d1bbc55884d02606a29ae08248b62731ce"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-ric-dep",
            "comment": "This package was added to the Trivy analysis for the ric-plt/ric-dep by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/ric-dep",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "5268a33fc172890e07e0e2de413e194f334a9726"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-ric-test",
            "comment": "This package was added to the Trivy analysis for the ric-plt/ric-test by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/ric-test",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "7f9c0bd6d5cf34d8cfdeeb9f63aa183fd6140bf8"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-ricctl",
            "comment": "This package was added to the Trivy analysis for the ric-plt/ricctl by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/ricctl",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "8bb38ba39c749b9e1ff47d9c62de4e3ce93b4326"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-ricdms",
            "comment": "This package was added to the Trivy analysis for the ric-plt/ricdms by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/ricdms",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "655ada7c985269dfef43c0eadf96dad769d20147"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-rtmgr",
            "comment": "This package was added to the Trivy analysis for the ric-plt/rtmgr by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/rtmgr",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "114546b51b21ea1c8ba4c8c6f5302499812addb4"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-sdl",
            "comment": "This package was added to the Trivy analysis for the ric-plt/sdl by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/sdl",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "3b6642d225b9ff6b51bf6093644df6e95b2a62c4"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-sdlgo",
            "comment": "This package was added to the Trivy analysis for the ric-plt/sdlgo by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/sdlgo",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "33a99920c074a13e00147095689a7331a580d94e"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-sdlpy",
            "comment": "This package was added to the Trivy analysis for the ric-plt/sdlpy by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/sdlpy",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "6cd3a9eac9d68152a63ec673669b4737c7f8cbd4"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-streaming-protobufs",
            "comment": "This package was added to the Trivy analysis for the ric-plt/streaming-protobufs by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/streaming-protobufs",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "4b8f65e718102174eefb584464a6f7277ad2938c"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-stslgo",
            "comment": "This package was added to the Trivy analysis for the ric-plt/stslgo by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/stslgo",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "42ad7da4e5b29516ab154618b1be4c2f17b1c3d6"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-submgr",
            "comment": "This package was added to the Trivy analysis for the ric-plt/submgr by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/submgr",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "ff822852aa2d4a81b5b6da18111f55a9b315603e"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-tracelibcpp",
            "comment": "This package was added to the Trivy analysis for the ric-plt/tracelibcpp by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/tracelibcpp",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "71e9444097372e2cf0505583bba65a85a4c3bebf"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-tracelibgo",
            "comment": "This package was added to the Trivy analysis for the ric-plt/tracelibgo by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/tracelibgo",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "a94eddfcb13607f129f1578137284cff5b143461"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-utils",
            "comment": "This package was added to the Trivy analysis for the ric-plt/utils by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/utils",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "b5b59fb1a39bd7b0fe2cc90f511ec7c3c509e5c0"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-vespamgr",
            "comment": "This package was added to the Trivy analysis for the ric-plt/vespamgr by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/vespamgr",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "93583d93c2fceab7e37b507c3fccfdd514dfa019"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-xapp-frame",
            "comment": "This package was added to the Trivy analysis for the ric-plt/xapp-frame by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/xapp-frame",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "c79954127421383b7e864e94db579c9aea9ff4dd"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-xapp-frame-cpp",
            "comment": "This package was added to the Trivy analysis for the ric-plt/xapp-frame-cpp by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/xapp-frame-cpp",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "86cba2645665ccfad22392a8b473fd0bc5712a27"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-xapp-frame-py",
            "comment": "This package was added to the Trivy analysis for the ric-plt/xapp-frame-py by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/xapp-frame-py",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "611c03c59f19ae439d660d63d6b9ac0256742e2f"
        },
        {
            "SPDXID": "SPDXRef-o-ran-ric-ric-plt-xapp-frame-rust",
            "comment": "This package was added to the Trivy analysis for the ric-plt/xapp-frame-rust by the Scaffold tool SBOM augmentation",
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "licenseDeclared": "Apache-2.0 AND (Apache-2.0 AND CC-BY-4.0) AND (Apache-2.0 OR CC-BY-4.0) AND CC-BY-4.0 AND (Apache-2.0 OR BSD-2-Clause) AND BSD-2-Clause AND BSD-3-Clause AND FSFAP",
            "name": "ric-plt/xapp-frame-rust",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project o-ran",
            "supplier": "Organization: Linux Foundation Project o-ran",
            "versionInfo": "28ce4905afbcce20c8d14aec5c292c5724f985b7"
        }
    ],
    "relationships": [
        {
            "spdxElementId": "SPDXRef-Application-123a95513fed0e02",
            "relatedSpdxElement": "SPDXRef-Package-ea2cd87abc9fa562",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-128d5521d2ea5113",
            "relatedSpdxElement": "SPDXRef-Package-236c31d62357aec",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-156055bcefa62388",
            "relatedSpdxElement": "SPDXRef-Package-b23d4f24bb8391a8",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-23d78e11a14f7d81",
            "relatedSpdxElement": "SPDXRef-Package-7148b67fbbfc5116",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-312f5d2c23b2bc27",
            "relatedSpdxElement": "SPDXRef-Package-65173b2aef0a5981",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3986f90e7c86f2e1",
            "relatedSpdxElement": "SPDXRef-Package-6f3bae14384a6db9",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-184bfe68737837c8",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-1b198e4674afc668",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-1d6e9c493e552306",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-1ec739c97b1b8e7b",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-23bef977bd5ebf37",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-3ac47448994e59d4",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-563e0b48f3ffcc47",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-5d431f9f8df0cffc",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-6a43f4981ddefd9a",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-6cb45566cfbf21aa",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-86771c8010617191",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-8f94cf439733dbad",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-96b1b589cf5784c8",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-b65560d6a5e9ab06",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-b692e87f3e48535",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-c646d304796bdd7f",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-c6a046cd25f4472",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-c98b715ed8dcf956",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-d25609a10a205c55",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-d350bcf2686aaefe",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-dd40c1aa7e443ad0",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-de0bd769f3ee7aad",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-3d12d798da602d2c",
            "relatedSpdxElement": "SPDXRef-Package-efe035a36bcd774e",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-51e8a620d03275bb",
            "relatedSpdxElement": "SPDXRef-Package-8a9539292cf2a39d",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-57cbccda3269f4f3",
            "relatedSpdxElement": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-6273b17b3724091d",
            "relatedSpdxElement": "SPDXRef-Package-2d5852e5854b17ba",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-709382bb26085183",
            "relatedSpdxElement": "SPDXRef-Package-35c9a8b54eb352a7",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-7fa04d705f5f0761",
            "relatedSpdxElement": "SPDXRef-Package-7096a333896e3de1",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-83ab268f57e671bd",
            "relatedSpdxElement": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-87b2f151a8374124",
            "relatedSpdxElement": "SPDXRef-Package-bcfe63e78237e2e8",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-89138306e64ce826",
            "relatedSpdxElement": "SPDXRef-Package-b96db1443698f161",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-973ba71e71b39adb",
            "relatedSpdxElement": "SPDXRef-Package-ca399d4af3b495d3",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-993da5a824ece4d0",
            "relatedSpdxElement": "SPDXRef-Package-b813cf1e938b7a8e",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-9a45e6d3495347b6",
            "relatedSpdxElement": "SPDXRef-Package-ef73f622c7f5b6c9",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-9bb47ff11fca68c5",
            "relatedSpdxElement": "SPDXRef-Package-8e20c19e652671f6",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-ac80a2a835aa77b",
            "relatedSpdxElement": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-b3bc8c237a6e2a7a",
            "relatedSpdxElement": "SPDXRef-Package-fe992287434e6f74",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-b59753c6fce88cbf",
            "relatedSpdxElement": "SPDXRef-Package-2376be91f9439ed4",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-b820b5db92e2ac01",
            "relatedSpdxElement": "SPDXRef-Package-78555436f74a7241",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-bb699b67b6da548d",
            "relatedSpdxElement": "SPDXRef-Package-f11729830b271a80",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-c381a46e1b6d43f1",
            "relatedSpdxElement": "SPDXRef-Package-c3fa92dd4f2e5571",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-cdd49db64ed8c59e",
            "relatedSpdxElement": "SPDXRef-Package-cb83f9f59698dc01",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-ce08c2a1cea8932b",
            "relatedSpdxElement": "SPDXRef-Package-2b294a1e20fab097",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-cf6308505e858f84",
            "relatedSpdxElement": "SPDXRef-Package-f88822e63dfd7ee2",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-d607a489c05baf31",
            "relatedSpdxElement": "SPDXRef-Package-8eba896df08a3eab",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-e79e81f2ce960dbc",
            "relatedSpdxElement": "SPDXRef-Package-cb1224ccf06ce876",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-ee086b892cdf21dd",
            "relatedSpdxElement": "SPDXRef-Package-7c620c1790eca44f",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-ef2e124b6093d9ad",
            "relatedSpdxElement": "SPDXRef-Package-c8c9fda8c00ee091",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-DOCUMENT",
            "relatedSpdxElement": "SPDXRef-Filesystem-232b7863a232512e",
            "relationshipType": "DESCRIBES"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-123a95513fed0e02",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-128d5521d2ea5113",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-156055bcefa62388",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-23d78e11a14f7d81",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-312f5d2c23b2bc27",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-3986f90e7c86f2e1",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-3d12d798da602d2c",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-51e8a620d03275bb",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-57cbccda3269f4f3",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-6273b17b3724091d",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-709382bb26085183",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-7fa04d705f5f0761",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-83ab268f57e671bd",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-87b2f151a8374124",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-89138306e64ce826",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-973ba71e71b39adb",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-993da5a824ece4d0",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-9a45e6d3495347b6",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-9bb47ff11fca68c5",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-ac80a2a835aa77b",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-b3bc8c237a6e2a7a",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-b59753c6fce88cbf",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-b820b5db92e2ac01",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-bb699b67b6da548d",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-c381a46e1b6d43f1",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-cdd49db64ed8c59e",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-ce08c2a1cea8932b",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-cf6308505e858f84",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-d607a489c05baf31",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-e79e81f2ce960dbc",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-ee086b892cdf21dd",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-Application-ef2e124b6093d9ad",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-147db3c90a73c55a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-15ae14d2eee524fa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-15c2b80c07f31fc5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-180486746a518d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-1b4ac2224e11e063",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-1ec9c069f9adb42c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-2030717c842b217",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-23d60c2cddc6ae72",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-260b30aac51158f4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-264fbedc63ee72f5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-29aaee985c81a03d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-2e54ed9e881061d8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-30821681320076b7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-31c4e006eebe4bd8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-343f6a8796d03c8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-455cdc9b157120e1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-45d016d6c82a8faf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-49627d34b8fc7aaf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-4d6a59f2706448f2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-561eb433c5d47a55",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-5e476ec854d0aed3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-60e2dcc50dda4463",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-67d6ae656829b3bd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-6f42986c5a8f3585",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-74b93425c64fd8a3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-77313b4859fab179",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-79b6ca6ad22737b5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-7ae1bca75307b417",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-7e011cd43ce0bc97",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-86fe67f056e66778",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-87edbf69ed565cb1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-8a60d775b1670791",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-8d932ea9b8208444",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-904a749b0006cae8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-93916092b77a90ce",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-99b09761af0effcb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-9ea7ffb89863b8af",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-a14781ea759abeb0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-a4c5c3100efa6854",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-a7330b5a8339dca6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-ac53a9b260625afd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-acd89369014ea577",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-b03a3ac03d400cee",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-b11d3a56ee1444fb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-b1568297d0cbf639",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-b16777dc2e5699c0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-bbe4db1d1555e9c9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-bc92418a6abd65e2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-bda5188724a894d8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-be83c5ee1291ad89",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-bfd9b68b71feb49b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-c13a7e87773e556f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-c5d8aad3270dd619",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-cacafadefda1d181",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-ccbda6042f7a0a51",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-d474a565d4fae928",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-de45906799db3ee1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-e42c6212855a60e4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-f362ec88e17606b9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-f39d37dbb158665d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-f5c11f30eee33a22",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-fad9bb9074714782",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-236c31d62357aec",
            "relatedSpdxElement": "SPDXRef-Package-fb4f48236057801d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-14bac5d1e8b955ae",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-1863ed2791a8ff1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-196c83cca5d4506c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-1c1b74d1f10304ad",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-1e9a64336fc517fd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-207782cc50b8f05d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-24462573fae5d5a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-24b9e6e95293da2e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-255660b4e9d8b64b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-2d1a4aa67d47687c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-334366633337afad",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-3674ba6fd0ae9c73",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-372d0c1950b66395",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-4438b4739d0e2374",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-4969d2dd9b0efe3d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-4ae43d25f0c055fe",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-5f0d4fb3840d988f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-606c80373a921af0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-64976de915af4eb4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-667fdc597cd3a5fb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-68d4dbb24c7cc8cd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-693f058b7ab96cca",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-7aadc4613092d6ad",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-7ead1ad8324ca82f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-855f432b5c662da8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-8b66594048dc1153",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-9c6ee8e6a804a840",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-a4c4b9f64a8d9896",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-a84d723cc820d1e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-acff888c733e87f2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-b34273c81051a76e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-b44f87228428d561",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-b8f5562588f96883",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-bfaa8f0f38e62820",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-c37f0d9681ee3451",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-c3ec3023d24c510c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-c58bd9669115b908",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-cac1d54d1ab813be",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-d05e7150150e798d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-e15839c66a98ca1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-e676fd08d4a8100f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-e79bc1421cfd7c50",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-e823c9843ad10b63",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-eee6c9b9253e75dc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-f2a72affd91422eb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-f6e209bf357dd528",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-f7e509aee1374891",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-fa40c97e3633d4f3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-fba955e1db6996f6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-fc0c391227c1ff84",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2376be91f9439ed4",
            "relatedSpdxElement": "SPDXRef-Package-fe4d902e0ec06e30",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-1202d29cfee8eebc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-2094f9ae07aaab74",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-2f1d4a65e0dd597e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-35ffe15ba58392bd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-39d98a1b87f4bd44",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-586f486e90731fa3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-6e7f455ccd949371",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-acff888c733e87f2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-b912196e3b538c1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-c3dd236c54c934a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-c96a2974a120995c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-d14208c6e452a53b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-255660b4e9d8b64b",
            "relatedSpdxElement": "SPDXRef-Package-fb5ae108920567e5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-1d2ca5021e162e6a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-22f33c919e64052f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-25b053c97d466570",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-2b6be18008a02b05",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-2c13896043007a9f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-2ffde1b1a176b7f7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-4772a85694921b42",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-4847834209ef5c7e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-49c6ff1bbfc586b7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-4e2a7336d26bc910",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-5030e929bad8c452",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-540a45decd0f4955",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-585f253d1f72c9e6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-5cdbde5951bae55c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-6010a56e8dcee7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-60582731c84b91c9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-60a36719923af114",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-64631462d613369b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-6603aa5173f420d7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-6b4b9c4a8a0a5ac2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-6d7e37ede9e8e7f5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-6e86e1959c1608e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-76a9caef0516b586",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-77327cb32bf95850",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-7a00ae32cb119527",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-7ca1c746b6e68f7c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-8d61502fd80a0274",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-902a0b9e8ebaba64",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-911b83483fc26779",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-91413414ca17669b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-91cbb22bb070ce43",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-9b1e818439c378e2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-9c6608aa603ee769",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-9e3d5feef6a1b13e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-9eff79484740115d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-a597913c68fb9403",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-a7efd0d86405da58",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-a9e24951ea45e3b8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-af9ee34ab701106e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-b1db57de9026bd78",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-b9469e1f802c7734",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-c7dd935e9d81dfde",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-c91be8ef55a645b9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-cb307009910c4737",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-cc864f978c6635ce",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-cd3cc66211f303af",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-cdba7439c0975027",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-cde95afe005f58bb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-cf22ec11ffbdaf5c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-d2349cb6ef07ac76",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-d2bb6ece8bfa4172",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-d662eb1fbeaf5e16",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-db2031691606cd94",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-e35b058b282f474c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-e460f98388cd0c6d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-e936e34ee9cf76fd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-eb81ccf77096c05e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-ec4a59937d89c164",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-eee75c45ad894f82",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-ff0e80a1f828fae8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2b294a1e20fab097",
            "relatedSpdxElement": "SPDXRef-Package-ffe86cfda6c1b202",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2d5852e5854b17ba",
            "relatedSpdxElement": "SPDXRef-Package-244827c7ebaab6a1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2d5852e5854b17ba",
            "relatedSpdxElement": "SPDXRef-Package-331b195ed35bc8e4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2d5852e5854b17ba",
            "relatedSpdxElement": "SPDXRef-Package-c074839c54f5e273",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2d5852e5854b17ba",
            "relatedSpdxElement": "SPDXRef-Package-d65259e6df4eabfb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relatedSpdxElement": "SPDXRef-Package-1fa8dc5ded74082a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relatedSpdxElement": "SPDXRef-Package-1ff6643d407e9a7d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relatedSpdxElement": "SPDXRef-Package-2044052f7cd102e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relatedSpdxElement": "SPDXRef-Package-21aab698f29f30a3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relatedSpdxElement": "SPDXRef-Package-30036ca77cdf82d7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relatedSpdxElement": "SPDXRef-Package-5035d124134cd9ea",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relatedSpdxElement": "SPDXRef-Package-574a2de9b1498322",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relatedSpdxElement": "SPDXRef-Package-65006c4b01b63760",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relatedSpdxElement": "SPDXRef-Package-86013caf1875083f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relatedSpdxElement": "SPDXRef-Package-b8f24496efbb1ffc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-2dbeda5ecf9ba7a7",
            "relatedSpdxElement": "SPDXRef-Package-d01ff56eb57055e8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-34136e694402c8b6",
            "relatedSpdxElement": "SPDXRef-Package-8195499da1b949b7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-11940ff427bf7369",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-125b9fed850cb164",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-18253501c666e3da",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-1d1eec47ecb7f71f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-205eab20d74a7a44",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-2585e8de99ab22b4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-4cc216e05efe7fb7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-4d5912ac769b8159",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-519313fd4b445224",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-635c971f546dd9e9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-68636be100f602c8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-6d287700f9115475",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-7be1353306faa69f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-7e8e1d53cce7aa82",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-8d91a1d65b93f1a1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-9228a0c914374527",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-9366c39c2711f29d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-9c0f60495ef53023",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-a1738c28139fbd07",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-a238251b4736fd82",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-aa2f9afc27a3efcf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-aca0c9be8cda8e27",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-afcc5a6498c29ef2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-b368bda3108bb34e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-be8b74a0ebfb91f0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-d07a3eb1c0fba23e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-d46a93b400dd8d36",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-e7daecd1c38e558d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-35c9a8b54eb352a7",
            "relatedSpdxElement": "SPDXRef-Package-fa9c700faf1e9b54",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-47d7ae3a17fa663",
            "relatedSpdxElement": "SPDXRef-Package-12a31c13e96b6da5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-109a6cc15e60bc8c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-111e6fe8d35f969a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-11860817373fd5a7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-157a507c1c05ebf4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-17eb13cc4d3a6f0c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-1930080e8fa57941",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-1995c4039ecb5bab",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-19e63effe7f4e0fc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-1a8d123a503d5492",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-1c4a785e73640439",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-1f86911c1d1d297e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-256391e9d649b55e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-26d05036f4a6fe5c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-271567445de46709",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-2ce4c0c5e1ee5420",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-2e45bdf062bc8c7e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-2fd28a7fc45adc3f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-31dda64544c1cda4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-337efad3edf3154b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-34eac87030739a8f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-3538a73e63019494",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-36d187bdbc2f048d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-3717c440755f8ccc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-389d4add748fa23f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-397265596f6a6dfa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-3a05a4cd9b3ed80d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-3eec46c909ea13ed",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-3f6773fb58acad72",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-407b512b5e182d50",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-4194c5088da61a4f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-47ad86849dadb469",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-4a5e7f0ce2a9bda8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-4db2be1f735371e6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-4f2c4c65613a5a9d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-517e6c2936c20afa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-52423afde59f9d91",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-54dbad95fe3be981",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-5515940a027558a1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-57cda4317f83bf57",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-5995a27f321864e0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-5b651e0d69f13c39",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-5b7751028e071ccd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-5eb690f30a54b71d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-609f94ea5aff173c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-60ebe41f2e6814b0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-61ae20b7e19f762",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-636fc9e96ad53453",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-647e3f6b741f49b8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-660c43498f9e46e7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-6af0dfcede0584d1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-6d9f561a88352073",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-6efc822929e221a3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-714f61ac5ff488e9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-7356b39cbdfa4f73",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-743d731e7145fe50",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-7603bb6a2f57d9cd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-79352a19d21fd465",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-7b97de8bcdcc17d9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-7cacd64432ed4618",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-7d9f49cb33d229cf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-7e950e00c5f6d134",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-7ec588557decfcd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-80e16587adb68e99",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-81a5677a1f82a9de",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-8355cba49f85ee91",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-8389cdbbcf253d46",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-8506857f7d3b18ea",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-89b919cf47d8da61",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-8a7a5270ff48804",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-8ac5c4cd284990a9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-8f74663a6c0a9f6f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-98ddf112f5cb06e7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-9de21d933432070b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-a101d96365152511",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-a3dbe99683f29797",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-a56bbdf51b082735",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-a5a75496e3b07191",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-a5a7f1257d1f52d4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-a6b3a8d2ff9261fe",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-a98713f8a8ce1c80",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-aa7ef44055b1ff7f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-ab06839f1de0570e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-ab0bc4ff29ac5f5b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-adaa156a03f86923",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-ae643f30526c59e8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-af1b90b666a98f39",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-af77d89d5e839988",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-afb4ece3020cefdf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-b03a1cc325bb68da",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-b0d56706bf151bc0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-b38b7f1de64821cf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-b3e4509e500a3ddd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-b4718ea91dba0b40",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-b6176e8ed35f11a3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-b6d6b18930634b84",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-b7240ecc0289131f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-b965164931eb1f1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-bbbd598681c26a73",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-bbe9715e3a2fe8b3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-bcc9b23460afb71b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-bef2f1a3857702e9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-c78ba68454401106",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-caa895745b69424c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-cbd08c0706f18ae7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-cc968928b2f252d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-cd20ad1b0692ffaf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-cd5796b92d0ef96c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-cf15a445f1dc08d8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-d057aa4240564b35",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-d511feaa343043b3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-d6a0e7f66da11a02",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-d83491af9239b863",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-db73c8cf67c72af9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-dbcce5e83816e891",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-dcb1a47dd861245c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-dcb6f6dfd255fdfc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-e131a7addbc1e95b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-e389525d3928b3e7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-e435bae6dd30ed7e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-e573640ba532c8d3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-e5eeadb12d8c3ccc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-e72850ccdbeadb71",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-e7ca3cf0b65e3fa4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-eab036fc7227754",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-eab1d3093470480c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-eb48ef2abec62cb1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-ee0f7286bd6cdaea",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-ee9828382ba2b254",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-f0ee20b11a2933eb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-f1d513e80df3c68d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-f71956ee78e6c853",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-f80c1da0e7fe9e84",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-f913c85b7cd23b45",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-f9ca0be06ce00cf1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-fa20606ba3941776",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-fa9f89b17fa8fb8b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-4cf0142f6ef7ebe",
            "relatedSpdxElement": "SPDXRef-Package-fd6ad130a2e631d7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-586f486e90731fa3",
            "relatedSpdxElement": "SPDXRef-Package-acff888c733e87f2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5d5f7ebd33da1f89",
            "relatedSpdxElement": "SPDXRef-Package-76145a4180d15301",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-14510d6a8b0cd139",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-1ec80e8df64ff19b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-22fe43f4db149634",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-257dcf2b98ce2752",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-271fd76b424a4504",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-29686560e924aa75",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-2d5302ba1805f9fc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-332a03daf21ba034",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-34136e694402c8b6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-3d19e4be8f89b56b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-45d534c956bb7dcf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-47c6a1db94ca5a8e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-47de24b6558d1bb0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-49c1f9f206a77b6e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-5760f2d736465ea9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-61cea185a8782bd6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-68f5fd0d097609c6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-6a1cada5125f03c9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-6da851682ee0d7aa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-70693c54e896d94",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-79a1aae6f2d6d051",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-7a79439ee942c090",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-7c43f780ca90f9ca",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-7ea8de7b1511f4b1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-7ef20b77d9a1134c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-8195499da1b949b7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-8473106a05591f17",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-8758a2fec5f4d8c7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-8852daaf163f4127",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-888cf90b3105452e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-9040bb046f9dd5ae",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-94f6ec9a9859fe24",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-956c97dd875f4ee5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-97e8bb3b1dac58fd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-9a42da0bd66b749c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-9aeddbd30f2c5ab5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-9e89f94d35908886",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-a31f9c37c71194f2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-b0728aa20ef5a549",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-b158bceeb21be17a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-b3e3b7500d9bcbc0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-b7080b790b7503e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-b73813f360bdc796",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-ba8b03f1de75b2c3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-bc250780302436bb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-be4d9690c1711256",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-bebda71a79cac6bf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-c43dfa69ce01b34f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-c4b2f3dbf13c1b73",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-cf915da42e01d747",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-d15091dbf7b21268",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-d219d05b92395818",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-d678f49db7b246f0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-d8b319733c41ebc2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-e913b5be68721a50",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-eaf7458ade1fbb9e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-ebf9c6caadca0ed3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-f157c6091ab2dedc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-f372ddea0813003f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-fe349c390f5cd0ad",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-5eb8ca8d6d1aad6b",
            "relatedSpdxElement": "SPDXRef-Package-fe984c853a1aed01",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-621e16be702d2bd7",
            "relatedSpdxElement": "SPDXRef-Package-8a44efa2b3e9f2eb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-621e16be702d2bd7",
            "relatedSpdxElement": "SPDXRef-Package-da03132afa6aac87",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-65173b2aef0a5981",
            "relatedSpdxElement": "SPDXRef-Package-bb4664d817638e25",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-65173b2aef0a5981",
            "relatedSpdxElement": "SPDXRef-Package-d453e378936ce2b7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-65173b2aef0a5981",
            "relatedSpdxElement": "SPDXRef-Package-dd157e6ee26504a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-65173b2aef0a5981",
            "relatedSpdxElement": "SPDXRef-Package-e60152d66a4ae83e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6e7f455ccd949371",
            "relatedSpdxElement": "SPDXRef-Package-b6933968c99d255",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-2dfe041912593b38",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-317d4c5c953370c3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-36624e08cdffc664",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-494c711f170cd76f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-59d8f73a8673d77f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-5c408f20a2afde40",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-656e2eee3e7b43d5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-8189c34da0fde783",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-8df08498e43c765d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-922729d11c75520f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-bb50b75feefdde35",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-c9f19d063c7a6112",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-d332c647cd3344a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-d42890b4546b57b2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-d4ac7a4b6bdfec12",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-d5cb82d3b5ae86fb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-d8983be51a1a6454",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-e0fe1fed0dc79ac7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-e1c57930cf1d6188",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-e52dbe77067df9b7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-f37b6d99a90a15bb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-f404a9d9685b87a7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-f490e0c37075fbc4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-6f3bae14384a6db9",
            "relatedSpdxElement": "SPDXRef-Package-f6bed27947014a29",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-14d81c3fc2f3d6e9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-17d1831622c947da",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-19be10b93910e528",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-1b68b153662d76f5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-1bc8b846e8bbe77a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-1c71d031d5670707",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-1e0ace02da3712f6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-1fdd69f50d4261e8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-1fe015793a30da4b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-1fe16f940a835d07",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-202f437d07392d2d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-21b0a2db92dbe365",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-2221e882cc834d68",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-2454a455824e6a8f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-24a44c3e1cc194f4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-28e939812920a376",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-2bd2256be6920e8b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-2ea5f25bd4a955ee",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-2f4be3792c4a30b8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-2fa7d16f4b56c5bd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-324066eba5bcb1e8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-3311bb6e336631ab",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-34ec2462ec678fe0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-36a2b00c31597dbe",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-38281f5f4a5c3e42",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-3d3aacf4949ea716",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-3fb6801bdbe83d63",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-438347e89351fd5f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-46ba61a13d02ade7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-4c7e2d70fd16af80",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-4ecc0900c9519ca7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-4fa0a584042ffc28",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-53987fc4235f4c2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-56cfe3306e485fbb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-58d9a1cf05e57b60",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-5a8a56c91fb40b37",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-5b0c0ac458531ef4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-5e5fc45ae87a701b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-5ee65dcf0e90eeee",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-5ef5fd0d04dd227c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-65e839ff952f03be",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-6899912102f2e07",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-6b9ce27972c27291",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-6de400e79a6793bd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-6df52d1ea01f76d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-6f20a03b99d7a959",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-786a1789de8a2f69",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-7b6852eec1ef8ecb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-7ce38a3abb8210c1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-7e1e6cc217e2f2d7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-7e96ae3b215997c4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-7f52ee3824922f2d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-802f89ee2d947d62",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-803ad8fba4bc0923",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-86eec57b41cd0f8f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-88d98c46fdea3726",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-89c3340d50c8c4d0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-8d9a8a7d22d8b4b2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-8fbf63ac80b19452",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-902ba6d92e3f6aed",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-9681a94ad4ba46ea",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-98c8957b169e9685",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-a1654b33cdb2089a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-a1e3c00dfa9ef3a3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-a36b97cb7955299",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-a3b39241949d2935",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-a4bf0d94bf9eb99a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-a555ed29e4a6ed1b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-a705dcf2c99fa99c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-ae8fd60d4bb36060",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-aff45ef00bade10b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-b1a91591d9ea5a6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-b3ca0d54b1a9fbbe",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-b6cf9969babbefaf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-bbf75445c90c3cfe",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-bf4132a70996b8b9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-c1664afd7bf7c376",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-c505e38b8b9fbae2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-ca2ceb3d10cd0931",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-cac113a9539ff36a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-cb5eefa6c2adcd4d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-cb62cd229eb999d9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-cd2c48d62ef7245b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-d1ae359905be23e9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-d415e8149271f8e8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-d9df5f6bfadf34cf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-da3888a8702d744b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-db4078cb392e7002",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-df39e29d7e5a1b6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-e14968c4b828f956",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-e16a8fd54bec6c4c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-e183e06f86c92585",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-e298fc91d7c39e2f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-e36a6adb01e34559",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-e3c84da1c4f39afd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-ebbc74571fbb8fa0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-efb93dbd69ceb942",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-f0f4a7af3afea8fa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-f28c5c3ad7fbb3d2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-f43a8cf78b8325d3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-fab781352528fbe6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-fcf2dd3fb85334ae",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-fe88215bd4fca0ef",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-feff4526872a19f5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7096a333896e3de1",
            "relatedSpdxElement": "SPDXRef-Package-ff6460d2f55f929e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-128a2f63f326992b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-12c10e62f49922e8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-15eddcf4dbb1a2b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-1755572320e6c5e9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-194eab40d5165249",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-1c8fc9d601a70863",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-1da1d00b0e2e96fd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-1e1a62feb0120a80",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-1ea51742b4c4d103",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-21332107558c01b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-21fea9f510cc61da",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-23aae5fac8ffcbe6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-258484a05e112a25",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-297f6dacf966bd11",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-29a1588123edbebd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-2a15e58e24a0c33e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-2a41cec84e245808",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-2ac0fdc6d9ce8142",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-2d0870c32edaf3fd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-2d66164e94daf627",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-3012defb287f2ddc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-35522319ca01e2de",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-3cc9802dce1a7b58",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-3df42375e50b2c36",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-3e18b65bedfa8b51",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-40423bb145ed268b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-40cbad20416f47da",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-437b0e97a6994fc9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-45525d7b197c88bb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-47d7ae3a17fa663",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-4857df68908feb9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-493ecb46d2e908fd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-4b218f695b4c5da2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-4b21c004f09cd666",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-4dce88a4d23ab43f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-4de3e5c8acf1ff95",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-4f858685fa0ad833",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-4fb0e67f633ce1ee",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-5159838af7f01f66",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-53793596e720a072",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-552127d1aa8fb355",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-582a6230102c70f1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-593fd701ab897b9d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-59a0be9a27cc847e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-5a585f32f9ccce40",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-5cf31ca27f6a97ac",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-5d0a7c1fd6d080ad",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-5de5b704e10d01af",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-60c810f6c9c1d241",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-60fe936a2cb2227b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-61b1582dc9e62fcb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-621e16be702d2bd7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-6e4cd353399dea97",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-7297919d783eb59d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-73aa8832f0eb927f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-740574c73fbe6a66",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-75d3a4eb00eadaeb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-76178d2cc5855394",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-76ada16067071107",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-7a73372a8acf33",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-7f76746accdeb823",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-810cd1cb3ef92fe",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-812a22fc3ef9b78c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-83e2f965974d4f6a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-83ffbfd42804fa68",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-841a2bcc19d877dd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-842760e1cb7cfab1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-84e99bb4996b9414",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-86286354a3b520ff",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-86fc2155ee96b6aa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-885b5028acb2e550",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-8a44efa2b3e9f2eb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-8aef1338d20743a5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-8ce5ca834327c772",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-8f768d74ca17c8ce",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-8fa5db314fdd467d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-903194f8f87e3e85",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-90af879db55214c6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-94fc87ea43983c40",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-96ae128e43253639",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-990f48aaf256d43f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-9bde199bbe443e63",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-9c906279178f5486",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-a17648f592bfe456",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-a2324029db0de420",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-a2866f3c8ae310bf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-a38120abc94dac2f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-a6a5d18134de0832",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-a81c9e25bc148296",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-a835d3bde8e7049c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-a8405fb1b2272f06",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-ab3c87b77ac53c85",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-ae93ad68689a13ca",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-aeef3527eaafdf6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-aefc4c92a73e2d05",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-afc706b6ca32c637",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-b0fe0f062ef05ad0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-b268a766ee63def9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-b2cb3092c1591a17",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-b5a2f4c54dcfbc42",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-b8a9918e03efce39",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-b8e891030be801be",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-b93b0519bc262144",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-bb9bc4e4f026e1c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-bbcee0e9444564b2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-be11a052a27e5166",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-bf50d63b3a4d4d78",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-bf7023cc4abed418",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-bf955d1890220224",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-c87cb18774bc6c7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-cd3511a54f7f1a2e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-cea52996d2eab1ed",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-d06b2bc7c98208ae",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-d309a54a9be87317",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-d3a1cf1daadd14b6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-d3b3c1bca5e85619",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-d455c4161d676a19",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-d4752f1f6e966df1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-d80f36ed0e88f56f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-dd9715842c477437",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-de260ec9b4dc79bb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-e0318d305d821251",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-e5990b84c794c5a4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-e8bd44d5d4610cd2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-ec653561f2ea10ee",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-eda1786878049bb7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-efe0aefc3eb9e93d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-f030f9c74cfb9c33",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-f07f475bf69d7033",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-f1eae12bf3bf7611",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-f43654e6de9860b5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-f70c7e8a1425ceb7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-fba833ea2f73bfb6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-fc66c8f2b4875474",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-fdaeade478aecb69",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7148b67fbbfc5116",
            "relatedSpdxElement": "SPDXRef-Package-ff72cb238d31e440",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-78555436f74a7241",
            "relatedSpdxElement": "SPDXRef-Package-64e444af67b2e657",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-1b83ed0b30dd8b9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-1b892627b2e32e55",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-247589ccfb53e59a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-2f0c126d2036cc52",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-2f7ee80f8665dc79",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-2fc8559bc3336cb3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-36a35a5600b085d5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-36c681bd0e15af65",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-39da3aafd3882d03",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-3a1a7dcabcb71906",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-3a229054a21f4521",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-4374d5b17f0b863a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-43e81cd0ffe0e096",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-46c9dd1668e0e613",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-4c02f5ba36cb223a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-53c7b2c90051a06",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-5538982cb1f08162",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-55d93aa83f50508e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-568e8513c6cde5f8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-5a36d6f5f75903d4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-5dff78bfff72b941",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-6392521ba2886e5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-64b1103e539bd70d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-70f3eccf93f99e88",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-781a8db67562bfca",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-78b097b1d3e9d185",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-7e1abcd46d1f838",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-82f06832d4baddb9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-8a5009e065c1853c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-8be68391adada0f4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-8d6a525f0afb3f46",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-93b6afb86c0a05c2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-9446cc4f3d684163",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-981aaa1ebedd8d92",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-9c83d4a7ed22c890",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-a244a1b8551e827d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-a347e159689838a8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-a4cc3fe7b9c9e740",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-a5240fedef08c804",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-a577d82397f2e9c7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-a8c9c2fd03e20f12",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-ad35e37328fe84e5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-b61e92120f2727a2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-bc89ff2361f6df",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-bd73956f7a6b98e2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-bfcf3dfbd114a3f7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-ce88a3834e870fbc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-d01672d0b5f55118",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-d05dfc7eb7e2c907",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-d424ef0e9f162055",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-d49cd39afe8fb4db",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-db0a3b376c45c173",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-e08f923a50bea3e4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-e1ec182d9d28157c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-e32b205c62175894",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-e3620f677d8a6ed1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-e6bd5bdcd97b3093",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-e8f57d97dfd07db2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-e9d1b05320d3bbc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-efe0c171d67bffc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-f212415be4cead3d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-f37e760775505d5d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-f5a1dc90d1035610",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-7c620c1790eca44f",
            "relatedSpdxElement": "SPDXRef-Package-fcacb38c3f44c24e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-884fc77987f0328d",
            "relatedSpdxElement": "SPDXRef-Package-733dc3964c113f2c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8a9539292cf2a39d",
            "relatedSpdxElement": "SPDXRef-Package-31dd5a51643f0ccd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8e20c19e652671f6",
            "relatedSpdxElement": "SPDXRef-Package-3f45aba3583ceef3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8e20c19e652671f6",
            "relatedSpdxElement": "SPDXRef-Package-5c208519d1ab7b22",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8e20c19e652671f6",
            "relatedSpdxElement": "SPDXRef-Package-606e0fc3b04d93e3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8e20c19e652671f6",
            "relatedSpdxElement": "SPDXRef-Package-70472830e6cd316a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8e20c19e652671f6",
            "relatedSpdxElement": "SPDXRef-Package-771140a099e8f868",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8e20c19e652671f6",
            "relatedSpdxElement": "SPDXRef-Package-b855b617f5caf4f9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8e20c19e652671f6",
            "relatedSpdxElement": "SPDXRef-Package-de8212e39e4ce2d1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8e20c19e652671f6",
            "relatedSpdxElement": "SPDXRef-Package-f91d87c8904ce840",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-16d526465c32a0bf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-1d1d9a62a2c55bd0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-211fc59314df5310",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-226e84253b3b892f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-267097099fe55051",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-26f09fa7cb728fc5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-27a1dbac5356ee5f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-27caac7f456adbd9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-27f870cdf73e5acd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-2db20483a33e4d24",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-2e08fc4f06d15c99",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-3150439459f53bfb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-363b8957865cb4e1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-367ec572a088ed2f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-39e695e4dbe8093",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-3b34c76798023831",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-4282fca56cc78921",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-496667ced83c6e6a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-4b719d4de90b902",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-51861a8757d08403",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-51e3c9c833b181d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-527a2e50e8943890",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-56ae89562b937e76",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-56c1df0a0b38149",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-5ab30f3a07d0ae0b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-5acda48b81605c4f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-5c411450d1c845a7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-6340b39b454f2033",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-66ffc3c67c30f0f1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-672f50ff2bc2f005",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-680eda5663a81d21",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-698f62ab99181311",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-6aa19559f68045e5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-6f27fdef4a28df0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-6fe18635d02c9b62",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-74981515c64ca3fc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-75acc32f617d3a63",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-761de74b5d882a4d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-77e708d1fbabd61f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-78e686795cc3a72d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-7e7e7f2ec3085fdf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-81e6cf549b9fc90a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-822927a40a480ed1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-832021b617d752e6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-83b38348fed7141a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-8551795144e8ffad",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-8866b85f3e6bb685",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-889cdeba1b8b0856",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-8ae1273d04dfbe25",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-8dfdfe03cea4ff49",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-8e7d4aee64d76f55",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-8f0133237fcedff",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-90dad43fd545dc8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-9126a62a7a1f8e1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-923cf7e901942aa0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-966af6870b6842f9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-973e019dccbd2a2d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-98c6b6ea6249b007",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-a1ed70236cd9d624",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-a3c051245694fe50",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-a48470b86db354b8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-a5dd44129452b076",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-a890bd506ca8761f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-a92fb3869908eccc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-ac40476faf798ad4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-b3fcc2b6832c01f2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-b4f3bbdb3140bb0b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-b5f377e426e8f62c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-b69dd72e5513938f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-b7a39999e4b5fa08",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-bc8ede85b2339d0c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-bd4fc102962fb084",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-c00143d61dc0ffa3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-c0f8d2a80f1579f0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-c11855098d73bd27",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-c1d3af003b89ec66",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-c2a8d30a3dd16bfb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-c3a6bb7cbc220c6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-c82e2e0fc11f98f3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-c8fb32fcb412823f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-c94a15f09ae22d7f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-cdf40eb27789516a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-cf43422cca7b6c68",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-d0689ea29dc48308",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-d0826d6a635e6af8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-d13c91b1699b05b9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-d32c777437b8cb82",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-d629be0cbe3a12c8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-d7ff7b8b86907369",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-dcb9d36e55772f63",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-dccfdcba0a60c3e3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-e4120a5a99c57ea9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-e56575eff00a854d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-e70572c59c2e170e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-e7c08c96309d4ff4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-ec37b23b908d2fd3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-f10ea18b835249aa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-f2659c4fcaedbc7c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-f2a373fac91cf6f2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-f2b7b019404afa2f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-f4062749a120de91",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-f48020645600d1e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-f4b9750d088563f5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-f579bc899292e0fb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-8eba896df08a3eab",
            "relatedSpdxElement": "SPDXRef-Package-fef67622805a1def",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-94883f76fdecdcf6",
            "relatedSpdxElement": "SPDXRef-Package-dd4b8ae26f37652b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-94fc87ea43983c40",
            "relatedSpdxElement": "SPDXRef-Package-c917854003062bc0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b23d4f24bb8391a8",
            "relatedSpdxElement": "SPDXRef-Package-6c9e1491775aa851",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b23d4f24bb8391a8",
            "relatedSpdxElement": "SPDXRef-Package-7b0dc7b212c56439",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b23d4f24bb8391a8",
            "relatedSpdxElement": "SPDXRef-Package-f1dd2fabcdbebd65",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b23d4f24bb8391a8",
            "relatedSpdxElement": "SPDXRef-Package-fd5664646ab80c35",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-1112d300e125d13d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-120a27a65cad987",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-1220674150a40597",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-14c804413ee850a7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-1cd3e846be3d704c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-206383f5110ac666",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-20a2781e6b76083e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-224ae16aa19f9888",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-22528f00353e8f0c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-258b72fb2271eae6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-2975033999b77ec6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-2e99792fc2ca8f9f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-32559e438d418b6c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-33859a2705490ff7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-38d9959e7078fbd1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-3aa3689bcffce799",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-3b2285423f1a024e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-3b6bcee61ba4f79a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-3c9b355045e22773",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-3cf6e4dee70f5cb2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-3de97a44aef66d79",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-3ec76b6d51edea86",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-436de61fe704c214",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-46d047b6a1c22787",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-5034dae28a00fe43",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-50fa137262931269",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-51304ae6f867b5ea",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-51ba42b2a967a27a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-51ca506b72a8622a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-574fe1ba2f3a711c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-59fd2ba686a5a6fc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-5b61f8e77198f25c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-5b7d2328cffa936b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-5bdda5de6bc63b8d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-5cd4c8f53eed94fd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-5eae1721852ee555",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-6119248f52d33462",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-62fb0502d7836207",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-6360913b7008996e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-67646b5486c1cbd3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-695412a39bb84809",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-6a5d1853a8c1a562",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-6b30fc54f933a5ed",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-6df49ad18d21d6fa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-705cc7e8a726d6f7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-7376b628f15ff127",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-748c2aeec8a834f9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-74f8e7ac8bd29361",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-7bfcce27ec707790",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-7f2efcbb20d68c2f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-7fa366b1181e9ed2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-7fffa0891a3b8782",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-80ffdc478dc422d3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-81938d4518718e33",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-8223c983277daefb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-87177b06e8786a3a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-8952c2ed8d836ae8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-8958795c10fcad2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-8aaa8c347b5922f7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-8b777f7472220809",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-8c433a92e7a11fa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-8d52dc1415ff9ceb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-8e3fa1110ad84c62",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-941e0095a1429f5a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-954df8354faef8bb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-95559ac27e4b864b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-96af5434000ff403",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-99bb31acbc325cc3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-9c8f377096eabe14",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-9e9ee0ae2de9dc01",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-a0ac46695f2f6680",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-a1eab023a83dd6f0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-a42eeee628be3c00",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-a86783f862b3430",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-a87530321d3f0de5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-a9166c9c069fcf29",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-a93f87263bec52a9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-aa08c5a80c1f1d79",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-aa24cedb836bb4d8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-aa710909a193a1cc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-afb3fd116b9d9793",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-b1444fbd8bada195",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-b1b383aeb9f998f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-b241a060dc4e5933",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-b2d3cae01b9b5735",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-b475087e2da302ed",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-b56238815d4e2665",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-b922b6ba708b7fd1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-ba003f088c37a0dd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-be4da1bfc57aa403",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-bf1564cecdb0cdc2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-c0a8e0710dade31",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-c1c6bc1752c7eb8a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-c267f7f631e508cd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-c3c78b0a3a41d007",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-c553a55958270424",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-c82814aa48217ba4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-c997883c00276722",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-ca6cf9cfeaf155c5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-cdc8ffc34a9b901e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d05e5b9c821736b7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d06f7fa2818f43a1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d145bf924a23c2df",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d2308c14e6048cce",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d43e7120f01e66d0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d493d4faa5ac2f36",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d5b4e02a0c27f6a7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d5ef63816e4b5eb6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d68ceee8e9917e61",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d6e184fe7340db91",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d9290c99f1575661",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-d9887494873cbc09",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-db5e8d7f47e6d529",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-dc182d090be15964",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-df7d6bc498fbf053",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-e0473267349a809f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-e0619880b0022f50",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-e06e9551b6c5a3f4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-e11a6d9178ca6522",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-e11c20686d0c5714",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-e29dab2eea4a0324",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-e4c9518cfec45a86",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-e7d175b94d2f8150",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-ea5184d39150e55d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-ea7e20820a0318c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-eb1583f5e4535b88",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-ecaa8cf3f76e384f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-ecac010a2d91b87f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-ee676c1a021342e9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-f08d574b4dba2bd1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-f0ea4036bad524f3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-f1fefff7d85d88a5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-f3da62783c553473",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-f5533b3835401e9e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-f797c5fca3e42c39",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-f7f4685207e9e24b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-fae86ba88b2e8d0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b813cf1e938b7a8e",
            "relatedSpdxElement": "SPDXRef-Package-fe0589d25b056d4b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b96db1443698f161",
            "relatedSpdxElement": "SPDXRef-Package-32e073d532a63052",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b96db1443698f161",
            "relatedSpdxElement": "SPDXRef-Package-3eaf05763910629b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b96db1443698f161",
            "relatedSpdxElement": "SPDXRef-Package-59c71df68b5482b3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-b96db1443698f161",
            "relatedSpdxElement": "SPDXRef-Package-de1b55f03b5dea79",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-120e2c109a436d87",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-192fe926813f6bd2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-1fb2d3f2ae3db64c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-2047c45c07c436bd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-28b4e0fa9c5afad3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-2deddcf8a11a0d8a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-2fea2ab188412a63",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-310cce76f2d05fe9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-33587ea1ed55314b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-3606e4b929e19ab4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-3a872b38355f5465",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-3a91acfdeff6f52",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-3d14ed732480723d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-4088ea23cd83dc15",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-439e2b07aae76aa8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-496cbee33d73bb3b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-498058cd8f630587",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-49b76d4262c3cf5f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-51ea420f72cf8048",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-52e08bcbfe37a355",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-57b8a7143d968b75",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-58df0ef40590f090",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-5b0663fd54187379",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-64bd129bdfc4545",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-7cf29826bcdeb72c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-8082f8aa173cb098",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-82a057a240ef86b4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-845898ecda4ae3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-8dd71a0ee7044c56",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-91a0944a91d4e5da",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-925dbd56499412dc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-97e126a4eb13f31c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-97ee15f6ddd2003d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-a31fd47bb1611649",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-a57fb493995a83e2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-a877ba38b7706307",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-ac51b3e99d4ecc51",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-ac6bebd6dc76220d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-adeaa40642371a95",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-b1c5b1d42b75a214",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-b24c6b379b7755b1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-b88db899f65202f6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-ba7b993169d8c3be",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-bb7cb5da3adacccd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-bda649adad3d1843",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-c0759e8c75ece7c6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-c1e0ddae4971ed0d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-c8e1d5a2ac7427ac",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-ccdb3a56b723a0b8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-cdf581fb63e0a8d6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-d9a774bf7ba4db93",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-ddbe6048ae708419",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-e4e6e0ec896dbe83",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-e5e3aa0d95f992c8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-eedaa0d190e4419e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-f3b7f3ba029de891",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-bcfe63e78237e2e8",
            "relatedSpdxElement": "SPDXRef-Package-f6698e0ac6ce7f2e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c8c9fda8c00ee091",
            "relatedSpdxElement": "SPDXRef-Package-28935da1713aff0d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c8c9fda8c00ee091",
            "relatedSpdxElement": "SPDXRef-Package-45a4a5f90bddbb01",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c8c9fda8c00ee091",
            "relatedSpdxElement": "SPDXRef-Package-4ab0c13ad9b89ba5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c8c9fda8c00ee091",
            "relatedSpdxElement": "SPDXRef-Package-4f68fc5a14d8cc8b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c8c9fda8c00ee091",
            "relatedSpdxElement": "SPDXRef-Package-7ae5c6c40b74dfee",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c8c9fda8c00ee091",
            "relatedSpdxElement": "SPDXRef-Package-8c7f7d4485fab4ff",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c8c9fda8c00ee091",
            "relatedSpdxElement": "SPDXRef-Package-ab3fc6cb3018493a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c8c9fda8c00ee091",
            "relatedSpdxElement": "SPDXRef-Package-c36dafec6a126e9a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c8c9fda8c00ee091",
            "relatedSpdxElement": "SPDXRef-Package-c44c790dc7e9a3c4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c8c9fda8c00ee091",
            "relatedSpdxElement": "SPDXRef-Package-d4499dad2109243",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c8c9fda8c00ee091",
            "relatedSpdxElement": "SPDXRef-Package-e6b816de69987864",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c93956088adf7a7e",
            "relatedSpdxElement": "SPDXRef-Package-76145a4180d15301",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ca399d4af3b495d3",
            "relatedSpdxElement": "SPDXRef-Package-10423372fd2fbaba",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ca399d4af3b495d3",
            "relatedSpdxElement": "SPDXRef-Package-2c7f724f770d2cdd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ca399d4af3b495d3",
            "relatedSpdxElement": "SPDXRef-Package-634e5e6f6c3d965c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ca399d4af3b495d3",
            "relatedSpdxElement": "SPDXRef-Package-7f12cde69c20bb8e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ca399d4af3b495d3",
            "relatedSpdxElement": "SPDXRef-Package-92e87f21369c5d0d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ca399d4af3b495d3",
            "relatedSpdxElement": "SPDXRef-Package-a3f7069b181c5576",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ca399d4af3b495d3",
            "relatedSpdxElement": "SPDXRef-Package-ab30ee571dc67a85",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ca399d4af3b495d3",
            "relatedSpdxElement": "SPDXRef-Package-c5fb63f0ace830c1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ca399d4af3b495d3",
            "relatedSpdxElement": "SPDXRef-Package-c69a89532f2e158",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ca399d4af3b495d3",
            "relatedSpdxElement": "SPDXRef-Package-fe247c7e1ac8771c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-102caab6814043b4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-13756b990f9d81d7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-1817710911dbf24",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-1a24e91a44a878d6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-1b0a3c3e196f5f07",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-1fa40fe545bad3c1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-20bf0443c26f05ae",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-220c24d090824076",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-235adefd0700b5e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-23b27525b93aa517",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-23b9e6b741d03445",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-252c52cb125de224",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-25c4f302493eee5b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-268f99debd8b1ff5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-280dc3eaf7e014f6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-29683f12c5691228",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-2bafe2a32223e397",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-2bbe95e9d4cb4a65",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-2f504fc23676cedb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-2fde3e43fc31bb50",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-2ffc910b9931f9e1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-31f6522145dbd4f8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-32acdc872316cd5d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-3303f3ad0d47aa27",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-338de3ab9440a6e1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-350982163b417d88",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-367c399f8f58c8fb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-3deb88ac8051c39f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-407bc0d21ebe8ca3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-40c9a4656bb88358",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-4121dfee08d8df31",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-438075c221020f6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-446a9b0b615f43b2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-4542a5232be29aa1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-4546a5d611aa3dc7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-4565a2839c52c608",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-46761096dee1c4dc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-48dfdb25317bf9d6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-4a1cec44c2cbaba9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-4d97b63be4deb123",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-4e94d5eb304401b3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-4f6c416488b3f66f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-500fda77f411deb6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-57b677733df20924",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-58ba9ad4c937ec98",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-5980ddcbe71ba4c2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-5a09ea6369265274",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-5b5f1021b6857390",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-5baf2ae801073162",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-5d2b7828f9ddc4e5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-5dc779f0119cef0e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-5fd0707c9e73cffd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-62e78f06fe56898c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-671fce428b3a39aa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-693ff57298d220b1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-6a111db0cab359c0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-6c50f2238316afbb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-70baea2bea2c6710",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-7102ce69d66406f4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-73998de916e0ff60",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-73bc928fc5f43001",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-742543027302cbf0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-753ce0a1387c1007",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-75a2b07065c5b1b4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-75f4f77b76a07804",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-76112400e3420a16",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-76fa9ba59feb2708",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-7710e4e60d30bbaa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-791f21ac9fe33838",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-8149c39bc044974a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-8608c632d0be9ec",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-879ec22f749a0a7b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-8aab264952e1252b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-8efa432900184991",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-8f7d521369ed754e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-908d8b7266eab875",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-90e8203a7d4fe594",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-9461cee19ce0122c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-963b58bea7d1bb74",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-9b5bac0bfcd64ac0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-9c5bd3df9de0bd4b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-9d77777daa9d781d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-a1c8eda1e7454de4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-a3e5cd6a8f0d7a9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-a548aed7633d0281",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-a5e42569089d075",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-a770d27fbd2ebf26",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-a8ff95a83e68be1f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-adc6e2f02be972bd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-aee2e9da488a8c12",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-af4cb7b7d5dfbdd3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-b19bc63812f3699a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-b29895681dfec53",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-b30ca15ba9a1a636",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-b410fc7c9af5605b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-b491a9c4491afde",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-b62a7f4754da4514",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-b729be043d192ed1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-bb678829cfe8124f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-bd6a8f32cf3dbac4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-bdf8e0529fa3bc0c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-c03b402398119b93",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-c125605b390c2ced",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-c1b680c95e2fc15c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-c27afa6f6334070",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-c43d4dbef04dcbee",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-c64ee85acf5e1181",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-ca16529ae2f3d0d4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-ce32d9a074114584",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-d071adbf0e99d8fb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-d21f9f2b6b02ea30",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-d585644aa42e99eb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-d6f9711cbb7ab577",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-d73d3a1da2b8d0e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-d740b2df817af0d5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-d81aab814967b8e1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-dfb381a597b028de",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-e1a4ab88e61f598c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-e2d9d5346e0ba47e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-e57d2c63061d34c7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-e7a794cf35d7c765",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-e7b3f37a2f38a9f4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-eb7a691bb493823a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-eb91dc1cb7f9042b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-ec9ad43d4627a1f3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-ee87d3299ea59ec9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-ee9ffad01665a613",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-ef2cf8101d4d6aef",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-f020f93614f247fc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-f11df7d24ba06128",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-f1cfea14d66d5c25",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-f231600bb21edeba",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-f286aff73ebc9046",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-f41c20a971c851f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-f52f5771c374aa4d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-f67f4fba0691c4f8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb1224ccf06ce876",
            "relatedSpdxElement": "SPDXRef-Package-ff0f223a3cd85f8b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-1127d4557957e1f0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-12e5ae33c1fd960a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-1abf254323ab6dcc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-1d519d9505d6475b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-217cab5979f4b527",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-21b4533c5aebff09",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-22af25ebf989e6cc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-238066655dea009a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-2d823aa96682d86d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-36b9da1a4eb9458c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-377df94d6a34dbc3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-3d4baa4fd2f4b798",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-40a4b0adc2bbee17",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-440f0d2248427c9e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-46792c8eb236342a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-5a1892a1f68063d5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-5a99498aa2e8c633",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-612e99bdb1ebaa9c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-6190a794d15cf808",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-63bf917c0af3b102",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-695710b516a80889",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-729f6f7753f21a77",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-777cfea077dcce8d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-7830ca0ecb0aa93d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-7b0d001f95bc280f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-7c7d3efcaa3ab067",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-89d2f7cbdc5cae5b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-8fd49026c1e32d47",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-92876bb529a51353",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-9297d95748ddc16c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-9422702515cc8431",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-94f74f476e7e236a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-9781ce54a557a1e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-a3767c586bdd5264",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-abe87daf70d6bf5b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-adb038ec58c86d14",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-b9aaaff5bf787d91",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-bc594ae11ed4cc10",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-c463418a28d9af1c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-c4e14388e6e6f781",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-ca9e1581ea9f7a90",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-cfa2111e2189e0f0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-d1155de0b0972462",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-d331915c1c0717cd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-d3a524edf1b4bc71",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-d7514982d7b68ea6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-d8297c3d77f92e4c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-db546db0cdf9729f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-dc383dfef8f7473a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-e0ca1792d36b2b3b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-f11f4e1946857703",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-f39daee13f82d1ca",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-fa9e86531a9aea01",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-fad7762f8b504e02",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-cb83f9f59698dc01",
            "relatedSpdxElement": "SPDXRef-Package-fe0e87e93f60c3b9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-d455c4161d676a19",
            "relatedSpdxElement": "SPDXRef-Package-bad172524fe5455f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e913b5be68721a50",
            "relatedSpdxElement": "SPDXRef-Package-b2aa4d938f0491a5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-147b75ed04cf7570",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-165c5489856ba285",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-21082fc93d4b41b1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-218423354afd9376",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-298d738f11462108",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-2e645403c8db356",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-3775e7280039dca0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-382e47fb2348f9e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-386a6cbc3cea2559",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-3ced79c9a0fdf436",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-3f8b86c20e23a011",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-40a6cec3caac401e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-4c2ee5a2b5b7bb9b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-5232bbe38a4142fa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-584fa89ea4e2f81f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-58a653298a2d86db",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-5aea61a3ab00ca65",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-5c6275b8c97e4b9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-5dec98a267c0ed2a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-5f93a343e01a0f6f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-6330a8d481b03e7f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-6cc167f409181985",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-76f8608053ca51c7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-7c427cd7e2ebe5fc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-7cca417f9240482b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-7fc5e755a0947668",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-83d7490ba5be2d3d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-860037d79c7811b0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-8ac705e984f3c476",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-8c98caf567a128eb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-8d32d8826cfd6659",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-8fe3b934fb61fcf1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-95694d87eb7838f0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-9d257bb0fc5bf1e3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-a221c083458649f7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-a6a1fc08b7768c0d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-bca68790568188dd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-bf44fc38d5a9af2d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-c42d04808ffe7e8f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-c5792e559a478b72",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-c7bd0e9e3dc218f4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-c936d0f8bc675c61",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-ccca5e57f6b020d8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-d2b9cca04027ba50",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-d657de484e414c2e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-e3acb1b4ad739442",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-f1bae56a258d2f96",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ea2cd87abc9fa562",
            "relatedSpdxElement": "SPDXRef-Package-fe10ab8c1f4ccc79",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ef73f622c7f5b6c9",
            "relatedSpdxElement": "SPDXRef-Package-6ecc9a7bd929bd30",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ef73f622c7f5b6c9",
            "relatedSpdxElement": "SPDXRef-Package-707147c689507a07",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ef73f622c7f5b6c9",
            "relatedSpdxElement": "SPDXRef-Package-7b66de0b69281962",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ef73f622c7f5b6c9",
            "relatedSpdxElement": "SPDXRef-Package-835c90f4ad209b74",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-ef73f622c7f5b6c9",
            "relatedSpdxElement": "SPDXRef-Package-d888de7726e44e73",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f11729830b271a80",
            "relatedSpdxElement": "SPDXRef-Package-71147429596d06b8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-11dd9eb7c7069eac",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-14744af34905031e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-1540e017ea1bcc84",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-1feead82d13a911c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-2476fe91d3dd9337",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-27037e94f698cb04",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-2afac8a064e0ff0c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-2f9d862698f69fc2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-3593cd4641f97b81",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-3643b5f37be578c0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-3a29c670988972fb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-3f6184f993cb8777",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-42610bf63142b0c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-4983f13859de7fc8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-4bdea8f12b83e5c8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-4c2abd6324a3091",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-4d3bbcba199abae6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-555ae7ea0745d378",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-583404336572bf5c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-5d5f7ebd33da1f89",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-66bfdaacb58e4254",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-6d26434fa15235da",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-76145a4180d15301",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-7690e728419a2c4d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-7b8f5c899081cb44",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-7cc5cd27dc00c256",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-7fc05ef8dd656ff2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-8009498a67c4c1b6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-80fe4881a43565ab",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-815104e085d7ccd8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-870607a198bf82d2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-881d35dc6a8519ec",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-884fc77987f0328d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-8855580222cf060e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-89b3925d4e0b5389",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-8af44b0959a94c7e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-92b72a1ce9f06013",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-94883f76fdecdcf6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-96f2edd25b3b3a85",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-979346de3fe92ef8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-991810d879a33d0b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-9b3810b95b790cd9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-9d3c2615d73e1f81",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-ab407ad4f830c220",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-b2b5a4aa4268b6ce",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-ba46c82b27eb9184",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-bd4f9e9d389d3299",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-c221b6d4aa0c2eb4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-c3d043e928810aa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-c6e9168ab2bef408",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-c7694d1d5a4d8589",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-c93956088adf7a7e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-cc13544dc261a8a3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-cc2aa26c0ffd4bcb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-cd043aebc5014f20",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-d88e1cb456f6f13f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-da8f4b7ed5fa26f0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-e72cc8abd49613e4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-efdd38cc0672b305",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-f22abda13ab5f4b6",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-f2440796da3161ef",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-fbcec774f036125c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-fccd09f109184450",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-f88822e63dfd7ee2",
            "relatedSpdxElement": "SPDXRef-Package-ffdfe872e295ec5f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fa9e86531a9aea01",
            "relatedSpdxElement": "SPDXRef-Package-2a19b0158bd34a81",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fa9e86531a9aea01",
            "relatedSpdxElement": "SPDXRef-Package-8e62683cbd6ebe9e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fa9e86531a9aea01",
            "relatedSpdxElement": "SPDXRef-Package-9656dcd84d07c4f5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fa9e86531a9aea01",
            "relatedSpdxElement": "SPDXRef-Package-d288062c8cdc782",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fbcec774f036125c",
            "relatedSpdxElement": "SPDXRef-Package-408af1136ce09e8d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-30557bb4282a0206",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-336808ba6ff418d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-371696d84416131d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-3b87ca26c592f2a4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-44f35d87c75f3815",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-493d6e3fec5e1628",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-49d50980c7cfc331",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-4e30daa11022667c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-4f42c21b58d63c4b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-50e0719adce0ef2c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-54f9832a56d89e93",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-56592957203e65e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-5aaa426bc694334b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-5eae294b30be7d9c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-73f9a0ff9ce54538",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-7463407eef45ff37",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-77f79d29dc2d5f90",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-7bb4c0384e7b9bd2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-7dcc28213e77ca10",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-7eb6859ee2900a09",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-805603c0abec6a41",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-8215d613efe008e5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-826af1aadea8a2a2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-84aeea1469371ad0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-88e9824aa8dee492",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-966d9a0421f5aca7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-a2f42158102994ba",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-a61fb64c9ad4d3cf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-b47986aa995ddcee",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-b527f8094b4862cd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-b5e13b469404a830",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-b65a0b706586f74b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-bb21ebea708be18",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-cefb5434ab6a860d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-cf00ff91628d8b55",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-cf6bce1eb310bb31",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-e824feb1e6845b4c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-ebdf2d3dc880e69c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-f28391297b0fd63c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-f475d7e6b8b5e358",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-f77f4478b2e1e2cc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-f821b32b524e0223",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-fe992287434e6f74",
            "relatedSpdxElement": "SPDXRef-Package-fb566b575b2aff17",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-com-golog",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-com-log",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-com-pylog",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-a1",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-alarm-cpp",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-alarm-go",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-appmgr",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-asn1-documents",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-conflictmgr",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-dbaas",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-o-ran-ric-ric-plt-dbaas",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-dbaas-hiredis-vip",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-demo1",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-e2",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-e2mgr",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-jaegeradapter",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-lib-rmr",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-libe2ap",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-nodeb-rnib",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-o1",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-ric-dep",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-ric-test",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-ricctl",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-ricdms",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-rtmgr",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-sdl",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-sdlgo",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-sdlpy",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-streaming-protobufs",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-stslgo",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-submgr",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-tracelibcpp",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-tracelibgo",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-utils",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-vespamgr",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-xapp-frame",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-xapp-frame-cpp",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-xapp-frame-py",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-232b7863a232512e",
            "relatedSpdxElement": "SPDXRef-o-ran-ric-ric-plt-xapp-frame-rust",
            "relationshipType": "CONTAINS"
        }
    ]
}